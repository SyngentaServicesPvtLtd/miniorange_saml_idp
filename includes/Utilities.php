<?php


include_once "\114\x6f\x67\157\165\164\122\x65\161\165\x65\163\x74\x2e\160\150\x70";
class Utilities
{
    public static function generateCertificate($il, $Bt, $Oz, $Zs)
    {
        $j9 = dirname(dirname(__FILE__)) . DIRECTORY_SEPARATOR . "\162\145\x73\157\165\x72\143\x65\163" . DIRECTORY_SEPARATOR . "\x6f\x70\x65\156\163\163\154\56\x63\156\146";
        $MQ = array("\143\157\156\x66\151\x67" => $j9, "\x64\151\x67\145\163\x74\x5f\x61\154\x67" => "{$Bt}", "\x70\162\151\x76\141\x74\x65\x5f\153\145\x79\137\x62\151\x74\163" => $Oz, "\x70\162\151\x76\x61\x74\145\x5f\153\x65\171\137\x74\171\160\x65" => OPENSSL_KEYTYPE_RSA);
        $nP = openssl_pkey_new($MQ);
        $OU = openssl_csr_new($il, $nP, $MQ);
        $wW = openssl_csr_sign($OU, null, $nP, $Zs, $MQ, time());
        openssl_x509_export($wW, $gD);
        openssl_pkey_export($nP, $Am, null, $MQ);
        openssl_csr_export($OU, $yz);
        nM:
        if (!(($bx = openssl_error_string()) !== false)) {
            goto Nv;
        }
        error_log($bx);
        goto nM;
        Nv:
        $Lj = array("\x70\165\142\x6c\x69\x63\x5f\x6b\145\171" => $gD, "\x70\162\x69\166\x61\164\x65\137\153\x65\x79" => $Am);
        $G7 = drupal_get_path("\x6d\x6f\144\x75\x6c\145", "\155\x69\156\x69\157\x72\x61\x6e\147\x65\x5f\163\x61\155\154\x5f\x69\144\x70") . "\57\162\x65\x73\x6f\x75\x72\143\145\163\x2f\x43\x75\x73\164\157\x6d\137\120\165\x62\154\x69\x63\137\103\145\x72\164\x69\146\151\143\141\164\145\x2e\x63\x72\164";
        file_put_contents($G7, $Lj["\160\165\x62\154\151\x63\x5f\153\145\171"]);
        $rN = drupal_get_path("\155\x6f\x64\x75\154\x65", "\155\x69\x6e\x69\x6f\162\141\156\147\x65\137\163\141\155\154\x5f\151\x64\160") . "\57\162\145\163\x6f\x75\x72\143\x65\163\x2f\103\165\x73\164\x6f\155\137\120\x72\151\166\x61\x74\145\137\x43\x65\162\x74\151\146\x69\x63\141\164\x65\x2e\x6b\145\171";
        file_put_contents($rN, $Lj["\x70\x72\x69\x76\141\164\x65\137\153\x65\x79"]);
        variable_set("\155\151\156\151\157\162\x61\156\147\145\x5f\x73\x61\155\x6c\137\x69\x64\x70\137\160\165\142\154\137\143\x65\162\x74\151\x66\x69\x63\x61\164\145", $Lj["\160\165\x62\x6c\151\143\137\153\x65\171"]);
        variable_set("\x6d\151\156\151\x6f\162\141\156\147\145\x5f\163\x61\x6d\154\137\151\144\x70\137\x70\162\151\x76\141\164\145\137\143\x65\x72\x74\151\x66\151\x63\x61\164\x65", $Lj["\160\x72\151\166\x61\164\145\137\153\145\171"]);
    }
    public static function getVariableNames($UC)
    {
        if ($UC == "\155\157\137\x6f\160\x74\x69\x6f\x6e\163\x5f\x65\156\165\155\x5f\x69\x64\x65\x6e\x74\x69\164\171\137\160\162\x6f\x76\151\x64\145\x72") {
            goto Ll;
        }
        if ($UC == "\155\x6f\x5f\x6f\160\164\151\157\156\x73\137\145\x6e\165\x6d\x5f\163\145\162\166\151\x63\145\137\160\x72\157\x76\x69\x64\145\x72") {
            goto z1;
        }
        if ($UC == "\155\157\137\x6f\160\164\151\157\156\x73\x5f\141\164\164\162\151\x62\x75\164\x65\137\155\x61\160\x70\x69\x6e\147") {
            goto xo;
        }
        if ($UC == "\x6d\x6f\137\157\x70\x74\x69\157\156\x73\x5f\x73\151\x67\156\x69\x6e\137\x73\x65\164\x74\156\x67\163") {
            goto VX;
        }
        if (!($UC == "\x6d\x6f\x5f\x6f\x70\x74\151\x6f\x6e\163\137\x63\x75\163\x74\157\155\x5f\143\x65\x72\x74\x69\146\x69\x63\141\x74\145")) {
            goto vx;
        }
        $zL = array("\x63\x75\163\x74\157\x6d\x5f\160\x75\x62\154\151\x63\137\143\145\x72\x74\x69\146\151\x63\x61\x74\x65" => "\x6d\x69\156\151\x6f\162\x61\x6e\x67\145\x5f\163\141\155\x6c\137\x69\144\160\137\x70\165\x62\154\x5f\x63\145\x72\x74\151\x66\x69\x63\141\164\x65", "\143\165\163\x74\157\x6d\137\x70\x72\x69\x76\141\x74\x65\x5f\x63\x65\162\x74\x69\x66\151\143\x61\x74\x65" => "\x6d\151\x6e\x69\157\x72\x61\156\147\x65\x5f\163\x61\155\154\137\x69\144\x70\137\x70\x72\x69\x76\x61\x74\x65\x5f\x63\145\x72\x74\x69\x66\x69\x63\x61\x74\145");
        vx:
        goto q2;
        VX:
        $zL = array("\114\x6f\147\x69\156\x5f\x55\122\114" => "\x6d\x69\x6e\x69\x6f\162\x61\x6e\x67\145\137\163\x61\x6d\x6c\x5f\151\144\x70\x5f\144\162\165\160\x61\154\x5f\154\157\x67\151\156\x5f\x70\x61\x67\x65\x5f\x75\x72\x6c");
        q2:
        goto My;
        xo:
        $zL = array("\116\141\155\145\151\x64\x5f\141\164\x74\162" => "\x6d\151\156\x69\x6f\x72\x61\x6e\147\x65\137\x73\x61\155\x6c\137\151\144\x70\x5f\x6e\x61\x6d\145\x69\x64\137\141\164\164\162\137\x6d\141\160", "\x61\x74\164\162\x31\137\x6e\141\155\x65" => "\155\151\156\x69\x6f\162\141\x6e\x67\x65\137\x73\x61\x6d\x6c\x5f\x69\x64\x70\137\141\164\x74\162\61\137\x6e\141\155\x65", "\x61\164\x74\x72\61\137\x76\141\x6c\x75\145" => "\x6d\x69\x6e\151\157\x72\x61\156\147\x65\x5f\x73\x61\155\154\x5f\x69\144\160\137\x61\164\x74\162\61\x5f\x76\x61\154\x75\145", "\141\164\x74\162\62\137\156\x61\155\145" => "\155\151\156\151\x6f\162\x61\156\147\145\x5f\163\141\155\154\137\151\x64\160\x5f\141\x74\x74\x72\x32\137\x6e\x61\x6d\x65", "\x61\x74\164\162\x32\x5f\166\141\x6c\x75\x65" => "\x6d\x69\156\151\x6f\x72\141\156\x67\145\137\163\x61\155\x6c\x5f\x69\144\x70\x5f\141\164\164\162\62\137\166\141\154\x75\145", "\x61\x74\164\162\63\x5f\x6e\141\155\x65" => "\155\x69\156\151\157\162\x61\156\147\145\137\x73\141\155\154\137\151\x64\x70\x5f\141\164\x74\162\63\x5f\x6e\141\x6d\x65", "\141\164\x74\162\63\137\166\141\x6c\x75\145" => "\155\151\x6e\x69\x6f\162\x61\x6e\x67\x65\137\x73\x61\155\154\x5f\x69\x64\x70\x5f\141\x74\164\x72\63\x5f\166\x61\x6c\165\145", "\x61\164\164\162\x34\137\x6e\141\155\145" => "\x6d\151\x6e\x69\157\x72\x61\x6e\147\x65\137\x73\x61\155\x6c\x5f\151\x64\160\x5f\x61\x74\164\162\64\137\156\x61\x6d\145", "\x61\x74\x74\x72\x34\137\166\141\x6c\165\145" => "\x6d\151\156\151\x6f\x72\x61\156\147\x65\137\x73\x61\155\154\x5f\x69\x64\x70\137\141\164\x74\x72\x34\x5f\166\141\x6c\x75\145", "\x61\x74\164\162\151\142\x75\x74\x65\137\x6d\x61\x70\160\151\x6e\147" => "\155\x69\x6e\151\x6f\162\x61\x6e\x67\145\137\x73\x61\x6d\x6c\137\x69\x64\160\x5f\165\163\145\x72\137\x61\164\x74\162\x69\x62\165\164\x65\x73");
        My:
        goto Tr;
        z1:
        $zL = array("\123\145\x72\x76\151\x63\145\137\120\x72\x6f\x76\151\x64\145\x72\137\116\141\x6d\x65" => "\155\151\x6e\151\157\x72\141\x6e\x67\145\137\163\141\155\x6c\x5f\151\x64\x70\137\x73\160\x5f\x6e\x61\x6d\145", "\x41\103\123\137\x55\122\114" => "\x6d\151\156\x69\x6f\x72\x61\156\147\145\137\x73\x61\155\154\x5f\151\x64\x70\137\x61\x63\x73\137\x75\162\x6c", "\111\163\163\x75\x65\x72" => "\x6d\151\x6e\x69\x6f\x72\141\x6e\x67\x65\137\x73\141\x6d\154\x5f\x69\144\x70\x5f\x73\x70\137\145\x6e\164\151\164\171\137\x69\144", "\116\141\x6d\x65\x49\144\x5f\x46\x6f\162\155\141\x74" => "\x6d\151\x6e\x69\157\x72\141\x6e\147\x65\x5f\163\x61\x6d\154\137\151\x64\x70\137\156\x61\155\x65\x69\144\137\x66\157\162\x6d\141\x74", "\122\145\154\141\x79\137\x53\164\x61\164\x65" => "\x6d\151\x6e\151\x6f\162\141\156\x67\145\137\x73\141\155\x6c\x5f\151\x64\x70\137\x72\145\x6c\141\x79\x5f\x73\164\x61\164\x65", "\123\151\147\x6e\x65\x64\x5f\x43\145\162\164\x69\146\151\143\x61\164\x65" => "\155\x69\x6e\x69\157\162\141\156\x67\145\137\163\x61\x6d\x6c\x5f\151\x64\160\137\x63\x65\x72\x74\151\x66\151\x63\141\164\x65\137\x73\x69\147\156\x65\144", "\105\x6e\x63\162\x79\160\x74\x65\x64\137\103\x65\x72\164\x69\146\x69\143\x61\x74\x65" => "\x6d\x69\156\x69\157\x72\141\x6e\147\145\137\x73\141\x6d\x6c\137\151\x64\x70\x5f\143\x65\162\164\151\146\x69\x63\x61\164\x65\x5f\x65\156\x63\162\x79\160\164\x65\x64", "\101\x73\x73\145\x72\164\x69\157\x6e\x5f\123\x69\147\156\x65\x64" => "\x6d\151\x6e\151\x6f\x72\x61\x6e\x67\145\137\163\141\x6d\x6c\137\151\x64\x70\137\141\163\163\x65\x72\x74\x69\157\x6e\137\163\x69\147\156\145\144", "\x52\145\163\x70\x6f\x6e\163\145\x5f\x53\x69\x67\156\145\144" => "\155\151\156\x69\x6f\162\141\x6e\147\145\137\163\141\x6d\x6c\x5f\x69\144\160\x5f\162\145\x73\160\157\156\x73\145\x5f\163\151\147\156\145\144", "\x41\x73\163\145\162\164\151\x6f\156\137\123\x69\147\156" => "\155\151\156\x69\x6f\162\x61\156\147\145\x5f\x73\x61\x6d\x6c\137\151\144\x70\x5f\141\163\163\145\x72\x74\151\157\156\137\x73\151\x67\156\145\x64", "\x45\156\143\162\x79\160\x74\145\x64\x5f\x41\x73\x73\x65\162\164\151\x6f\x6e" => "\x6d\151\x6e\151\157\162\x61\x6e\147\145\137\x73\141\x6d\154\137\151\144\160\137\x65\x6e\x63\162\171\160\x74\145\144\137\141\163\x73\145\x72\164\x69\x6f\156");
        Tr:
        goto bH;
        Ll:
        $zL = array("\111\x44\120\x5f\x42\141\x73\145\137\125\x72\x6c" => "\155\x69\156\151\157\x72\141\156\x67\x65\x5f\x73\141\x6d\x6c\137\151\144\160\137\151\163\x73\165\x65\x72", "\x49\104\x50\x5f\x45\x6e\x74\x69\x74\x79\x5f\111\104" => "\155\151\x6e\x69\157\162\141\156\x67\x65\x5f\x73\x61\x6d\154\137\151\144\160\137\151\163\163\165\x65\162");
        bH:
        return $zL;
    }
    public static function faq(&$form, &$form_state)
    {
        $form["\155\151\x6e\x69\x6f\x72\x61\156\147\145\x5f\x69\144\x70\137\147\x75\151\x64\x65\x5f\x6c\x69\156\x6b\167"] = array("\x23\155\141\162\x6b\165\160" => "\74\144\x69\166\40\x63\x6c\141\x73\x73\75\x22\155\157\x5f\163\x61\x6d\x6c\137\164\x61\x62\x6c\145\137\x6c\141\x79\x6f\165\164\137\163\165\160\160\157\x72\x74\x5f\x31\x22\x20\163\x74\x79\154\x65\75\x22\155\x61\x72\x67\x69\156\55\164\x6f\x70\72\x20\65\160\x78\73\42\76");
        $form["\x6d\151\156\x69\157\x72\x61\156\147\145\137\x66\x61\x71"] = array("\43\155\141\x72\153\x75\160" => "\x3c\142\76\x3c\57\142\x3e\x3c\x61\x20\x63\154\x61\x73\163\75\42\142\164\x6e\x20\142\x74\x6e\55\160\x72\x69\155\141\162\171\55\146\141\x71\40\142\x74\156\55\154\141\x72\x67\145\x20\142\x74\156\x5f\x66\141\x71\137\x62\x75\x74\164\157\x6e\x73\x22\40\163\x74\171\x6c\145\x3d\42\146\154\x6f\141\x74\x3a\40\x6c\145\146\x74\73\x63\x6f\x6c\157\x72\72\40\x23\x34\70\141\60\x64\143\73\142\x6f\162\144\145\x72\72\40\62\x70\x78\x20\163\x6f\x6c\151\x64\x20\43\x34\x38\141\x30\144\143\73\42\x20\150\162\145\146\75\42\x68\x74\164\x70\x73\x3a\x2f\57\x66\x61\x71\56\x6d\151\x6e\x69\x6f\x72\x61\156\147\x65\x2e\x63\x6f\155\57\153\x62\x2f\x64\x72\x75\160\141\154\57\x22\40\164\x61\x72\147\145\164\75\x22\137\x62\154\x61\156\153\x22\x3e" . "\106\162\x65\x71\x75\x65\x6e\164\x6c\171\40\141\x73\x6b\x65\x64\x20\161\x75\x65\163\x74\151\x6f\156\x73\74\x2f\x61\76");
        $form["\x6d\x69\x6e\151\157\x72\141\156\147\145\x5f\x66\157\162\x75\x6d"] = array("\x23\155\x61\162\x6b\165\160" => "\x3c\142\76\74\x2f\142\76\74\141\x20\143\154\x61\163\163\75\x22\142\x74\156\40\x62\x74\x6e\55\160\x72\x69\x6d\141\x72\171\x2d\146\141\x71\x20\x62\164\x6e\55\x6c\141\162\147\x65\40\142\164\156\137\146\x61\x71\x5f\142\165\164\x74\157\156\x73\x22\40\x73\x74\171\154\x65\x3d\x22\x66\154\157\141\x74\72\x20\162\x69\147\150\164\73\x63\x6f\154\x6f\x72\72\40\43\x34\70\141\x30\x64\x63\73\142\x6f\162\144\145\162\72\40\62\x70\170\x20\x73\x6f\x6c\151\144\x20\43\x34\70\141\x30\144\143\x3b\42\40\x68\162\145\x66\x3d\x22\150\164\x74\160\x73\x3a\57\x2f\146\157\162\165\155\56\x6d\x69\156\151\x6f\162\x61\x6e\x67\x65\56\x63\157\155\57\x22\40\x74\x61\x72\x67\x65\x74\75\42\137\x62\154\x61\156\153\x22\x3e" . "\101\x73\153\x20\161\165\x65\163\164\x69\157\x6e\x73\x20\157\156\x20\x66\157\x72\165\x6d\74\x2f\x61\x3e");
        $form["\155\141\x72\153\x75\160\137\164\x65\163\x74\137\144\x69\166"] = array("\x23\x6d\x61\x72\x6b\x75\x70" => "\74\57\144\x69\166\76");
    }
    public static function isCustomer_registered(array &$form, $form_state)
    {
        global $base_url;
        if (variable_get("\155\151\156\151\x6f\162\x61\156\147\x65\137\163\141\155\x6c\x5f\x69\144\160\137\x63\165\x73\164\x6f\155\x65\x72\x5f\x61\x64\x6d\x69\x6e\x5f\x65\x6d\x61\x69\x6c", NULL) == NULL || variable_get("\x6d\x69\x6e\x69\157\162\141\x6e\x67\145\x5f\x73\x61\x6d\x6c\x5f\x69\144\x70\137\143\x75\x73\x74\157\155\145\162\x5f\151\144", NULL) == NULL || variable_get("\x6d\151\x6e\x69\x6f\162\x61\x6e\147\145\x5f\163\x61\x6d\x6c\x5f\x69\144\x70\137\143\165\163\164\157\155\x65\x72\137\x61\x64\155\x69\x6e\x5f\164\x6f\153\x65\x6e", NULL) == NULL || variable_get("\155\151\156\151\157\162\141\x6e\x67\x65\137\163\141\155\154\x5f\x69\x64\160\137\x63\x75\163\164\157\155\145\x72\x5f\141\160\x69\137\153\145\x79", NULL) == NULL) {
            goto gy;
        }
        if (!(variable_get("\x6d\151\156\x69\157\162\141\x6e\147\145\x5f\163\x61\155\x6c\137\x69\x64\160\137\x73\155\x6c\x5f\x6c\x6b", NULL) == NULL)) {
            goto rE;
        }
        $form["\155\x61\x72\x6b\165\160\137\163\x61\x6d\x6c\137\x69\x64\160\137\154\x69\x63\145\156\163\145\x5f\x6d\145\x73\x73\x61\147\x65"] = array("\x23\x6d\141\162\x6b\165\160" => "\x3c\144\151\166\x20\163\x74\x79\154\x65\75\42\x64\151\163\160\x6c\x61\x79\72\142\x6c\x6f\143\x6b\x3b\x20\155\141\162\x67\151\156\55\164\157\160\72\x31\x30\160\x78\x3b\x63\157\x6c\157\x72\x3a\162\x65\x64\73\40\x62\141\x63\153\147\162\x6f\x75\x6e\144\55\143\x6f\x6c\x6f\x72\x3a\162\147\x62\x61\x28\x32\x35\x31\54\40\x32\x33\62\x2c\40\x30\54\x20\x30\56\x31\x35\51\73\40\x74\145\170\x74\55\141\x6c\x69\147\156\x3a\143\x65\156\164\x65\x72\x3b\40\160\141\144\x64\x69\x6e\x67\x3a\x35\160\170\73\40\x62\157\162\x64\145\x72\72\163\x6f\x6c\x69\x64\40\x31\x70\x78\x20\x72\x67\142\141\x28\x32\x35\65\x2c\40\60\54\40\71\54\40\x30\x2e\63\66\51\73\x22\76" . "\x20\120\x6c\x65\x61\x73\145\x20\74\141\40\150\162\145\x66\75\42" . $base_url . "\57\x3f\161\75\x61\144\155\x69\156\57\x63\157\156\146\151\147\57\160\145\x6f\x70\154\145\57\155\x69\x6e\x69\x6f\162\x61\x6e\147\145\x5f\x73\141\x6d\154\x5f\151\144\160\42\x3e\x61\143\164\151\166\x61\x74\x65\x20\x74\150\x65\40\x6c\x69\x63\145\156\163\145\74\x2f\141\76" . "\x20\x74\157\40\145\156\x61\x62\x6c\x65\x20\104\x72\165\x70\x61\154\x20\x49\x44\120\56\x3c\57\x64\x69\166\x3e");
        return TRUE;
        rE:
        goto Cb;
        gy:
        $form["\155\141\162\x6b\x75\160\x5f\x73\141\x6d\x6c\137\151\144\x70\x5f\x72\x65\147\163\x69\x74\x72\x61\x74\x69\x6f\x6e\137\155\145\x73\163\141\147\x65"] = array("\x23\x6d\x61\x72\x6b\x75\x70" => "\74\x64\151\166\40\x73\x74\x79\154\x65\x3d\x22\x64\x69\163\x70\x6c\141\x79\72\x62\x6c\x6f\143\x6b\73\x20\x6d\141\x72\x67\151\x6e\x2d\x74\x6f\160\72\61\60\160\x78\73\x20\143\157\154\157\x72\72\162\x65\x64\73\x20\142\141\x63\x6b\x67\162\x6f\165\x6e\x64\55\143\157\154\x6f\x72\72\x72\x67\x62\x61\50\x32\65\x31\x2c\40\62\x33\x32\54\40\x30\x2c\x20\x30\x2e\61\65\51\73\40\x70\141\144\144\x69\156\147\x3a\65\x70\170\x3b\164\x65\x78\x74\55\x61\x6c\151\147\156\x3a\40\x63\145\156\x74\145\162\x3b\40\142\157\162\x64\x65\162\x3a\x73\x6f\x6c\151\x64\40\61\160\170\40\x72\147\142\141\50\62\x35\x35\x2c\40\60\54\x20\x39\x2c\x20\60\56\63\x36\51\x3b\x22\x3e" . "\x20\120\154\145\x61\163\x65\x20\74\x61\40\x68\162\x65\146\x3d\42" . $base_url . "\57\77\x71\75\141\x64\155\151\156\x2f\143\x6f\156\x66\x69\x67\x2f\160\x65\157\x70\x6c\x65\57\155\x69\x6e\151\157\162\x61\156\147\145\137\163\x61\155\154\137\151\x64\160\x22\76\x52\x65\x67\151\x73\164\x65\x72\40\x6f\x72\40\114\x6f\x67\151\x6e\40\167\x69\x74\x68\x20\155\151\x6e\151\x4f\x72\141\x6e\147\x65\74\57\x61\x3e" . "\40\164\x6f\40\145\x6e\x61\x62\x6c\145\40\x44\x72\165\160\x61\154\40\x49\x44\120\x2e\74\x2f\144\x69\166\76");
        return TRUE;
        Cb:
    }
    public static function AddsupportTab(array &$form, $form_state)
    {
        $U7 = Utilities::getEmailandPhone();
        $form["\155\x61\x72\153\x75\x70\x5f\151\x64\160\x5f\141\x74\164\x72\x5f\x68\145\x61\144\x65\x72\x5f\x74\x6f\160\x5f\x73\165\x70\x70\x6f\162\x74"] = array("\x23\x6d\x61\162\x6b\165\160" => "\x3c\x64\151\x76\40\x63\154\141\x73\163\75\x22\155\x6f\137\x73\x61\x6d\154\x5f\x74\x61\142\x6c\145\x5f\x6c\x61\171\x6f\165\164\137\163\165\x70\160\157\x72\x74\137\61\x22\x3e");
        $form["\x6d\x61\x72\153\x75\160\137\x73\165\160\x70\x6f\162\164\137\61"] = array("\43\x6d\x61\162\x6b\165\x70" => "\x3c\150\63\x3e\x3c\x62\76\123\x75\160\160\x6f\x72\x74\x3a\x3c\x2f\142\x3e\74\x2f\150\63\76\74\x64\x69\x76\76\x4e\145\x65\x64\x20\x61\156\171\40\150\x65\154\x70\x3f\40\x4a\x75\163\x74\x20\163\x65\156\144\40\165\x73\40\x61\x20\x71\165\145\x72\171\40\x73\157\x20\167\x65\40\x63\141\x6e\x20\150\145\154\160\x20\171\157\165\56\74\142\x72\x20\x2f\x3e\74\57\144\151\x76\x3e");
        $form["\155\151\156\151\157\162\141\x6e\x67\145\x5f\x73\x61\155\x6c\x5f\x65\155\x61\x69\x6c\137\x61\x64\x64\162\145\163\163\137\163\x75\x70\160\157\162\164"] = array("\43\164\171\160\145" => "\164\x65\x78\x74\146\151\x65\x6c\144", "\43\141\x74\x74\162\151\x62\x75\164\x65\163" => array("\x73\164\171\154\145" => "\x77\x69\x64\164\x68\x3a\61\x30\x30\45", "\160\x6c\x61\x63\x65\x68\157\154\144\x65\162" => "\105\x6e\x74\x65\x72\x20\171\x6f\x75\162\x20\x45\x6d\x61\x69\x6c"), "\x23\144\x65\x66\x61\165\154\x74\x5f\166\x61\x6c\x75\145" => $U7["\x65\x6d\141\x69\x6c"]);
        $form["\x6d\x69\x6e\x69\x6f\162\x61\x6e\x67\145\x5f\163\x61\155\x6c\x5f\x70\150\157\x6e\145\x5f\156\165\155\x62\x65\162\x5f\163\165\160\x70\x6f\162\x74"] = array("\43\164\171\160\145" => "\164\145\170\164\146\x69\145\154\144", "\x23\x61\x74\x74\x72\151\x62\165\164\145\163" => array("\x73\164\x79\154\145" => "\x77\x69\x64\164\150\72\61\x30\60\x25", "\x70\154\141\x63\145\150\x6f\x6c\144\x65\162" => "\x45\156\x74\145\162\40\x79\157\x75\162\40\160\x68\157\156\x65\40\156\165\x6d\x62\145\162\x20\167\x69\164\x68\40\x63\157\x75\x6e\164\162\171\40\x63\157\144\x65\40\145\x67\x2e\50\x2b\71\61\51"), "\43\x64\x65\x66\x61\165\154\x74\137\166\141\x6c\165\145" => $U7["\160\150\x6f\x6e\145"]);
        $form["\155\x69\156\151\157\x72\x61\x6e\147\x65\137\163\x61\155\154\137\x73\165\x70\x70\157\x72\x74\137\x71\165\145\x72\171\137\x73\x75\x70\x70\x6f\x72\x74"] = array("\x23\x74\171\x70\145" => "\x74\145\170\x74\x61\x72\x65\x61", "\43\x63\x6f\x6c\163" => "\x31\60", "\x23\162\x6f\x77\163" => "\65", "\43\141\x74\x74\162\151\x62\x75\x74\145\163" => array("\163\x74\171\154\145" => "\167\x69\144\164\x68\72\61\x30\x30\x25", "\160\154\x61\143\x65\x68\157\x6c\x64\x65\162" => "\127\x72\151\x74\145\40\x79\157\x75\162\x20\x71\165\x65\x72\171\40\150\145\x72\145\56"), "\x23\162\x65\163\151\172\x61\x62\x6c\x65" => False);
        $form["\155\151\156\x69\x6f\x72\141\156\x67\x65\137\x73\x61\x6d\154\137\x73\x75\x70\160\x6f\162\x74\137\x73\165\142\155\151\x74\137\143\154\151\143\x6b"] = array("\43\164\171\160\x65" => "\163\x75\142\155\x69\x74", "\43\x76\x61\154\165\145" => t("\x53\x75\142\155\x69\x74\x20\x51\165\145\162\171"), "\43\163\x75\142\155\x69\x74" => array("\x55\x74\x69\154\x69\164\151\145\163\72\x3a\x6d\151\x6e\151\157\162\141\156\x67\145\x5f\163\x61\155\x6c\x5f\151\144\x70\x5f\163\145\156\x64\137\x71\x75\x65\x72\171"), "\43\x61\x74\x74\x72\x69\142\165\x74\145\163" => array("\x73\164\171\x6c\x65" => "\142\141\143\x6b\x67\162\157\x75\x6e\144\x3a\x20\x23\x33\63\67\x61\142\x37\73\143\x6f\x6c\157\162\72\x20\x23\x66\x66\x66\146\146\146\x3b\164\x65\170\x74\55\x73\x68\x61\x64\157\x77\72\x20\60\x20\x2d\x31\x70\170\40\61\x70\x78\x20\x23\x33\63\67\141\x62\67\x2c\x20\x31\160\x78\40\x30\40\61\160\x78\40\43\63\63\x37\x61\x62\67\54\40\60\40\x31\160\170\40\x31\160\170\x20\43\x33\x33\67\x61\142\67\x2c\x20\55\x31\160\170\x20\60\40\61\160\170\40\43\x33\63\x37\x61\x62\x37\x3b\x62\x6f\170\55\163\x68\x61\x64\x6f\x77\x3a\x20\x30\x20\x31\160\x78\x20\x30\40\43\x33\x33\x37\141\x62\67\73\x62\x6f\162\144\145\162\x2d\x63\157\154\157\162\72\40\43\x33\63\x37\141\142\67\40\x23\x33\63\x37\141\142\x37\x20\x23\63\x33\67\141\x62\67\73\x64\151\163\x70\154\141\x79\x3a\142\154\x6f\x63\153\x3b\x6d\141\x72\x67\151\x6e\x2d\154\x65\x66\164\72\141\x75\x74\157\x3b\x6d\141\x72\147\151\156\x2d\162\151\x67\150\164\72\x61\165\164\157\x3b"));
        $form["\155\x69\156\151\157\x72\x61\156\x67\x65\137\x73\141\155\154\137\163\x75\x70\160\157\x72\164\137\x6e\157\x74\145"] = array("\x23\x6d\141\162\x6b\165\160" => "\x3c\x64\x69\166\76\x49\146\40\x79\157\x75\x20\167\x61\x6e\x74\x20\143\165\163\164\157\155\x20\x66\x65\x61\164\165\x72\x65\163\40\x69\156\40\x74\150\145\x20\x6d\157\x64\x75\154\x65\x2c\x20\x6a\165\x73\x74\x20\144\x72\157\x70\40\141\x6e\40\x65\x6d\x61\x69\x6c\x20\x74\x6f\x20\74\x61\x20\150\x72\x65\x66\75\42\155\x61\x69\x6c\x74\157\72\x69\156\x66\157\x40\170\x65\x63\165\162\x69\x66\x79\56\143\x6f\155\42\76\x69\x6e\x66\157\100\170\145\143\165\x72\x69\x66\x79\56\143\157\155\x3c\x2f\x61\x3e\x3c\57\x64\151\166\x3e\x3c\x2f\x64\151\x76\76");
    }
    public static function miniorange_saml_idp_send_query($form, &$form_state)
    {
        $kY = $form["\x6d\151\156\x69\157\162\x61\x6e\147\145\x5f\163\141\x6d\x6c\x5f\x65\x6d\x61\x69\x6c\137\141\144\144\162\145\163\163\137\x73\165\160\x70\157\x72\164"]["\43\166\141\154\x75\145"];
        $J9 = $form["\155\151\156\x69\157\162\141\156\x67\145\137\x73\x61\x6d\154\x5f\160\x68\x6f\156\x65\137\x6e\x75\x6d\142\145\x72\137\163\x75\x70\x70\x6f\x72\164"]["\43\166\x61\154\x75\x65"];
        $zk = $form["\155\x69\156\x69\x6f\162\x61\156\147\x65\x5f\x73\141\x6d\154\x5f\x73\x75\x70\160\x6f\162\x74\137\x71\x75\145\x72\171\137\x73\165\160\x70\x6f\162\x74"]["\43\166\x61\154\165\145"];
        Utilities::send_support_query($kY, $J9, $zk);
    }
    public static function send_support_query($kY, $J9, $zk)
    {
        if (empty($kY) || empty($zk)) {
            goto T4;
        }
        if (!valid_email_address($kY)) {
            goto MT;
        }
        goto sg;
        T4:
        drupal_set_message(t("\x54\150\x65\x20\74\142\x3e\74\165\76\105\x6d\141\x69\x6c\x3c\x2f\x75\x3e\74\x2f\142\x3e\x20\x61\x6e\144\x20\x3c\142\76\x3c\x75\76\121\x75\145\162\x79\x3c\x2f\165\x3e\74\57\142\x3e\40\x66\151\145\x6c\x64\163\40\x61\x72\x65\40\155\x61\x6e\x64\x61\x74\157\x72\x79\56"), "\145\x72\x72\x6f\x72");
        return;
        goto sg;
        MT:
        drupal_set_message(t("\x54\150\145\x20\x65\x6d\141\151\154\40\x61\144\144\162\x65\x73\163\x20\74\x62\x3e\x3c\x69\76" . $kY . "\x3c\x2f\151\76\x3c\x2f\142\x3e\x20\151\x73\x20\156\x6f\x74\x20\166\141\x6c\x69\x64\x2e"), "\145\x72\x72\157\162");
        return;
        sg:
        $z6 = new MiniorangeSAMLIdpSupport($kY, $J9, $zk);
        $vp = $z6->sendSupportQuery();
        if ($vp) {
            goto Qk;
        }
        drupal_set_message(t("\x45\x72\162\157\162\40\x73\145\156\x64\151\x6e\147\x20\163\165\x70\x70\157\162\x74\40\x71\x75\x65\x72\x79\x2e"), "\145\162\162\157\x72");
        goto Jj;
        Qk:
        drupal_set_message(t("\124\x68\141\156\153\163\40\x66\x6f\162\40\147\145\164\x74\x69\x6e\147\40\151\x6e\x20\x74\x6f\165\x63\x68\x21\40\x57\x65\x20\163\150\141\x6c\154\40\147\x65\x74\40\x62\141\x63\153\40\164\157\40\171\157\165\40\x73\x68\x6f\162\x74\x6c\x79\56"));
        Jj:
    }
    public static function getEmailandPhone()
    {
        $Kt = variable_get("\155\x69\156\x69\157\x72\x61\x6e\x67\x65\x5f\163\x61\155\154\137\x69\x64\160\x5f\143\x75\x73\164\157\x6d\145\162\137\x61\144\x6d\x69\156\137\145\x6d\x61\151\x6c", '');
        $je = variable_get("\155\x69\156\151\157\x72\x61\156\x67\x65\x5f\163\141\155\154\137\151\144\160\137\x63\165\x73\x74\157\155\x65\x72\x5f\x61\x64\155\151\156\x5f\160\x68\157\156\x65", '');
        $Ve = array("\145\155\141\151\x6c" => isset($Kt) ? $Kt : '', "\x70\150\157\x6e\x65" => isset($je) ? $je : '');
        return $Ve;
    }
    public static function miniorange_get_baseURL()
    {
        global $base_url;
        $bl = variable_get("\x6d\151\x6e\151\x6f\162\141\x6e\147\x65\137\163\141\x6d\154\137\151\144\x70\x5f\142\x61\163\x65\137\x75\162\154", '');
        $iF = isset($bl) && !empty($bl) ? $bl : $base_url;
        return $iF;
    }
    public static function isCurlInstalled()
    {
        if (in_array("\143\165\x72\154", get_loaded_extensions())) {
            goto dv;
        }
        return 0;
        goto Mh;
        dv:
        return 1;
        Mh:
    }
    public static function generateID()
    {
        return "\137" . self::stringToHex(self::generateRandomBytes(21));
    }
    public static function stringToHex($ra)
    {
        $Xe = '';
        $RJ = 0;
        Cs:
        if (!($RJ < strlen($ra))) {
            goto Dy;
        }
        $Xe .= sprintf("\x25\60\62\170", ord($ra[$RJ]));
        UF:
        $RJ++;
        goto Cs;
        Dy:
        return $Xe;
    }
    public static function generateRandomBytes($CP, $Dy = TRUE)
    {
        return openssl_random_pseudo_bytes($CP);
    }
    public static function createAuthnRequest($KP, $SB, $gw = "\146\x61\154\x73\x65")
    {
        $MV = "\74\x3f\170\155\154\40\x76\145\x72\x73\151\157\x6e\75\42\x31\56\x30\42\40\145\x6e\143\157\x64\x69\156\147\75\42\x55\124\106\55\70\x22\77\x3e" . "\74\163\x61\155\154\x70\x3a\x41\x75\x74\150\x6e\122\x65\161\x75\145\163\x74\x20\x78\155\154\x6e\x73\x3a\163\141\x6d\154\160\x3d\42\x75\x72\156\72\x6f\x61\x73\x69\163\72\x6e\x61\155\145\163\72\x74\x63\72\123\101\115\x4c\72\62\x2e\60\72\160\x72\x6f\164\x6f\143\x6f\154\42\40\x49\x44\75\x22" . self::generateID() . "\42\40\126\145\162\163\x69\x6f\156\x3d\x22\x32\x2e\x30\42\40\x49\163\163\x75\x65\x49\x6e\163\x74\141\x6e\x74\x3d\42" . self::generateTimestamp() . "\x22";
        if (!($gw == "\164\x72\165\x65")) {
            goto jb;
        }
        $MV .= "\x20\106\157\162\143\x65\101\165\x74\150\156\75\42\x74\x72\165\x65\42";
        jb:
        $MV .= "\40\x50\162\x6f\164\157\143\157\x6c\102\151\x6e\x64\151\156\x67\x3d\42\165\x72\156\x3a\157\141\163\x69\163\x3a\x6e\141\155\x65\x73\72\164\143\x3a\123\101\x4d\x4c\x3a\62\56\x30\x3a\x62\151\156\144\151\x6e\x67\x73\x3a\110\124\x54\120\55\120\x4f\x53\124\42\x20\101\x73\163\145\x72\x74\x69\157\x6e\x43\x6f\156\x73\x75\155\145\162\x53\145\162\166\151\x63\x65\125\x52\x4c\75\x22" . $KP . "\x22\40\x3e\x3c\x73\141\155\154\72\111\x73\x73\x75\145\x72\x20\x78\x6d\154\x6e\x73\x3a\x73\141\x6d\x6c\75\42\165\x72\156\x3a\157\141\163\151\163\72\156\x61\155\x65\x73\72\x74\143\72\x53\101\115\x4c\x3a\62\x2e\x30\72\141\x73\x73\x65\162\x74\151\x6f\x6e\42\76" . $SB . "\74\x2f\163\141\155\x6c\x3a\111\163\163\165\145\x72\76\74\57\x73\141\155\154\160\72\x41\165\x74\x68\x6e\x52\x65\x71\x75\x65\x73\x74\x3e";
        $wm = gzdeflate($MV);
        $Av = base64_encode($wm);
        $l4 = urlencode($Av);
        return $l4;
    }
    public static function mo_idp_send_logout_request($iC, $SB, $Ir)
    {
        global $base_url;
        $xQ = $base_url;
        $Tj = variable_get("\x6d\x69\156\151\x6f\162\141\x6e\x67\145\137\x73\141\155\x6c\137\151\144\160\137\x68\164\164\x70\x5f\142\x69\x6e\x64\151\x6e\147", '');
        $KY = drupal_get_path("\x6d\x6f\144\165\x6c\x65", "\155\x69\x6e\x69\x6f\x72\x61\x6e\147\145\137\x73\x61\155\154\x5f\151\144\160");
        $zi = Utilities::createLogoutRequest($iC, '', $SB, $Ir, "\x48\164\164\160\x50\157\x73\x74");
        $Ej = '';
        $Ej = variable_get("\155\x69\156\x69\x6f\x72\x61\156\147\x65\137\x73\x61\155\154\137\x69\144\160\x5f\160\x75\142\154\x5f\143\145\162\x74\151\x66\x69\143\x61\164\x65");
        $K7 = '';
        $K7 = variable_get("\x6d\x69\x6e\151\157\x72\x61\x6e\x67\145\137\163\x61\155\154\137\x69\144\160\137\160\162\x69\166\141\x74\x65\137\x63\145\162\164\x69\x66\x69\x63\141\x74\145");
        if ($Ej != '') {
            goto nL;
        }
        $Mj = $KY . DIRECTORY_SEPARATOR . "\162\x65\163\157\165\x72\143\145\163" . DIRECTORY_SEPARATOR . "\151\144\160\55\x73\151\147\x6e\x69\x6e\x67\56\143\x72\164";
        goto eq;
        nL:
        $Mj = $KY . DIRECTORY_SEPARATOR . "\162\x65\163\157\x75\x72\143\x65\x73" . DIRECTORY_SEPARATOR . "\103\x75\163\164\157\x6d\x5f\x50\x75\x62\x6c\151\x63\137\103\x65\162\x74\x69\146\x69\x63\x61\x74\145\x2e\x63\162\x74";
        eq:
        if ($K7 != '') {
            goto xS;
        }
        $rP = $KY . DIRECTORY_SEPARATOR . "\x72\x65\163\x6f\x75\162\x63\x65\163" . DIRECTORY_SEPARATOR . "\x69\144\x70\55\x73\151\147\156\x69\156\147\x2e\x6b\x65\x79";
        goto aC;
        xS:
        $rP = $KY . DIRECTORY_SEPARATOR . "\x72\145\163\x6f\165\162\x63\x65\x73" . DIRECTORY_SEPARATOR . "\x43\165\x73\164\157\x6d\x5f\120\x72\x69\166\x61\164\145\x5f\103\145\162\164\x69\x66\x69\143\141\164\x65\x2e\153\145\x79";
        aC:
        $aR = Utilities::signXML($zi, $Mj, $rP);
        self::_send_logout_request($aR, $xQ, $Ir);
        return;
    }
    public static function signXML($vM, $Mj, $rP)
    {
        $Pc = new DOMDocument();
        $vM = str_replace("\46", "\46\141\155\x70\73", $vM);
        $Pc->loadXML($vM);
        $qe = $Pc->firstChild;
        $Zb = $qe->ownerDocument->saveXML($qe);
        $aR = base64_encode($Zb);
        return $aR;
    }
    public static function _read_samllogout_request($NU, $kF)
    {
        $zi = $NU["\x53\x41\115\114\x52\145\x71\165\x65\x73\x74"];
        $Pd = '';
        if (!array_key_exists("\122\145\154\x61\171\x53\164\141\x74\145", $NU)) {
            goto Qe;
        }
        $Lm = $NU["\122\x65\154\141\x79\x53\164\x61\x74\145"];
        Qe:
        $zi = base64_decode($zi);
        if (!(array_key_exists("\123\101\115\x4c\122\x65\161\x75\x65\x73\164", $kF) && !empty($kF["\123\x41\x4d\x4c\x52\x65\x71\165\145\x73\164"]))) {
            goto Qd;
        }
        $zi = gzinflate($zi);
        Qd:
        $cm = array_key_exists("\x53\x69\147\101\x6c\147", $NU) ? $NU["\123\x69\x67\x41\154\147"] : null;
        $Lo = array_key_exists("\123\151\x67\156\141\x74\x75\162\145", $NU) ? $NU["\x53\x69\147\156\141\x74\x75\x72\145"] : null;
        $Pc = new DOMDocument();
        $Pc->loadXML($zi);
        $mf = $Pc->firstChild;
        if (!($mf->localName == "\x4c\157\147\x6f\165\164\122\145\x71\165\x65\x73\164")) {
            goto F3;
        }
        $Uy = new SAML2_LogoutRequest($mf);
        $PF = $Uy->getId();
        $SB = $Uy->getIssuer();
        $I4 = variable_get("\155\151\156\x69\x6f\x72\141\x6e\x67\145\137\x73\141\155\x6c\x5f\151\144\x70\x5f\163\x6c\157\137\x75\x72\x6c", '');
        $H5 = self::createLogoutResponse($PF, $SB, $I4, "\110\164\164\160\120\157\163\x74");
        $KY = drupal_get_path("\155\x6f\x64\x75\x6c\x65", "\x6d\151\x6e\x69\x6f\x72\x61\x6e\147\x65\137\163\141\x6d\x6c\x5f\x69\x64\x70");
        $Ej = '';
        $Ej = variable_get("\x6d\x69\x6e\x69\x6f\162\x61\156\147\145\137\163\x61\155\x6c\x5f\151\144\x70\137\x70\x75\142\154\137\x63\x65\x72\x74\151\x66\x69\x63\141\164\145");
        $K7 = '';
        $K7 = variable_get("\x6d\151\x6e\151\x6f\x72\141\x6e\147\145\x5f\x73\141\155\x6c\137\151\x64\160\137\x70\x72\x69\x76\x61\x74\x65\137\x63\145\x72\x74\x69\x66\x69\x63\141\x74\x65");
        if ($Ej != '') {
            goto Vp;
        }
        $Mj = $KY . "\x72\x65\x73\x6f\x75\x72\x63\x65\163" . DIRECTORY_SEPARATOR . "\x69\x64\x70\x2d\163\151\x67\156\x69\156\x67\56\143\x72\164";
        goto Pv;
        Vp:
        $Mj = $KY . "\162\145\163\157\x75\x72\143\x65\x73" . DIRECTORY_SEPARATOR . "\103\x75\x73\164\x6f\155\137\120\165\142\x6c\151\x63\x5f\x43\145\162\x74\151\146\151\x63\141\164\x65\56\x63\x72\x74";
        Pv:
        if ($K7 != '') {
            goto Te;
        }
        $rP = $KY . "\x72\145\x73\x6f\x75\162\x63\x65\x73" . DIRECTORY_SEPARATOR . "\x69\144\160\55\163\x69\147\x6e\x69\156\147\x2e\x6b\x65\171";
        goto w_;
        Te:
        $rP = $KY . "\x72\145\x73\x6f\x75\162\x63\145\163" . DIRECTORY_SEPARATOR . "\103\x75\x73\x74\x6f\155\137\x50\x72\x69\166\x61\164\x65\x5f\103\145\162\x74\x69\146\x69\x63\x61\164\x65\x2e\x6b\145\x79";
        w_:
        $aR = self::signXML($H5, $Mj, $rP);
        self::_send_logout_response($aR, $Lm, $I4);
        F3:
    }
    public static function createLogoutResponse($aC, $SB, $I4, $Ez = "\110\164\164\x70\x52\145\x64\x69\x72\x65\x63\164")
    {
        $MV = "\x3c\77\x78\155\154\40\x76\145\162\163\151\x6f\x6e\75\42\x31\56\60\42\40\x65\x6e\x63\x6f\x64\151\x6e\x67\75\x22\x55\124\x46\55\70\x22\x3f\76\x3c\x73\x61\x6d\x6c\160\72\114\x6f\147\x6f\165\164\122\145\163\x70\x6f\x6e\163\145\40\x78\x6d\x6c\x6e\x73\x3a\x73\141\x6d\154\160\75\42\x75\x72\156\x3a\157\x61\x73\151\x73\x3a\156\141\x6d\145\163\x3a\164\x63\x3a\123\x41\x4d\114\x3a\62\56\60\72\160\x72\157\x74\x6f\143\x6f\x6c\42\x20\170\x6d\154\156\x73\72\x73\x61\155\154\x3d\42\x75\x72\156\72\x6f\141\x73\x69\x73\72\x6e\x61\x6d\x65\163\x3a\x74\x63\x3a\123\x41\x4d\x4c\72\x32\x2e\60\72\141\x73\x73\x65\x72\164\151\x6f\156\x22\x20\x49\x44\x3d\42" . self::generateID() . "\x22\40\126\x65\162\x73\151\157\156\x3d\42\62\56\x30\42\x20\x49\x73\163\x75\x65\x49\156\163\164\141\156\x74\75\42" . self::generateTimestamp() . "\x22\x20\104\x65\163\164\x69\x6e\x61\164\151\x6f\x6e\x3d\x22" . htmlspecialchars($I4) . "\x22\40\111\x6e\x52\145\163\160\x6f\156\163\x65\x54\x6f\x3d\42" . $aC . "\x22\76\74\163\x61\x6d\x6c\x3a\x49\x73\x73\x75\145\162\x20\170\x6d\154\x6e\163\72\x73\141\x6d\154\75\x22\x75\162\156\x3a\157\x61\163\x69\163\x3a\156\x61\x6d\x65\163\x3a\164\143\x3a\x53\101\115\114\72\62\56\x30\x3a\x61\x73\x73\x65\x72\x74\x69\x6f\156\x22\x3e" . htmlspecialchars($SB) . "\x3c\x2f\163\x61\x6d\x6c\72\x49\x73\163\165\x65\162\76\74\163\x61\155\154\160\x3a\x53\164\x61\x74\x75\163\76\x3c\163\141\155\x6c\x70\x3a\x53\164\x61\164\165\163\x43\x6f\x64\145\x20\x56\141\x6c\165\x65\75\42\x75\162\x6e\72\x6f\x61\163\151\x73\x3a\156\141\155\145\x73\72\164\143\x3a\123\x41\115\x4c\x3a\62\x2e\x30\x3a\x73\164\141\x74\x75\x73\x3a\x53\x75\x63\x63\x65\163\163\42\57\x3e\x3c\57\163\141\155\x6c\160\x3a\x53\x74\141\164\x75\x73\x3e\74\57\163\x61\x6d\154\x70\72\114\157\x67\x6f\165\x74\122\x65\x73\x70\157\156\163\x65\x3e";
        if (!(empty($Ez) || $Ez == "\110\x74\164\160\x52\x65\144\x69\162\145\x63\164")) {
            goto ES;
        }
        $wm = gzdeflate($MV);
        $Av = base64_encode($wm);
        $l4 = urlencode($Av);
        $MV = $l4;
        ES:
        return $MV;
    }
    public static function _read_saml_response($NU, $kF)
    {
        $qN = $NU["\123\x41\x4d\114\122\145\x73\x70\x6f\156\163\145"];
        $xQ = '';
        if (!array_key_exists("\122\x65\154\141\x79\123\164\x61\164\x65", $NU)) {
            goto zw;
        }
        $xQ = $NU["\x52\x65\x6c\141\x79\x53\x74\141\164\x65"];
        zw:
        $qN = base64_decode($qN);
        if (!(array_key_exists("\123\x41\x4d\114\122\145\163\x70\x6f\x6e\x73\145", $kF) && !empty($kF["\123\x41\x4d\114\122\145\x73\160\x6f\156\x73\x65"]))) {
            goto oW;
        }
        $qN = gzinflate($qN);
        oW:
        $Pc = new DOMDocument();
        $Pc->loadXML($qN);
        $d4 = $Pc->firstChild;
        if (!($d4->localName == "\x4c\157\x67\x6f\x75\164\122\145\x73\x70\x6f\156\x73\145")) {
            goto Y1;
        }
        if (isset($_SESSION)) {
            goto vH;
        }
        session_start();
        vH:
        session_destroy();
        drupal_goto($xQ);
        die;
        Y1:
    }
    public static function _send_logout_response($aR, $xQ, $Ir)
    {
        $zX = htmlspecialchars($aR);
        echo "\x3c\x66\x6f\162\155\x20\x69\x64\x3d\x22\x72\145\163\x70\157\156\163\145\x66\157\162\x6d\x22\x20\x61\x63\164\151\x6f\x6e\x3d\x22" . $Ir . "\42\x20\x6d\x65\164\150\157\144\x3d\x22\x70\157\163\x74\42\76\12\40\x20\x20\x20\40\x20\74\x69\x6e\160\x75\x74\x20\x74\171\x70\145\x3d\x22\x68\151\x64\x64\145\x6e\42\x20\156\x61\x6d\x65\x3d\x22\123\x41\x4d\x4c\122\x65\163\160\x6f\x6e\163\145\x22\40\x76\141\154\x75\145\x3d\42" . $zX . "\42\40\x2f\76\xa\x20\x20\40\x20\x20\40\x3c\151\x6e\160\x75\164\x20\164\x79\160\x65\x3d\42\x68\151\144\x64\x65\x6e\42\40\156\x61\x6d\145\x3d\x22\122\x65\154\141\171\x53\x74\141\164\145\42\40\166\x61\154\165\145\75\x22" . $xQ . "\42\40\x2f\x3e\12\40\40\x20\40\74\x2f\x66\x6f\162\155\76\xa\40\40\40\40\x3c\x73\143\162\x69\x70\x74\x3e\xa\40\40\x20\40\40\40\x64\157\x63\165\x6d\x65\156\164\x2e\147\145\x74\105\x6c\x65\155\145\156\164\x42\171\111\144\x28\x22\162\145\163\160\157\156\x73\x65\x66\157\162\x6d\42\51\56\163\x75\142\x6d\x69\164\x28\x29\x3b\40\xa\x20\x20\x20\40\74\x2f\163\143\x72\151\160\x74\76";
        session_destroy();
        die;
    }
    public static function _send_logout_request($aR, $xQ, $Ir)
    {
        $D7 = htmlspecialchars($aR);
        echo "\74\x66\x6f\x72\155\x20\x69\x64\x3d\x22\x72\145\x71\x75\145\x73\x74\x66\x6f\x72\155\x22\x20\141\x63\x74\151\157\156\75\x22" . $Ir . "\x22\40\x6d\145\164\x68\157\144\75\42\x70\x6f\x73\164\x22\76\12\40\40\40\x20\x20\40\x3c\151\x6e\160\x75\164\x20\164\x79\x70\x65\x3d\42\x68\x69\x64\x64\145\x6e\42\x20\156\x61\x6d\x65\75\42\x53\101\115\114\x52\x65\161\x75\x65\x73\164\x22\40\x76\141\154\x75\145\x3d\x22" . $D7 . "\42\40\x2f\76\xa\40\40\x20\40\x20\40\74\151\x6e\x70\x75\x74\40\164\x79\160\145\x3d\42\150\151\144\x64\x65\156\42\40\x6e\141\x6d\x65\x3d\42\122\145\x6c\141\x79\x53\x74\x61\x74\x65\x22\x20\166\141\x6c\x75\x65\x3d\x22" . $xQ . "\x22\40\57\x3e\12\40\40\40\40\x3c\x2f\x66\x6f\x72\x6d\x3e\12\x20\40\40\x20\74\163\x63\x72\x69\160\x74\x3e\12\x20\40\x20\40\40\x20\144\x6f\143\165\155\145\x6e\164\x2e\x67\145\164\x45\154\x65\155\145\156\x74\x42\171\x49\144\50\x22\x72\145\161\x75\145\x73\164\146\157\x72\x6d\x22\51\x2e\x73\x75\x62\155\x69\164\x28\51\x3b\x20\40\12\40\40\x20\40\x3c\57\x73\x63\x72\151\160\164\x3e";
        session_destroy();
        die;
    }
    public static function createLogoutRequest($ZU, $Rp = '', $SB, $I4, $Ez)
    {
        $MV = "\x3c\x3f\x78\155\154\x20\x76\x65\162\163\151\x6f\156\x3d\42\x31\x2e\60\42\x20\x65\156\143\x6f\144\x69\156\x67\75\42\x55\124\106\55\x38\42\77\x3e" . "\74\163\141\155\154\x70\x3a\114\157\x67\157\165\x74\x52\x65\x71\x75\x65\x73\164\x20\170\x6d\x6c\156\x73\x3a\163\x61\155\154\160\75\42\x75\x72\x6e\72\x6f\x61\x73\151\x73\x3a\156\x61\x6d\145\163\72\164\x63\x3a\123\101\x4d\114\x3a\x32\56\x30\72\160\x72\157\164\x6f\x63\157\154\42\x20\170\x6d\154\156\x73\x3a\163\141\x6d\x6c\75\42\x75\162\156\x3a\157\141\x73\151\163\72\x6e\x61\x6d\x65\163\72\164\x63\72\123\x41\115\114\x3a\62\56\60\x3a\x61\163\x73\145\162\x74\x69\157\156\x22\40\x49\x44\x3d\x22" . self::generateID() . "\42\40\111\163\x73\x75\x65\x49\x6e\x73\164\141\156\x74\75\x22" . self::generateTimestamp() . "\42\40\x56\x65\x72\163\151\x6f\156\x3d\x22\62\x2e\60\x22\x20\104\x65\x73\164\151\x6e\141\x74\151\x6f\156\75\x22" . $I4 . "\42\x3e\12\x9\11\11\x9\x9\11\x3c\163\141\x6d\x6c\x3a\x49\163\163\165\145\162\x20\170\155\x6c\156\x73\72\163\x61\x6d\154\x3d\x22\165\x72\156\72\157\141\163\x69\163\x3a\156\141\x6d\145\x73\72\x74\143\x3a\123\101\115\x4c\72\62\56\60\72\141\163\x73\145\x72\x74\151\157\x6e\x22\x3e" . $SB . "\74\57\163\x61\x6d\154\72\111\x73\163\x75\x65\162\76\xa\x9\11\x9\11\11\11\x3c\163\141\155\154\x3a\116\x61\x6d\145\x49\104\40\x78\x6d\154\156\163\x3a\x73\x61\x6d\x6c\75\42\x75\162\x6e\x3a\x6f\x61\x73\x69\x73\x3a\156\141\x6d\x65\163\x3a\164\x63\72\x53\101\115\x4c\72\x32\x2e\x30\72\141\163\163\145\162\164\151\157\x6e\42\x3e" . $ZU . "\x3c\x2f\163\141\155\x6c\72\x4e\141\x6d\x65\111\x44\76";
        if (empty($Rp)) {
            goto Ff;
        }
        $MV .= "\x3c\163\x61\x6d\154\x70\72\x53\x65\x73\x73\151\x6f\x6e\111\156\144\x65\170\x3e" . $Rp . "\x3c\x2f\x73\141\155\154\x70\x3a\123\x65\163\163\x69\x6f\x6e\111\156\x64\145\170\x3e";
        Ff:
        $MV .= "\74\x2f\163\141\x6d\154\x70\72\x4c\x6f\147\157\165\164\x52\145\161\165\145\x73\164\x3e";
        if (!(empty($Ez) || $Ez == "\x48\124\x54\x50\x2d\122\145\x64\x69\x72\145\143\164")) {
            goto pW;
        }
        $wm = gzdeflate($MV);
        $Av = base64_encode($wm);
        $l4 = urlencode($Av);
        $MV = $l4;
        pW:
        return $MV;
    }
    public static function generateTimestamp($Md = NULL)
    {
        if (!($Md === NULL)) {
            goto OH;
        }
        $Md = time();
        OH:
        return gmdate("\131\x2d\x6d\55\144\134\124\110\72\x69\72\x73\x5c\x5a", $Md);
    }
    public static function xpQuery(DOMNode $B9, $zk)
    {
        static $GO = NULL;
        if ($B9 instanceof DOMDocument) {
            goto Jo;
        }
        $aQ = $B9->ownerDocument;
        goto rM;
        Jo:
        $aQ = $B9;
        rM:
        if (!($GO === NULL || !$GO->document->isSameNode($aQ))) {
            goto H4;
        }
        $GO = new DOMXPath($aQ);
        $GO->registerNamespace("\163\x6f\141\x70\55\x65\156\166", "\x68\164\164\160\x3a\x2f\x2f\163\143\150\145\x6d\141\x73\x2e\x78\155\x6c\163\157\x61\x70\x2e\157\x72\x67\x2f\163\157\141\160\57\x65\156\166\145\x6c\x6f\x70\145\x2f");
        $GO->registerNamespace("\x73\x61\x6d\x6c\x5f\160\162\x6f\x74\x6f\x63\157\154", "\165\x72\x6e\72\157\141\163\x69\163\72\x6e\x61\155\x65\163\72\x74\x63\72\123\101\115\x4c\x3a\62\56\60\72\160\162\x6f\164\157\143\157\154");
        $GO->registerNamespace("\x73\x61\155\154\137\x61\163\x73\x65\x72\164\151\x6f\x6e", "\x75\162\156\72\x6f\141\163\151\x73\72\156\x61\x6d\145\163\x3a\164\143\x3a\123\101\x4d\x4c\72\x32\56\x30\72\x61\163\163\x65\162\164\151\x6f\x6e");
        $GO->registerNamespace("\x73\141\155\154\137\155\145\x74\x61\x64\141\164\141", "\165\162\156\72\157\141\x73\x69\x73\72\156\x61\x6d\x65\x73\72\164\x63\72\123\101\x4d\x4c\x3a\x32\x2e\x30\x3a\x6d\145\x74\x61\144\141\164\x61");
        $GO->registerNamespace("\144\x73", "\x68\164\164\160\72\57\x2f\167\x77\167\x2e\167\x33\56\x6f\x72\147\57\x32\60\x30\60\57\60\71\57\x78\x6d\154\x64\163\151\x67\x23");
        $GO->registerNamespace("\x78\x65\x6e\143", "\150\164\x74\x70\72\57\57\x77\167\x77\x2e\167\x33\56\157\162\x67\57\62\60\60\61\57\x30\x34\57\170\x6d\x6c\x65\156\143\x23");
        H4:
        $ez = $GO->query($zk, $B9);
        $Xe = array();
        $RJ = 0;
        pw:
        if (!($RJ < $ez->length)) {
            goto os;
        }
        $Xe[$RJ] = $ez->item($RJ);
        Pa:
        $RJ++;
        goto pw;
        os:
        return $Xe;
    }
    public static function parseNameId(DOMElement $vM)
    {
        $Xe = array("\126\141\x6c\165\145" => trim($vM->textContent));
        foreach (array("\x4e\x61\x6d\x65\121\165\141\x6c\x69\146\x69\145\x72", "\x53\120\116\141\x6d\x65\x51\165\141\154\151\146\151\x65\162", "\106\x6f\x72\155\141\164") as $KC) {
            if (!$vM->hasAttribute($KC)) {
                goto mU;
            }
            $Xe[$KC] = $vM->getAttribute($KC);
            mU:
            ly:
        }
        C8:
        return $Xe;
    }
    public static function xsDateTimeToTimestamp($lP)
    {
        $H1 = array();
        $M5 = "\57\x5e\x28\134\x64\134\x64\134\x64\134\144\51\55\x28\x5c\144\x5c\x64\51\55\x28\x5c\x64\x5c\x64\51\x54\50\x5c\x64\x5c\144\x29\x3a\50\134\144\134\144\51\72\x28\134\x64\x5c\144\x29\50\77\x3a\x5c\56\134\x64\53\x29\x3f\x5a\x24\57\104";
        if (!(preg_match($M5, $lP, $H1) == 0)) {
            goto X5;
        }
        echo sprintf("\x6e\x76\x61\154\151\144\x20\x53\x41\x4d\114\x32\x20\x74\x69\x6d\145\x73\x74\x61\x6d\x70\40\160\141\163\163\145\144\40\164\157\x20\x78\163\x44\x61\164\x65\124\x69\155\145\124\157\x54\x69\155\145\163\x74\141\155\x70\x3a\x20" . $lP);
        die;
        X5:
        $Xi = intval($H1[1]);
        $qs = intval($H1[2]);
        $SR = intval($H1[3]);
        $pD = intval($H1[4]);
        $qX = intval($H1[5]);
        $iY = intval($H1[6]);
        $TX = gmmktime($pD, $qX, $iY, $qs, $SR, $Xi);
        return $TX;
    }
    public static function extractStrings(DOMElement $Fz, $ZE, $Qc)
    {
        $Xe = array();
        $B9 = $Fz->firstChild;
        KG:
        if (!($B9 !== NULL)) {
            goto UV;
        }
        if (!($B9->namespaceURI !== $ZE || $B9->localName !== $Qc)) {
            goto X4;
        }
        goto aJ;
        X4:
        $Xe[] = trim($B9->textContent);
        aJ:
        $B9 = $B9->nextSibling;
        goto KG;
        UV:
        return $Xe;
    }
    public static function validateElement(DOMElement $Sw)
    {
        libraries_load("\170\x6d\154\163\145\x63\x6c\151\142\x73");
        $So = new XMLSecurityDSig();
        $So->idKeys[] = "\111\x44";
        $OX = self::xpQuery($Sw, "\x2e\57\144\163\x3a\x53\151\147\x6e\141\x74\165\x72\x65");
        if (count($OX) === 0) {
            goto lj;
        }
        if (count($OX) > 1) {
            goto JI;
        }
        goto cf;
        lj:
        return FALSE;
        goto cf;
        JI:
        echo sprintf("\130\x4d\x4c\x53\145\143\x3a\x20\155\157\x72\145\x20\x74\150\x61\x6e\x20\x6f\x6e\145\x20\163\x69\147\x6e\141\x74\165\162\145\40\145\x6c\145\155\x65\156\x74\x20\151\156\40\162\x6f\x6f\x74\56");
        die;
        cf:
        $OX = $OX[0];
        $So->sigNode = $OX;
        $So->canonicalizeSignedInfo();
        if ($So->validateReference()) {
            goto QT;
        }
        echo sprintf("\x58\115\x4c\x73\145\x63\72\40\144\151\x67\145\163\x74\x20\166\141\x6c\151\144\141\164\151\x6f\x6e\40\146\x61\151\154\145\x64");
        die;
        QT:
        $hN = FALSE;
        foreach ($So->getValidatedNodes() as $KJ) {
            if ($KJ->isSameNode($Sw)) {
                goto a7;
            }
            if ($Sw->parentNode instanceof DOMDocument && $KJ->isSameNode($Sw->ownerDocument)) {
                goto Q0;
            }
            goto sl;
            a7:
            $hN = TRUE;
            goto Nh;
            goto sl;
            Q0:
            $hN = TRUE;
            goto Nh;
            sl:
            vj:
        }
        Nh:
        if ($hN) {
            goto eW;
        }
        echo sprintf("\x58\x4d\x4c\123\145\x63\x3a\40\x54\x68\145\x20\x72\x6f\157\164\40\x65\x6c\x65\x6d\x65\x6e\164\40\151\163\40\156\x6f\x74\x20\163\151\x67\156\x65\144\x2e");
        die;
        eW:
        $Lj = array();
        foreach (self::xpQuery($OX, "\x2e\x2f\144\x73\x3a\x4b\x65\171\x49\x6e\x66\x6f\x2f\x64\x73\72\130\x35\x30\71\x44\x61\164\141\x2f\144\x73\x3a\130\x35\x30\71\103\145\162\164\151\146\151\143\141\164\x65") as $k_) {
            $ZF = trim($k_->textContent);
            $ZF = str_replace(array("\15", "\xa", "\11", "\x20"), '', $ZF);
            $Lj[] = $ZF;
            r2:
        }
        bG:
        $Xe = array("\x53\x69\147\156\x61\x74\165\x72\x65" => $So, "\103\145\162\x74\x69\146\151\143\141\x74\x65\163" => $Lj);
        return $Xe;
    }
    public static function validateSignature(array $v2, XMLSecurityKey $Nv)
    {
        $So = $v2["\x53\x69\147\156\x61\x74\x75\x72\145"];
        $eC = self::xpQuery($So->sigNode, "\56\57\x64\163\72\123\x69\147\156\x65\x64\x49\x6e\x66\157\x2f\144\163\72\x53\x69\x67\156\x61\164\x75\x72\145\x4d\x65\x74\150\x6f\x64");
        if (!empty($eC)) {
            goto W4;
        }
        echo sprintf("\x4d\x69\x73\163\151\x6e\x67\40\123\x69\x67\156\141\164\x75\x72\145\x4d\x65\164\x68\157\x64\40\145\154\x65\x6d\145\x6e\164");
        die;
        W4:
        $eC = $eC[0];
        if ($eC->hasAttribute("\101\x6c\147\x6f\162\x69\x74\x68\x6d")) {
            goto LB;
        }
        echo sprintf("\x4d\151\x73\163\151\x6e\x67\40\101\x6c\x67\157\162\x69\x74\x68\x6d\x2d\141\x74\x74\162\151\142\165\x74\145\40\x6f\x6e\x20\123\x69\147\156\x61\164\165\x72\x65\115\145\x74\x68\157\144\x20\145\x6c\x65\x6d\145\x6e\x74\56");
        die;
        LB:
        $uh = $eC->getAttribute("\101\x6c\147\x6f\x72\x69\164\150\155");
        if (!($Nv->type === XMLSecurityKey::RSA_SHA1 && $uh !== $Nv->type)) {
            goto Mu;
        }
        $Nv = self::castKey($Nv, $uh);
        Mu:
        if ($So->verify($Nv)) {
            goto n1;
        }
        echo sprintf("\125\x6e\x61\142\x6c\145\x20\x74\157\x20\x76\x61\154\151\x64\x61\x74\x65\40\x53\147\x6e\x61\164\165\x72\145");
        die;
        n1:
    }
    public static function castKey(XMLSecurityKey $Nv, $E8, $Xr = "\x70\165\142\154\x69\143")
    {
        if (!($Nv->type === $E8)) {
            goto al;
        }
        return $Nv;
        al:
        $p5 = openssl_pkey_get_details($Nv->key);
        if (!($p5 === FALSE)) {
            goto l8;
        }
        echo sprintf("\x55\x6e\x61\142\154\145\40\164\x6f\40\147\x65\x74\x20\x6b\145\x79\x20\x64\x65\x74\x61\x69\x6c\163\40\x66\x72\x6f\x6d\40\x58\x4d\114\123\x65\143\165\x72\151\x74\x79\x4b\145\171\56");
        die;
        l8:
        if (isset($p5["\153\145\171"])) {
            goto E_;
        }
        echo sprintf("\115\151\163\163\x69\156\147\x20\x6b\x65\x79\x20\x69\x6e\40\x70\x75\142\x6c\151\143\x20\153\145\x79\x20\x64\x65\x74\x61\151\x6c\x73\56");
        die;
        E_:
        $Ds = new XMLSecurityKey($E8, array("\x74\x79\160\145" => $Xr));
        $Ds->loadKey($p5["\x6b\145\x79"]);
        return $Ds;
    }
    public static function processResponse($e2, $SC, $K4, SAML2_Response $zX)
    {
        $M6 = $zX->getDestination();
        if (!($M6 !== NULL && $M6 !== $e2)) {
            goto Dv;
        }
        echo sprintf("\x44\x65\163\x74\x69\156\141\164\151\157\156\x20\151\156\40\x72\145\x73\x70\x6f\x6e\x73\145\x20\144\157\x65\163\156\47\164\x20\155\x61\x74\x63\x68\40\x74\x68\145\40\143\x75\162\162\x65\156\164\40\x55\122\114\x2e\40\104\145\163\164\x69\156\141\x74\x69\x6f\x6e\x20\x69\163\40\x22" . $M6 . "\x22\x2c\40\x63\x75\162\162\x65\x6e\x74\x20\x55\x52\x4c\40\x69\x73\40\x22" . $e2 . "\42\x2e");
        die;
        Dv:
        $I1 = self::checkSign($SC, $K4);
        return $I1;
    }
    public static function processRequest($SC, $K4)
    {
        $I1 = self::checkSign($SC, $K4);
        return $I1;
    }
    public static function checkSign($SC, $K4)
    {
        $Lj = $K4["\x43\x65\162\x74\x69\x66\151\143\x61\164\x65\163"];
        if (!(count($Lj) === 0)) {
            goto YO;
        }
        return FALSE;
        YO:
        $LH = array();
        $LH[] = $SC;
        $E5 = self::findCertificate($LH, $Lj);
        $cP = NULL;
        $Nv = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, array("\x74\171\x70\145" => "\160\165\x62\x6c\x69\x63"));
        $Nv->loadKey($E5);
        try {
            self::validateSignature($K4, $Nv);
            return TRUE;
        } catch (Exception $bx) {
            $cP = $bx;
        }
        if ($cP !== NULL) {
            goto qW;
        }
        return FALSE;
        goto hh;
        qW:
        throw $cP;
        hh:
    }
    public static function validateIssuerAndAudience($qN, $Yd, $Kv)
    {
        $SB = current($qN->getAssertions())->getIssuer();
        $kw = current(current($qN->getAssertions())->getValidAudiences());
        if (strcmp($Kv, $SB) === 0) {
            goto a5;
        }
        echo sprintf("\111\x73\x73\x75\145\162\x20\143\x61\156\x6e\157\164\x20\x62\x65\x20\166\x65\162\151\146\151\145\x64\56");
        die;
        goto Nm;
        a5:
        if (strcmp($kw, $Yd) === 0) {
            goto IT;
        }
        echo sprintf("\111\x6e\166\141\154\151\144\40\141\x75\144\151\x65\x6e\143\145");
        die;
        goto Sg;
        IT:
        return TRUE;
        Sg:
        Nm:
    }
    private static function findCertificate(array $Ax, array $Lj)
    {
        $ES = array();
        foreach ($Lj as $O1) {
            $Iy = strtolower(sha1(base64_decode($O1)));
            if (in_array($Iy, $Ax, TRUE)) {
                goto Kb;
            }
            $ES[] = $Iy;
            goto VN;
            Kb:
            $Pr = "\55\55\55\55\55\x42\105\107\x49\x4e\x20\x43\105\x52\x54\x49\106\x49\103\x41\124\105\55\55\x2d\x2d\55\12" . chunk_split($O1, 64) . "\55\x2d\55\55\55\105\116\104\40\103\105\x52\124\111\106\x49\x43\101\124\x45\55\x2d\55\x2d\x2d\xa";
            return $Pr;
            VN:
        }
        b8:
        echo sprintf("\x55\156\141\x62\x6c\x65\x20\x74\157\40\146\x69\156\144\x20\x61\x20\143\145\162\x74\151\146\151\143\141\x74\145\40\155\x61\164\x63\150\151\156\x67\40\164\150\x65\40\x63\157\x6e\146\x69\147\x75\x72\145\144\40\x66\x69\156\x67\x65\162\160\162\151\156\x74\x2e");
        die;
    }
    private static function doDecryptElement(DOMElement $dl, XMLSecurityKey $nx, array &$g6)
    {
        $f9 = new XMLSecEnc();
        $f9->setNode($dl);
        $f9->type = $dl->getAttribute("\124\x79\160\145");
        $Lp = $f9->locateKey($dl);
        if ($Lp) {
            goto s_;
        }
        echo sprintf("\x43\x6f\x75\x6c\144\40\x6e\157\x74\x20\x6c\157\x63\x61\x74\145\x20\153\145\x79\40\x61\154\x67\157\162\151\x74\x68\155\x20\x69\156\40\145\156\143\x72\171\160\x74\x65\x64\x20\x64\141\164\141\x2e");
        die;
        s_:
        $uW = $f9->locateKeyInfo($Lp);
        if ($uW) {
            goto U1;
        }
        echo sprintf("\103\x6f\165\154\144\40\x6e\x6f\x74\40\154\157\143\141\164\145\40\x3c\144\163\x69\147\x3a\x4b\x65\171\x49\x6e\x66\x6f\76\x20\146\x6f\162\40\x74\150\145\x20\145\x6e\143\x72\x79\x70\164\x65\x64\x20\x6b\145\x79\56");
        die;
        U1:
        $H9 = $nx->getAlgorith();
        if ($uW->isEncrypted) {
            goto DJ;
        }
        $oW = $Lp->getAlgorith();
        if (!($H9 !== $oW)) {
            goto U_;
        }
        echo sprintf("\x41\154\x67\x6f\x72\x69\164\150\155\40\155\x69\163\155\141\x74\143\x68\x20\x62\x65\164\x77\x65\145\x6e\40\x69\156\x70\165\164\40\x6b\x65\x79\40\141\x6e\x64\40\x6b\145\171\40\151\x6e\x20\x6d\145\163\x73\x61\147\x65\x2e\40" . "\x4b\x65\171\40\x77\x61\x73\x3a\x20" . var_export($H9, TRUE) . "\x3b\x20\x6d\145\x73\163\x61\x67\145\x20\x77\x61\163\x3a\x20" . var_export($oW, TRUE));
        die;
        U_:
        $Lp = $nx;
        goto VH;
        DJ:
        $vh = $uW->getAlgorith();
        if (!in_array($vh, $g6, TRUE)) {
            goto S7;
        }
        echo sprintf("\101\x6c\147\x6f\x72\151\x74\150\x6d\x20\x64\x69\x73\141\x62\154\145\x64\72\40" . var_export($vh, TRUE));
        die;
        S7:
        if (!($vh === XMLSecurityKey::RSA_OAEP_MGF1P && $H9 === XMLSecurityKey::RSA_1_5)) {
            goto mN;
        }
        $H9 = XMLSecurityKey::RSA_OAEP_MGF1P;
        mN:
        if (!($H9 !== $vh)) {
            goto Ir;
        }
        echo sprintf("\101\x6c\147\x6f\162\x69\164\x68\x6d\40\155\151\163\155\141\164\x63\x68\40\x62\145\164\167\145\x65\156\x20\x69\x6e\160\x75\164\x20\x6b\x65\x79\40\x61\156\144\x20\x6b\145\171\40\165\x73\x65\x64\x20\164\x6f\x20\x65\x6e\x63\x72\171\160\164\40" . "\40\x74\150\145\x20\x73\171\155\155\145\164\162\151\x63\40\153\145\x79\x20\x66\x6f\x72\x20\164\150\145\40\155\x65\x73\x73\141\x67\x65\56\x20\113\x65\171\x20\x77\x61\x73\x3a\40" . var_export($H9, TRUE) . "\x3b\x20\x6d\145\x73\x73\x61\147\145\40\167\x61\163\72\40" . var_export($vh, TRUE));
        die;
        Ir:
        $GV = $uW->encryptedCtx;
        $uW->key = $nx->key;
        $qH = $Lp->getSymmetricKeySize();
        if (!($qH === NULL)) {
            goto CK;
        }
        echo sprintf("\125\156\x6b\156\157\x77\156\x20\153\x65\x79\x20\x73\151\172\x65\x20\146\x6f\x72\x20\145\156\143\x72\171\x70\164\x69\x6f\156\x20\x61\154\x67\157\x72\151\164\x68\155\72\x20" . var_export($Lp->type, TRUE));
        die;
        CK:
        try {
            $Nv = $GV->decryptKey($uW);
            if (!(strlen($Nv) != $qH)) {
                goto S1;
            }
            echo sprintf("\x55\x6e\145\170\x70\x65\x63\x74\x65\x64\40\153\x65\x79\40\163\x69\x7a\145\40\50" . strlen($Nv) * 8 . "\x62\151\x74\x73\51\40\x66\x6f\162\40\145\156\143\162\x79\160\164\151\157\156\40\x61\154\x67\x6f\x72\151\x74\150\155\x3a\x20" . var_export($Lp->type, TRUE));
            die;
            S1:
        } catch (Exception $bx) {
            $EV = $GV->getCipherValue();
            $su = openssl_pkey_get_details($uW->key);
            $su = sha1(serialize($su), TRUE);
            $Nv = sha1($EV . $su, TRUE);
            if (strlen($Nv) > $qH) {
                goto to;
            }
            if (strlen($Nv) < $qH) {
                goto pz;
            }
            goto e4;
            to:
            $Nv = substr($Nv, 0, $qH);
            goto e4;
            pz:
            $Nv = str_pad($Nv, $qH);
            e4:
        }
        $Lp->loadkey($Nv);
        VH:
        $E8 = $Lp->getAlgorith();
        if (!in_array($E8, $g6, TRUE)) {
            goto uI;
        }
        echo sprintf("\x41\154\147\x6f\162\x69\164\150\x6d\40\x64\x69\x73\141\142\x6c\145\x64\x3a\40" . var_export($E8, TRUE));
        die;
        uI:
        $Z4 = $f9->decryptNode($Lp, FALSE);
        $vM = "\74\x72\157\x6f\164\x20\170\x6d\154\156\163\x3a\163\141\x6d\154\75\42\165\x72\156\x3a\157\141\x73\x69\x73\x3a\x6e\141\155\145\163\72\x74\143\72\123\x41\115\x4c\72\x32\56\x30\72\x61\163\163\x65\x72\164\151\x6f\156\x22\40" . "\x78\x6d\x6c\x6e\163\x3a\170\x73\x69\75\42\x68\164\x74\160\72\57\57\x77\x77\167\x2e\167\63\x2e\157\x72\x67\57\62\60\60\61\57\x58\115\114\123\143\150\145\x6d\141\x2d\x69\156\x73\164\141\156\x63\145\42\x3e" . $Z4 . "\74\57\162\157\157\164\76";
        $xh = new DOMDocument();
        if (@$xh->loadXML($vM)) {
            goto FA;
        }
        echo sprintf("\x46\141\x69\x6c\x65\x64\40\164\157\x20\160\141\x72\x73\x65\x20\x64\145\143\162\x79\x70\x74\145\x64\40\x58\x4d\114\x2e\x20\x4d\141\171\x62\145\x20\164\150\145\40\167\162\x6f\156\x67\40\163\150\141\162\145\x64\153\x65\x79\x20\167\x61\163\x20\165\163\145\x64\77");
        throw new Exception("\106\141\x69\x6c\x65\x64\x20\x74\157\40\160\141\162\x73\x65\40\x64\145\143\162\171\160\164\x65\144\x20\130\x4d\x4c\x2e\40\x4d\141\171\x62\145\40\164\x68\145\40\x77\162\x6f\x6e\x67\40\x73\x68\x61\162\145\144\153\x65\x79\x20\x77\x61\163\x20\165\x73\x65\x64\77");
        FA:
        $gW = $xh->firstChild->firstChild;
        if (!($gW === NULL)) {
            goto zn;
        }
        echo sprintf("\115\x69\x73\x73\151\x6e\147\x20\145\156\x63\162\171\160\164\145\144\x20\145\x6c\x65\x6d\145\x6e\164\56");
        throw new Exception("\115\151\163\x73\x69\x6e\147\x20\145\x6e\143\162\171\160\164\x65\x64\x20\145\x6c\145\155\x65\156\164\56");
        zn:
        if ($gW instanceof DOMElement) {
            goto zk;
        }
        echo sprintf("\x44\145\143\162\171\x70\164\145\144\x20\x65\154\145\155\x65\156\x74\40\x77\141\x73\40\x6e\157\x74\x20\x61\x63\164\165\x61\154\x6c\171\x20\141\x20\104\x4f\115\105\x6c\145\155\145\x6e\x74\x2e");
        zk:
        return $gW;
    }
    public static function decryptElement(DOMElement $dl, XMLSecurityKey $nx, array $g6 = array(), XMLSecurityKey $tp = NULL)
    {
        try {
            echo "\x74\162\x79\151\x6e\147\40\x70\x72\151\155\141\162\x79";
            return self::doDecryptElement($dl, $nx, $g6);
        } catch (Exception $bx) {
            try {
                echo "\164\x72\171\151\156\147\x20\x73\145\x63\157\156\x64\x61\162\x79";
                return self::doDecryptElement($dl, $tp, $g6);
            } catch (Exception $tk) {
            }
            echo sprintf("\x46\141\151\x6c\145\x64\x20\164\157\x20\144\145\x63\x72\x79\160\x74\x20\x58\x4d\114\x20\x65\x6c\x65\155\145\x6e\x74\56");
            die;
        }
    }
    public static function parseBoolean(DOMElement $B9, $j1, $n2 = null)
    {
        if ($B9->hasAttribute($j1)) {
            goto wo;
        }
        return $n2;
        wo:
        $aw = $B9->getAttribute($j1);
        switch (strtolower($aw)) {
            case "\x30":
            case "\x66\141\154\163\x65":
                return false;
            case "\x31":
            case "\x74\162\x75\x65":
                return true;
            default:
                throw new Exception("\111\156\x76\141\x6c\151\x64\40\x76\x61\x6c\x75\x65\40\x6f\146\x20\142\157\x6f\x6c\145\x61\x6e\40\141\x74\164\x72\151\142\165\164\145\40" . var_export($j1, true) . "\72\40" . var_export($aw, true));
        }
        zR:
        uM:
    }
    public static function get_mapped_groups($rK, $Sj)
    {
        $q5 = array();
        if (empty($Sj)) {
            goto vQ;
        }
        $Ep = array();
        $RJ = 1;
        Sz:
        if (!($RJ < 10)) {
            goto ya;
        }
        $mR = $rK->get("\x67\162\x6f\x75\x70" . $RJ . "\137\x6d\x61\160");
        $Ep[$RJ] = explode("\x3b", $mR);
        $RJ++;
        goto Sz;
        ya:
        vQ:
        foreach ($Sj as $Jn) {
            if (empty($Jn)) {
                goto oB;
            }
            $RJ = 0;
            $VV = false;
            Jz:
            if (!($RJ < 9 && !$VV)) {
                goto yE;
            }
            if (!(!empty($Ep[$RJ]) && in_array($Jn, $Ep[$RJ]))) {
                goto Z_;
            }
            $q5[] = $rK->get("\147\162\157\x75\x70" . $RJ);
            $VV = true;
            Z_:
            $RJ++;
            goto Jz;
            yE:
            oB:
            Ql:
        }
        BH:
        return array_unique($q5);
    }
    public static function encrypt($GW, $Nv)
    {
        $Nv = openssl_digest($Nv, "\x73\x68\x61\62\65\66");
        $Gb = "\x41\105\x53\55\x31\x32\70\55\x45\103\x42";
        $GP = openssl_cipher_iv_length($Gb);
        $Xy = openssl_random_pseudo_bytes($GP);
        $tm = openssl_encrypt($GW, $Gb, $Nv, OPENSSL_RAW_DATA || OPENSSL_ZERO_PADDING, $Xy);
        return base64_encode($Xy . $tm);
    }
    public static function decrypt($GW, $Nv)
    {
        $Gn = base64_decode($GW);
        $Nv = openssl_digest($Nv, "\x73\x68\141\62\65\x36");
        $Gb = "\101\x45\123\55\61\x32\x38\x2d\x45\x43\x42";
        $GP = openssl_cipher_iv_length($Gb);
        $Xy = substr($Gn, 0, $GP);
        $GW = substr($Gn, $GP);
        $D3 = openssl_decrypt($GW, $Gb, $Nv, OPENSSL_RAW_DATA || OPENSSL_ZERO_PADDING, $Xy);
        return $D3;
    }
    public static function is_extension_installed($zu)
    {
        if (in_array($zu, get_loaded_extensions())) {
            goto Hz;
        }
        return false;
        goto yB;
        Hz:
        return true;
        yB:
    }
    public static function getEncryptionAlgorithm($Gb)
    {
        switch ($Gb) {
            case "\150\x74\x74\160\x3a\57\57\x77\x77\x77\56\167\x33\x2e\157\162\147\57\x32\x30\60\61\x2f\60\x34\x2f\x78\x6d\154\x65\x6e\143\43\164\162\151\160\154\145\x64\145\163\55\x63\142\143":
                return XMLSecurityKey::TRIPLEDES_CBC;
                goto Gr;
            case "\150\x74\x74\160\x3a\x2f\x2f\167\x77\167\56\x77\x33\56\x6f\162\147\x2f\x32\60\x30\x31\x2f\x30\x34\57\170\x6d\x6c\145\x6e\x63\x23\141\145\x73\61\x32\x38\55\143\x62\x63":
                return XMLSecurityKey::AES128_CBC;
            case "\150\164\x74\x70\72\57\57\x77\x77\x77\56\x77\x33\56\157\x72\x67\x2f\62\x30\60\x31\x2f\x30\x34\x2f\x78\x6d\154\145\156\x63\43\141\x65\x73\x31\x39\62\x2d\143\x62\x63":
                return XMLSecurityKey::AES192_CBC;
                goto Gr;
            case "\150\164\x74\160\72\57\57\x77\x77\x77\x2e\167\63\56\157\162\147\57\62\60\60\61\x2f\x30\x34\x2f\170\155\x6c\x65\x6e\x63\x23\141\145\163\62\x35\66\x2d\x63\x62\x63":
                return XMLSecurityKey::AES256_CBC;
                goto Gr;
            case "\x68\164\x74\160\x3a\57\57\167\x77\x77\x2e\167\63\56\157\x72\147\x2f\62\x30\x30\x31\57\60\64\x2f\170\x6d\154\145\156\143\x23\x72\163\x61\55\61\137\x35":
                return XMLSecurityKey::RSA_1_5;
                goto Gr;
            case "\x68\164\x74\x70\72\57\x2f\x77\167\167\56\167\x33\x2e\157\162\x67\x2f\x32\x30\x30\61\57\x30\64\x2f\x78\155\154\x65\156\x63\x23\162\x73\141\x2d\157\x61\145\160\55\155\147\146\61\160":
                return XMLSecurityKey::RSA_OAEP_MGF1P;
                goto Gr;
            case "\150\164\164\x70\x3a\57\x2f\x77\x77\x77\56\x77\x33\56\x6f\162\x67\x2f\62\x30\60\60\x2f\60\x39\57\170\x6d\154\144\163\x69\147\x23\144\x73\x61\55\x73\150\141\x31":
                return XMLSecurityKey::DSA_SHA1;
                goto Gr;
            case "\x68\164\x74\160\x3a\57\x2f\167\x77\167\56\x77\63\x2e\157\x72\x67\x2f\62\x30\x30\x30\57\x30\71\57\x78\x6d\x6c\144\x73\x69\147\x23\162\x73\141\x2d\x73\x68\x61\61":
                return XMLSecurityKey::RSA_SHA1;
                goto Gr;
            case "\x68\x74\164\x70\72\57\57\x77\167\x77\56\x77\63\56\x6f\162\147\x2f\x32\x30\x30\61\x2f\x30\64\57\170\x6d\154\x64\x73\151\x67\x2d\x6d\157\x72\x65\43\162\163\x61\55\x73\150\x61\x32\x35\x36":
                return XMLSecurityKey::RSA_SHA256;
                goto Gr;
            case "\150\x74\164\160\72\x2f\57\x77\x77\x77\x2e\167\63\56\157\x72\147\x2f\62\x30\60\61\x2f\x30\64\x2f\170\155\154\x64\x73\x69\147\55\155\x6f\x72\x65\x23\162\x73\x61\x2d\x73\x68\141\63\x38\64":
                return XMLSecurityKey::RSA_SHA384;
                goto Gr;
            case "\x68\164\164\160\x3a\57\x2f\167\x77\x77\56\167\63\x2e\x6f\162\147\x2f\62\x30\60\61\x2f\60\64\57\x78\155\x6c\144\x73\x69\147\55\x6d\157\162\145\43\162\x73\x61\55\163\x68\x61\x35\x31\62":
                return XMLSecurityKey::RSA_SHA512;
                goto Gr;
            default:
                echo sprintf("\x49\156\166\x61\x6c\151\x64\40\x45\156\143\x72\171\x70\x74\x69\157\156\x20\115\145\x74\x68\157\x64\x3a\x20" . $Gb);
                die;
                goto Gr;
        }
        BF:
        Gr:
    }
    public static function sanitize_certificate($nu)
    {
        $nu = preg_replace("\57\x5b\xd\12\x5d\53\x2f", '', $nu);
        $nu = str_replace("\55", '', $nu);
        $nu = str_replace("\x42\105\107\111\x4e\x20\x43\105\122\124\111\x46\x49\x43\x41\x54\105", '', $nu);
        $nu = str_replace("\x45\x4e\104\x20\103\x45\122\124\x49\x46\x49\103\x41\x54\105", '', $nu);
        $nu = str_replace("\x20", '', $nu);
        $nu = chunk_split($nu, 64, "\15\12");
        $nu = "\55\x2d\x2d\x2d\x2d\x42\x45\107\111\116\40\103\105\x52\124\111\106\x49\103\101\x54\105\x2d\x2d\55\x2d\55\xd\12" . $nu . "\55\55\x2d\55\x2d\105\116\x44\40\103\105\x52\124\111\x46\x49\103\101\x54\105\55\55\55\55\x2d";
        return $nu;
    }
    public static function sanitize_private_key($nP)
    {
        $nP = preg_replace("\57\133\15\xa\x5d\x2b\57", '', $nP);
        $nP = str_replace("\55", '', $nP);
        $nP = str_replace("\x42\x45\x47\x49\x4e\40\x50\122\111\x56\x41\x54\105\x20\113\105\x59", '', $nP);
        $nP = str_replace("\x45\x4e\104\x20\120\122\x49\x56\x41\x54\x45\40\113\105\x59", '', $nP);
        $nP = str_replace("\40", '', $nP);
        $nP = chunk_split($nP, 64, "\15\xa");
        $nP = "\x2d\55\55\x2d\x2d\102\x45\x47\111\116\x20\120\122\x49\x56\101\124\x45\40\x4b\x45\131\x2d\55\55\x2d\55\15\xa" . $nP . "\x2d\x2d\55\55\x2d\x45\116\x44\x20\120\122\111\x56\101\x54\x45\40\x4b\105\131\55\x2d\55\55\x2d";
        return $nP;
    }
    public static function desanitize_certificate($nu)
    {
        $nu = preg_replace("\x2f\x5b\15\12\135\x2b\57", '', $nu);
        $nu = str_replace("\x2d\x2d\x2d\55\x2d\x42\x45\107\x49\x4e\40\103\105\122\124\x49\x46\x49\103\101\124\105\55\55\55\55\55", '', $nu);
        $nu = str_replace("\x2d\55\55\55\x2d\x45\116\x44\40\x43\105\122\x54\111\x46\x49\103\101\124\105\55\x2d\55\55\x2d", '', $nu);
        $nu = str_replace("\40", '', $nu);
        return $nu;
    }
    public static function send_mail($R1, $AH)
    {
        $XE = MiniorangeSAMLIdpConstants::BASE_URL;
        $bl = MiniorangeSAMLIdpConstants::BASE_URL . "\x2f\x6d\157\x61\163\x2f\x61\160\151\57\x6e\x6f\164\x69\x66\171\57\x73\145\x6e\144";
        $kH = curl_init($bl);
        $Kh = variable_get("\155\151\x6e\x69\157\162\141\156\147\145\137\163\141\155\154\x5f\x69\144\160\137\x63\165\163\164\x6f\x6d\x65\x72\137\151\144");
        $YW = variable_get("\155\x69\x6e\151\157\162\141\x6e\x67\145\137\163\141\155\154\137\x69\144\160\x5f\x63\165\163\164\x6f\x6d\145\x72\137\141\x70\151\x5f\153\145\x79");
        $HZ = variable_get("\155\x69\156\x69\157\x72\141\156\147\145\137\163\141\155\154\x5f\151\144\160\137\x63\165\163\x74\x6f\x6d\x65\x72\x5f\x61\144\x6d\151\156\x5f\x65\155\141\x69\x6c", NULL);
        $by = self::get_timestamp();
        $Kr = $Kh . $by . $YW;
        $uX = hash("\x73\x68\141\x35\61\62", $Kr);
        $vr = "\103\x75\163\164\x6f\x6d\145\162\x2d\x4b\145\x79\x3a\x20" . $Kh;
        $Jp = "\x54\151\155\x65\x73\164\x61\155\x70\72\x20" . $by;
        $Pt = "\x41\165\164\x68\x6f\x72\151\172\x61\x74\151\157\156\x3a\x20" . $uX;
        $zz = $HZ;
        $kL = "\151\156\x66\157\x40\x78\x65\143\165\x72\151\146\x79\x2e\x63\x6f\x6d";
        $hx = array("\x63\x75\x73\164\x6f\155\x65\x72\113\145\171" => $Kh, "\x73\145\156\x64\105\155\x61\x69\154" => true, "\145\x6d\141\x69\x6c" => array("\143\x75\x73\164\x6f\155\145\x72\x4b\145\x79" => $Kh, "\146\x72\x6f\x6d\105\155\x61\151\x6c" => $kL, "\142\x63\x63\105\x6d\141\151\x6c" => $kL, "\x66\x72\x6f\x6d\116\141\x6d\145" => "\x6d\151\156\151\x4f\x72\141\156\147\x65", "\164\x6f\105\x6d\x61\x69\154" => $zz, "\164\157\116\x61\x6d\145" => $zz, "\163\165\142\x6a\145\x63\x74" => $R1, "\143\x6f\x6e\164\x65\x6e\x74" => $AH));
        $mW = json_encode($hx);
        curl_setopt($kH, CURLOPT_FOLLOWLOCATION, true);
        curl_setopt($kH, CURLOPT_ENCODING, '');
        curl_setopt($kH, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($kH, CURLOPT_AUTOREFERER, true);
        curl_setopt($kH, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($kH, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($kH, CURLOPT_MAXREDIRS, 10);
        curl_setopt($kH, CURLOPT_HTTPHEADER, array("\103\x6f\156\x74\145\x6e\x74\55\124\171\x70\x65\x3a\40\x61\x70\160\154\x69\x63\x61\x74\151\x6f\x6e\57\152\x73\x6f\156", $vr, $Jp, $Pt));
        curl_setopt($kH, CURLOPT_POST, true);
        curl_setopt($kH, CURLOPT_POSTFIELDS, $mW);
        $AH = curl_exec($kH);
        if (!curl_errno($kH)) {
            goto Gi;
        }
        return json_encode(array("\x73\164\141\164\x75\163" => "\x45\x52\x52\117\x52", "\x73\164\x61\164\165\163\115\x65\x73\163\x61\147\x65" => curl_error($kH)));
        Gi:
        curl_close($kH);
        return json_encode(array("\163\x74\141\164\x75\163" => "\123\x55\x43\103\x45\x53\x53", "\x73\x74\141\164\165\163\115\145\x73\x73\141\147\x65" => "\123\125\x43\x43\x45\123\123"));
    }
    public static function peruser($TB, $eZ)
    {
        global $base_url;
        $y9 = $base_url;
        $AH = "\x48\145\x6c\154\x6f\54\x3c\x62\162\40\x2f\x3e\x3c\142\x72\40\57\76\x59\157\165\x20\150\x61\166\x65\40\160\x75\x72\143\x68\141\x73\x65\144\x20\154\x69\143\145\x6e\163\x65\x20\x66\157\162\40\104\162\165\x70\x61\154\40\123\101\x4d\114\x20\x49\x44\120\x20\x53\x69\156\x67\x6c\145\40\x53\x69\147\156\x2d\x4f\156\40\115\157\x64\165\154\x65\x20\146\157\162\40\x3c\142\x3e\40" . $eZ . "\x20\x75\x73\x65\x72\x73\74\57\142\76\x2e\12\40\40\40\40\40\40\x20\x20\x20\40\40\40\x41\163\40\x6e\x75\155\142\x65\x72\x20\157\146\40\x75\163\x65\x72\x73\x20\157\156\40\x79\157\165\x72\x20\x73\151\164\145\x20\x68\x61\x76\145\x20\147\162\x6f\x77\156\x20\164\x6f\40\155\157\162\x65\40\x74\x68\x61\x6e\x20" . $TB . "\40\160\145\x72\143\145\x6e\x74\40\157\x66\40" . $eZ . "\x20\165\163\145\x72\163\x20\x6e\x6f\167\x2c\40\171\x6f\x75\40\163\150\157\x75\x6c\144\x20\x75\x70\147\x72\141\x64\x65\40\171\157\x75\162\40\154\x69\x63\145\156\163\145\x20\146\x6f\x72\x20\155\151\x6e\151\117\x72\x61\x6e\147\x65\40\x6d\157\144\165\x6c\x65\x20\x6f\156\40\x79\x6f\165\162\40\x77\145\142\163\x69\164\x65\72\40\74\142\76" . $y9 . "\74\x2f\142\76\56\xa\40\40\40\x20\x20\x20\x20\x20\x20\x20\x20\x20\74\x62\162\x20\x2f\76\x3c\142\x72\40\57\x3e\40\103\x6c\x69\143\x6b\x20\74\141\x20\x68\x72\145\x66\75\x27\150\x74\164\x70\163\72\57\57\154\x6f\147\151\156\x2e\170\145\143\x75\x72\151\146\x79\56\x63\157\155\x2f\x6d\157\x61\163\x2f\x6c\157\147\x69\x6e\x3f\x72\145\144\x69\162\x65\x63\164\x55\162\x6c\x3d\x68\x74\164\x70\163\x3a\x2f\x2f\x6c\157\147\x69\156\56\170\145\143\x75\162\151\146\171\56\x63\x6f\155\57\155\157\141\x73\x2f\x69\x6e\151\164\x69\141\x6c\151\172\145\160\141\x79\x6d\145\x6e\164\x26\x72\145\x71\165\145\163\164\x4f\162\x69\x67\151\156\75\62\x66\x61\137\x61\x64\144\137\165\x73\x65\162\x5f\x70\154\141\156\47\76\150\x65\162\145\74\x2f\x61\76\x20\x74\x6f\x20\165\160\147\x72\x61\144\145\x20\x74\150\145\x20\x6c\151\143\145\156\163\x65\x2e\x3c\142\x72\40\x2f\76\12\40\x20\40\40\x20\40\40\x20\x20\x20\40\x20\x3c\142\x72\x20\x2f\x3e\124\150\141\156\x6b\163\54\74\142\x72\x20\x2f\x3e\x6d\151\x6e\151\117\x72\141\x6e\147\x65\40\124\x65\141\x6d";
        $R1 = "\114\x69\143\x65\x6e\x73\x65\40\x4c\151\x6d\x69\164\x20\122\145\x61\x63\x68\145\144\x20" . $TB . "\x20\160\x65\162\143\x65\156\164\40\117\146\x20\101\x6c\x6c\x6f\167\145\x64\x20\116\157\x20\117\146\40\125\x73\x65\162\163\x20\55\x20\x44\162\165\160\141\154\55\x37\x20\111\104\120\x20\x53\x41\x4d\114\x20\x53\x69\x6e\147\x6c\145\40\x53\x69\147\156\x2d\117\x6e\x20\174\40" . $y9;
        $kK = json_decode(Utilities::send_mail($R1, $AH), true);
    }
    public static function tenuser($eZ, $tz)
    {
        global $base_url;
        $y9 = $base_url;
        $AH = "\110\145\154\154\x6f\54\x3c\142\x72\40\x2f\x3e\74\142\162\40\x2f\76\x59\x6f\x75\40\150\x61\166\x65\40\160\x75\x72\x63\x68\141\163\145\144\x20\x6c\151\x63\145\156\163\145\x20\146\x6f\x72\x20\104\162\x75\x70\141\x6c\x20\123\101\x4d\x4c\x20\111\104\x50\40\x53\x69\x6e\147\154\145\40\123\x69\147\x6e\55\117\156\x20\115\x6f\144\x75\x6c\145\40\146\157\162\40\74\142\76\x20" . $eZ . "\165\x73\145\x72\163\74\57\142\76\x2e\12\x20\40\40\40\x20\x20\x20\x20\40\40\40\x20\x41\x73\40\x6e\x75\155\142\145\162\40\x6f\146\40\x75\x73\145\x72\x73\x20\x6f\156\x20\171\x6f\165\x72\40\163\x69\x74\x65\x20\x68\141\166\145\40\147\x72\157\x77\156\40\x74\x6f\x20" . $tz . "\40\165\x73\145\x72\x73\x20\156\x6f\x77\54\x20\x79\157\x75\40\163\150\x6f\165\154\x64\40\x75\160\x67\x72\x61\144\x65\40\x79\157\x75\162\40\154\x69\x63\145\x6e\x73\145\40\146\x6f\x72\x20\155\151\156\151\x4f\162\141\x6e\147\145\40\x6d\157\144\x75\154\x65\x20\x6f\156\40\x79\157\165\162\x20\167\x65\142\163\x69\164\x65\x3a\40\74\x62\x3e" . $y9 . "\74\x2f\142\76\56\xa\40\40\40\x20\40\40\40\x20\40\40\x20\x20\x3c\x62\x72\57\x3e\74\142\x72\x20\x2f\x3e\x20\x43\x6c\x69\x63\x6b\x20\74\x61\x20\x68\x72\145\x66\x3d\x27\150\x74\164\x70\x73\72\57\x2f\x6c\157\x67\151\x6e\56\x78\x65\143\x75\x72\151\x66\171\x2e\x63\157\x6d\x2f\155\x6f\141\x73\x2f\154\x6f\147\151\156\77\x72\x65\144\x69\162\145\x63\164\x55\x72\154\75\150\164\x74\160\x73\x3a\57\x2f\154\157\147\151\156\x2e\170\x65\143\165\x72\151\x66\x79\x2e\143\x6f\155\57\155\157\x61\163\x2f\x69\x6e\151\x74\151\141\x6c\151\172\145\160\x61\171\155\x65\x6e\164\46\162\x65\x71\165\145\163\x74\x4f\162\151\147\x69\x6e\75\62\146\141\x5f\141\x64\144\137\165\163\x65\x72\x5f\x70\x6c\x61\156\x27\76\x68\145\x72\145\74\57\x61\x3e\x20\164\x6f\40\165\x70\147\x72\141\x64\145\40\x74\150\145\40\154\151\143\x65\156\x73\145\56\74\x62\162\40\57\x3e\xa\40\40\40\x20\x20\40\40\x20\x20\x20\x20\x20\74\x62\162\40\57\76\124\x68\x61\156\153\163\x2c\74\142\162\x20\x2f\x3e\155\151\x6e\x69\117\x72\x61\x6e\147\x65\x20\124\145\141\x6d";
        $R1 = "\124\x65\x6e\x20\x75\163\x65\162\x73\x20\154\145\146\x74\x20\x74\x6f\40\162\x65\141\143\150\x20\x4c\x69\155\151\x74\x20\117\x66\40\101\154\154\157\167\x65\x64\x20\x4e\x6f\40\x4f\146\x20\125\163\145\x72\163\40\x2d\x20\x44\x72\165\160\x61\x6c\55\x37\x20\x49\104\x50\x20\123\x41\x4d\x4c\x20\123\151\x6e\147\154\145\40\x53\x69\x67\156\x2d\x4f\x6e\40\x7c\x20" . $y9;
        $kK = json_decode(Utilities::send_mail($R1, $AH), true);
    }
    public static function limitreach($eZ, $tz)
    {
        global $base_url;
        $y9 = $base_url;
        $AH = "\x48\145\x6c\x6c\x6f\54\74\x62\162\x20\x2f\x3e\74\x62\x72\40\57\x3e\131\157\x75\x20\x68\x61\166\145\40\x70\165\162\143\x68\x61\x73\145\144\x20\154\151\x63\145\156\163\x65\x20\146\x6f\162\40\104\162\x75\x70\x61\154\x20\x53\x41\x4d\114\x20\111\x44\x50\40\123\x69\156\147\154\x65\40\123\151\147\156\x2d\x4f\x6e\40\115\x6f\x64\165\154\x65\x20\x66\x6f\x72\40\74\142\x3e\40" . $eZ . "\x20\x75\x73\145\x72\x73\74\x2f\x62\x3e\x2e\x20\12\40\x20\x20\40\40\40\40\40\x20\x20\40\x20\101\x73\40\156\165\x6d\142\x65\162\x20\x6f\x66\x20\x75\163\x65\162\x73\40\157\x6e\x20\171\x6f\x75\162\40\163\x69\x74\x65\x20\150\141\x73\40\x72\145\141\143\x68\x65\x64" . $tz . "\40\x75\x73\145\162\163\40\x6e\x6f\167\54\40\x79\x6f\x75\40\163\x68\157\x75\x6c\144\40\x75\160\147\x72\x61\144\x65\x20\171\x6f\165\162\x20\154\151\x63\145\x6e\163\145\x20\146\x6f\x72\x20\x6d\x69\x6e\151\117\x72\x61\x6e\x67\x65\40\x6d\x6f\144\165\x6c\x65\40\157\156\40\171\x6f\x75\x72\x20\x77\x65\x62\x73\151\x74\x65\72\40\x3c\x62\76" . $y9 . "\74\x2f\142\76\x2e\x3c\142\162\57\x3e\x49\x66\x20\171\157\x75\x20\146\141\151\154\x20\164\x6f\x20\165\x70\147\162\x61\x64\145\x20\164\x68\x65\x20\154\x69\143\x65\x6e\x73\145\x20\167\x69\x74\x68\x69\156\x20\x6e\145\170\x74\40\x33\x30\40\144\x61\x79\163\54\40\x74\x68\x65\x20\x6e\x65\x77\40\165\163\145\x72\x73\x20\x62\x65\171\x6f\x6e\144\x20\164\x68\145\x20\x6c\x69\x63\145\156\x73\x65\40\154\x69\x6d\151\x74\40\167\157\165\x6c\x64\40\156\157\164\x20\x62\x65\x20\x61\x62\154\x65\40\164\x6f\40\x53\151\156\147\154\145\x20\123\x69\x67\156\55\117\156\x2e\12\40\x20\x20\40\x20\40\x20\x20\x20\x20\40\x20\74\142\162\x20\57\76\74\142\x72\40\x2f\76\40\x43\154\151\143\153\40\74\x61\x20\150\x72\x65\146\75\x27\x68\x74\164\x70\x73\72\x2f\57\154\157\147\151\156\x2e\x78\x65\x63\x75\162\x69\x66\171\x2e\x63\157\155\57\155\157\x61\x73\x2f\154\x6f\x67\151\156\77\162\145\144\151\162\x65\143\x74\125\x72\154\x3d\150\164\164\x70\x73\72\57\57\154\157\x67\151\x6e\x2e\170\x65\x63\x75\162\151\x66\171\56\143\x6f\155\57\155\x6f\x61\x73\57\x69\156\151\x74\151\141\154\151\x7a\145\x70\141\171\x6d\145\x6e\x74\46\x72\145\161\165\x65\163\164\x4f\x72\151\x67\x69\x6e\75\x32\x66\141\x5f\141\x64\144\x5f\165\x73\x65\x72\x5f\160\x6c\141\156\47\x3e\x68\145\x72\x65\74\57\141\x3e\40\x74\157\x20\165\160\147\x72\x61\x64\x65\40\x74\150\145\x20\154\x69\143\145\x6e\163\x65\56\x3c\142\x72\40\x2f\76\xa\x20\40\40\40\40\40\x20\x20\x20\40\40\40\x3c\x62\162\40\57\76\x54\150\x61\156\x6b\163\54\74\x62\x72\40\57\76\x6d\151\156\151\x4f\162\141\156\147\x65\x20\x54\145\141\x6d";
        $R1 = "\x52\x65\x61\143\x68\145\x64\x20\x4c\x69\x63\145\x6e\163\x65\x20\114\151\x6d\151\164\x20\x46\157\162\x20\x4e\157\x20\x4f\x66\40\x55\163\x65\x72\163\x20\x2d\40\104\162\x75\x70\141\x6c\55\x37\40\111\104\120\x20\x53\x41\x4d\x4c\40\123\x69\x6e\147\x6c\145\x20\123\x69\x67\156\55\x4f\x6e\40\x7c\40" . $y9;
        $kK = json_decode(Utilities::send_mail($R1, $AH), true);
    }
    public static function limitmid($eZ)
    {
        global $base_url;
        $y9 = $base_url;
        $AH = "\110\145\x6c\154\157\54\74\x62\162\x20\x2f\x3e\x3c\x62\x72\40\x2f\76\x59\x6f\x75\40\150\141\x76\145\x20\160\x75\162\x63\150\141\x73\145\x64\x20\154\x69\143\145\x6e\x73\x65\x20\x66\157\162\40\x44\x72\x75\x70\x61\x6c\40\x53\101\x4d\x4c\40\x49\104\120\x20\123\x69\156\x67\154\145\x20\123\151\x67\x6e\x2d\x4f\x6e\x20\x4d\x6f\x64\165\x6c\145\x20\x66\x6f\162\40\x3c\142\76" . $eZ . "\x20\x75\x73\145\162\163\74\57\142\x3e\x2e\40\12\x20\x20\40\x20\x20\40\x20\x20\40\x20\x20\40\124\150\x65\40\x6e\x75\155\x62\145\162\x20\157\146\40\x75\163\x65\162\x73\40\157\x6e\40\171\157\165\162\x20\163\x69\x74\x65\40\150\141\x73\x20\145\170\x63\x65\x65\x64\145\x64\x20\164\150\x65\x20\154\x69\x63\x65\x6e\163\x65\40\x6c\151\x6d\x69\164\40\61\65\x20\144\141\x79\163\x20\x61\147\x6f\56\40\x59\157\165\x20\163\x68\157\x75\x6c\x64\40\x75\x70\147\x72\141\x64\x65\x20\171\x6f\165\x72\x20\154\151\x63\x65\156\x73\x65\40\x66\x6f\x72\x20\x74\x68\145\40\155\157\144\x75\154\145\40\157\x6e\40\171\157\x75\x72\40\167\145\x62\163\151\x74\145\72\40\74\142\76\x20" . $y9 . "\x3c\x2f\x62\x3e\56\xa\40\x20\40\40\40\x20\x20\x20\40\40\x20\40\x3c\x62\x72\x2f\x3e\x49\x66\x20\x79\157\165\x20\x66\141\x69\x6c\40\164\157\x20\x75\160\147\162\141\x64\x65\40\x74\150\x65\40\x6c\x69\x63\x65\x6e\163\x65\x20\167\151\x74\x68\151\156\40\x6e\x65\x78\164\40\x31\65\x20\x64\x61\x79\x73\54\40\164\x68\x65\40\x6e\145\167\x20\165\163\145\162\163\x20\142\x65\171\157\156\x64\x20\x74\x68\145\x20\154\151\x63\x65\x6e\x73\145\x20\154\x69\x6d\x69\164\x20\167\x6f\x75\x6c\x64\40\x6e\x6f\164\40\x62\145\x20\x61\142\154\x65\40\x74\x6f\x20\123\151\156\147\154\145\x20\x53\x69\x67\156\55\117\x6e\x2e\74\x62\162\x20\57\x3e\40\12\40\x20\x20\40\x20\x20\40\x20\x20\x20\x20\x20\x3c\142\x72\x20\x2f\76\40\103\154\x69\x63\153\40\74\141\40\x68\x72\145\x66\75\x27\150\x74\164\160\x73\72\x2f\57\x6c\157\x67\x69\x6e\56\x78\145\143\x75\x72\151\146\171\56\x63\x6f\155\57\155\157\x61\x73\x2f\154\x6f\x67\x69\156\77\162\x65\144\x69\162\x65\x63\164\x55\162\x6c\x3d\150\164\164\x70\163\x3a\57\57\154\x6f\147\x69\156\x2e\170\x65\x63\x75\x72\x69\146\171\56\143\157\155\57\x6d\157\x61\x73\x2f\151\156\151\164\151\141\154\x69\172\x65\x70\141\171\x6d\x65\x6e\164\46\x72\x65\161\x75\145\163\x74\x4f\x72\151\147\151\x6e\x3d\62\x66\141\x5f\141\144\x64\137\x75\x73\145\x72\x5f\x70\x6c\x61\x6e\47\76\150\x65\x72\x65\x3c\x2f\141\x3e\40\164\157\x20\165\160\x67\162\x61\144\x65\x20\164\x68\x65\x20\x6c\x69\143\x65\156\x73\x65\x2e\x3c\x62\x72\40\57\x3e\12\x20\x20\x20\x20\x20\x20\40\x20\40\40\x20\40\x3c\x62\x72\x20\57\76\124\150\x61\x6e\153\x73\x2c\74\142\162\40\57\76\155\x69\156\x69\117\x72\141\x6e\147\x65\x20\124\x65\x61\155";
        $R1 = "\x45\170\143\145\x65\144\x65\144\40\114\151\143\145\156\163\145\40\x4c\x69\x6d\x69\164\x20\106\x6f\162\x20\116\157\40\x4f\x66\40\125\163\x65\x72\163\x20\55\40\104\x72\x75\x70\x61\154\55\x37\x20\x49\x44\120\x20\123\101\115\x4c\40\x53\x69\x6e\x67\154\145\x20\123\x69\x67\x6e\55\x4f\x6e\40\x7c\40" . $y9;
        $kK = json_decode(Utilities::send_mail($R1, $AH), true);
    }
    public static function limitend($eZ)
    {
        global $base_url;
        $y9 = $base_url;
        $AH = "\x48\x65\x6c\154\x6f\54\x3c\142\162\x20\x2f\76\74\142\162\x20\57\76\x59\157\165\40\x68\141\166\145\x20\x70\x75\x72\143\x68\141\163\x65\x64\x20\x6c\x69\x63\x65\156\163\145\x20\146\157\x72\x20\x44\x72\165\x70\141\x6c\40\x53\x41\115\x4c\x20\111\104\x50\x20\x53\x69\x6e\x67\154\x65\40\123\x69\147\156\x2d\x4f\x6e\x20\x4d\157\144\165\154\145\x20\146\157\x72\40\74\142\76" . $eZ . "\x75\163\x65\x72\x73\x3c\x2f\x62\76\x2e\40\12\40\x20\x20\40\40\x20\x20\x20\x20\x20\x20\40\124\x68\145\40\x6e\x75\x6d\142\x65\x72\x20\157\146\40\x75\x73\x65\162\x73\40\157\x6e\x20\x79\x6f\x75\162\x20\x73\x69\164\145\x20\150\x61\163\40\145\x78\x63\x65\145\x64\x65\144\40\x74\x68\145\40\154\151\x63\145\156\x73\145\x20\154\151\x6d\x69\x74\40\x33\x30\x20\x64\141\171\163\x20\141\147\157\56\40\x59\157\165\40\150\x61\166\145\x20\x6e\x6f\164\x20\x75\x70\147\162\x61\x64\145\x64\x20\x79\157\x75\x72\x20\154\151\143\x65\x6e\163\145\40\x69\156\40\164\150\145\40\63\60\x20\144\x61\171\163\40\147\x72\x61\143\x65\40\x70\x65\162\151\x6f\144\x20\x70\162\157\x76\x69\144\145\x64\x20\x74\157\x20\x79\x6f\165\x2e\x20\x54\x68\145\40\156\x65\167\x20\x75\x73\x65\x72\x73\40\142\145\171\157\156\x64\x20\x74\x68\145\x20\154\151\x63\145\x6e\x73\x65\40\154\x69\x6d\151\x74\40\167\157\165\154\144\x20\156\x6f\164\x20\x62\x65\x20\x61\142\x6c\145\x20\x74\157\x20\x53\x69\156\x67\154\x65\x20\x53\x69\x67\156\x2d\x4f\156\x20\x6e\157\x77\x2e\12\40\40\x20\40\x20\40\x20\x20\40\x20\x20\x20\74\x62\162\40\x2f\x3e\74\x62\x72\x20\57\x3e\40\x43\154\151\x63\153\40\x3c\141\40\150\162\x65\146\75\x27\150\164\x74\160\163\x3a\57\57\154\157\147\151\x6e\56\170\x65\x63\x75\x72\x69\146\x79\56\x63\157\x6d\57\x6d\x6f\x61\163\57\154\x6f\147\151\156\77\162\x65\x64\151\162\145\143\x74\x55\162\x6c\x3d\150\164\164\160\x73\72\x2f\x2f\154\157\x67\x69\156\56\x78\x65\143\165\162\151\146\x79\56\143\157\155\57\155\x6f\141\x73\x2f\x69\156\x69\164\151\141\154\x69\x7a\x65\x70\x61\x79\x6d\145\x6e\164\46\162\145\161\165\x65\x73\164\117\162\151\147\151\x6e\75\x32\x66\141\x5f\141\x64\x64\x5f\165\x73\145\162\137\x70\x6c\x61\156\x27\x3e\x68\145\x72\x65\74\x2f\x61\x3e\x20\164\157\x20\165\160\x67\162\141\144\x65\40\x74\x68\x65\x20\x6c\151\143\x65\x6e\163\x65\x2e\74\x62\162\x20\57\76\12\40\x20\40\40\40\40\40\40\x20\x20\x20\x20\x3c\x62\x72\x20\x2f\76\124\x68\141\156\x6b\163\x2c\74\142\x72\40\57\x3e\155\151\x6e\151\117\162\141\156\x67\145\40\x54\x65\141\155";
        $R1 = "\x45\170\x63\x65\145\x64\x65\x64\40\114\x69\143\145\x6e\x73\x65\x20\x4c\x69\155\151\x74\x20\x46\157\162\40\116\157\x20\x4f\x66\40\x55\163\145\162\x73\x20\55\40\104\162\x75\x70\x61\154\x2d\x37\40\x49\104\x50\x20\123\101\x4d\114\x20\123\151\156\147\154\145\40\x53\151\147\156\55\x4f\x6e\40\174\x20" . $y9;
        $kK = json_decode(Utilities::send_mail($R1, $AH), true);
    }
    public static function dayleft($jk)
    {
        global $base_url;
        $y9 = $base_url;
        $AH = "\x48\x65\x6c\x6c\157\x2c\74\142\x72\x20\57\76\x3c\142\x72\40\57\76\124\x68\x69\x73\x20\x65\x6d\141\x69\154\40\151\163\x20\x74\157\x20\x6e\x6f\164\x69\x66\x79\40\171\x6f\165\x20\164\150\141\164\x20\x79\157\x75\x72\x20\61\x20\x79\x65\141\162\40\x6c\151\143\145\156\163\145\x20\146\157\x72\40\104\162\165\160\x61\x6c\40\123\101\x4d\114\x20\111\x44\120\x20\x53\151\156\147\x6c\145\x20\123\x69\147\x6e\55\117\156\40\x4d\157\144\x75\x6c\145\x20\167\151\x6c\154\x20\145\x78\x70\x69\x72\145\40\x69\156\40\74\x62\x3e" . $jk . "\x64\x61\171\x73\x3c\x2f\x62\x3e\x2e\40\12\x20\x20\40\40\x20\40\x20\40\40\40\x20\x20\124\x68\x65\40\155\157\144\165\x6c\x65\x20\x77\151\x6c\154\40\163\164\157\x70\x20\167\x6f\x72\x6b\151\156\147\40\141\146\x74\145\162\40\164\x68\x65\40\154\x69\x63\145\156\163\145\x64\x20\160\145\x72\151\157\144\40\145\x78\160\x69\x72\145\x73\x2e\74\x62\162\40\x2f\76\74\x62\162\x20\x2f\x3e\131\x6f\165\40\167\151\154\x6c\x20\156\145\145\144\40\164\157\x20\x72\145\x6e\145\167\40\x79\x6f\165\162\x20\154\151\x63\145\x6e\x73\x65\x20\x74\x6f\40\x63\157\156\x74\x69\x6e\x75\145\x20\x75\x73\x69\x6e\147\x20\164\x68\145\40\x6d\157\144\x75\x6c\145\40\157\156\x20\x79\x6f\x75\x72\x20\x77\x65\142\163\151\x74\145\x3a\40\x3c\x62\76" . $y9 . "\x3c\x2f\142\76\56\12\x20\x20\40\x20\x20\x20\x20\x20\40\x20\40\x20\74\142\162\x20\57\76\x3c\142\162\x20\57\76\x43\154\x69\143\153\x20\74\141\40\x68\162\x65\146\x3d\x27\150\x74\x74\160\x73\x3a\x2f\57\x6c\x6f\x67\151\x6e\x2e\170\x65\x63\x75\162\151\146\x79\x2e\143\157\x6d\57\155\157\141\x73\x2f\154\157\x67\x69\156\x3f\x72\145\144\x69\x72\x65\x63\x74\125\162\154\x3d\x68\x74\164\160\x73\72\57\57\x6c\157\x67\x69\x6e\56\x78\x65\143\x75\162\x69\x66\x79\x2e\x63\157\155\57\155\157\141\x73\57\x69\156\151\164\x69\x61\154\151\172\145\160\141\171\x6d\145\x6e\164\x26\x72\x65\161\165\x65\x73\x74\117\162\x69\147\x69\x6e\x3d\x72\x65\x6e\x65\167\x5f\165\x73\x65\x72\x5f\x6c\x69\143\x65\x6e\163\x65\x27\76\150\145\162\145\x3c\x2f\141\x3e\40\x74\157\40\x72\x65\x6e\x65\x77\x20\164\x68\145\40\154\x69\x63\145\x6e\x73\x65\x2e\74\x62\162\x20\x2f\x3e\xa\40\40\x20\40\40\x20\40\40\40\40\40\x20\74\142\x72\x20\x2f\76\124\150\141\x6e\153\x73\54\x3c\142\x72\x20\x2f\x3e\155\x69\x6e\151\x4f\162\141\x6e\x67\x65\40\124\x65\x61\x6d";
        $R1 = "\114\x69\143\145\156\x73\x65\x20\105\170\x70\151\x72\x79\40\x2d\40\x44\x72\165\160\x61\x6c\x2d\67\x20\111\104\120\x20\123\101\115\x4c\40\123\x69\156\147\x6c\x65\40\123\x69\147\156\x2d\x4f\x6e\40\x4d\x6f\144\x75\x6c\145\x20\174\40" . $y9;
        $kK = json_decode(Utilities::send_mail($R1, $AH), true);
    }
    public static function limit($LC)
    {
        global $base_url;
        $y9 = $base_url;
        $AH = "\x48\x65\154\154\157\x2c\x3c\x62\162\x20\x2f\x3e\74\x62\x72\40\x2f\76\131\157\x75\x72\x20\61\40\171\x65\141\x72\x20\154\151\143\145\x6e\163\145\x20\x66\157\162\x20\x44\162\x75\x70\141\x6c\40\111\104\x50\40\123\101\115\114\40\123\x69\x6e\x67\154\145\40\123\x69\x67\156\55\x4f\156\40\x4d\x6f\144\x75\x6c\x65\x20\150\141\163\x20\145\170\x70\151\162\x65\144\x20\x6f\156\x20\x3c\x62\x3e" . $LC . "\x3c\57\x62\76\x2e\x20\111\x66\40\171\x6f\x75\x20\144\157\x20\156\157\164\x20\162\145\x6e\x65\167\40\171\x6f\x75\162\x20\x6c\151\143\145\156\163\145\40\163\157\x6f\156\x2e\x20\124\150\145\40\155\x6f\144\165\154\145\x20\x77\151\x6c\154\x20\x62\x65\40\x64\145\141\143\164\x69\x76\x61\164\145\144\40\157\x6e\40\x79\157\x75\x72\40\x77\145\x62\x73\x69\164\x65\40\74\142\40\x2f\76" . $y9 . "\74\x2f\142\76\56\xa\x20\x20\40\40\x20\40\40\40\40\40\40\40\x3c\142\x72\40\57\x3e\74\x62\x72\40\57\x3e\x43\154\151\143\x6b\40\x3c\141\x20\150\162\145\x66\75\x27\x68\164\x74\160\x73\72\x2f\57\x6c\x6f\x67\151\x6e\56\x78\x65\143\165\162\151\146\171\56\143\157\x6d\57\x6d\x6f\x61\163\57\154\157\x67\x69\156\77\x72\x65\144\151\162\145\x63\x74\125\x72\154\x3d\x68\164\x74\160\x73\x3a\x2f\x2f\154\157\x67\x69\x6e\x2e\x78\x65\x63\x75\x72\x69\146\x79\x2e\x63\x6f\x6d\57\x6d\x6f\x61\x73\x2f\x69\x6e\x69\x74\x69\x61\x6c\151\172\x65\x70\x61\x79\x6d\145\x6e\164\x26\162\145\161\x75\x65\163\164\117\x72\x69\147\151\x6e\x3d\x72\x65\x6e\145\167\x5f\165\163\x65\162\x5f\154\151\143\145\x6e\x73\145\47\76\150\x65\162\145\x3c\x2f\141\x3e\x20\164\157\40\x72\145\156\x65\167\40\x74\x68\145\x20\154\151\x63\x65\x6e\x73\x65\56\x3c\142\x72\x20\x2f\76\12\x20\x20\x20\40\40\40\40\x20\40\x20\40\x20\x3c\x62\x72\40\x2f\76\x54\x68\x61\x6e\x6b\x73\54\x3c\142\162\40\x2f\x3e\x6d\x69\156\151\x4f\x72\x61\x6e\147\145\x20\x54\x65\141\155";
        $R1 = "\114\x69\x63\x65\156\x73\145\x20\x45\170\160\151\x72\145\x64\40\55\x20\104\x72\x75\x70\x61\x6c\x2d\x37\x20\111\x44\x50\x20\123\x41\x4d\114\40\x53\x69\x6e\x67\x6c\x65\40\x53\x69\147\156\55\117\x6e\40\x4d\157\x64\x75\x6c\x65\x20\x7c\x20" . $y9;
        $kK = json_decode(Utilities::send_mail($R1, $AH), true);
    }
    public static function dexdmid($LC)
    {
        global $base_url;
        $y9 = $base_url;
        $AH = "\x48\145\x6c\x6c\157\x2c\x3c\142\x72\x20\57\x3e\74\142\x72\x20\x2f\x3e\x59\x6f\165\x72\40\x31\40\171\145\x61\162\40\154\151\x63\x65\x6e\163\x65\40\146\x6f\162\x20\104\x72\165\160\x61\154\40\111\x44\x50\40\x53\x41\x4d\x4c\x20\x53\x69\x6e\x67\154\x65\40\123\151\x67\156\55\x4f\156\x20\x4d\x6f\x64\165\154\x65\x20\x66\157\x72\40\171\157\x75\162\x20\x77\145\x62\x73\x69\x74\x65\x20\74\x62\x3e" . $y9 . "\x3c\57\x62\x3e\40\x65\x78\x70\x69\x72\x65\x64\x20\157\x6e\74\x62\76\x20" . $LC . "\x3c\57\142\76\x2e\xa\x20\x20\40\40\x20\40\40\x20\40\x20\x20\40\111\146\40\x79\157\165\162\40\x6c\x69\x63\x65\156\163\x65\x20\x69\x73\x20\x6e\x6f\164\40\x72\x65\x6e\145\x77\x65\144\x20\163\x6f\157\x6e\x2c\x20\164\150\x65\40\x6d\157\x64\x75\x6c\x65\x20\167\x69\154\x6c\40\x62\145\x20\x64\145\141\x63\x74\151\166\141\164\x65\144\56\x3c\x62\x72\x20\57\x3e\74\x62\162\40\x2f\76\x43\154\x69\143\153\x20\x3c\141\x20\150\162\145\146\x3d\47\x68\164\x74\160\163\x3a\57\x2f\154\157\x67\x69\156\x2e\170\x65\x63\165\x72\151\146\171\x2e\x63\x6f\155\x2f\x6d\157\x61\163\x2f\154\x6f\x67\151\156\77\x72\x65\144\x69\162\145\x63\164\x55\x72\x6c\75\150\x74\164\160\163\x3a\x2f\57\154\x6f\147\x69\x6e\56\x78\x65\143\165\162\151\x66\x79\56\143\x6f\x6d\x2f\155\x6f\x61\163\x2f\x69\156\151\x74\151\x61\x6c\151\172\x65\160\x61\171\x6d\145\156\164\46\x72\x65\x71\x75\145\163\x74\x4f\x72\x69\147\x69\x6e\x3d\162\145\156\145\167\x5f\x75\x73\x65\x72\x5f\x6c\x69\143\x65\156\x73\145\x27\x3e\x68\x65\x72\x65\74\x2f\x61\76\x20\164\x6f\x20\162\145\156\x65\x77\40\x74\x68\145\40\x6c\x69\x63\145\x6e\163\145\x2e\x3c\x62\x72\40\57\76\12\x20\x20\40\40\x20\40\40\40\x20\x20\40\x20\74\x62\162\x20\57\76\124\x68\x61\x6e\153\x73\x2c\74\x62\162\x20\x2f\x3e\x6d\x69\156\x69\117\x72\x61\x6e\147\x65\x20\x54\x65\141\155";
        $R1 = "\114\x69\x63\x65\156\x73\145\x20\105\x78\160\151\x72\145\144\40\55\x20\x44\x72\165\x70\141\154\55\67\40\x49\x44\120\x20\123\x41\x4d\114\40\x53\x69\x6e\x67\x6c\x65\40\x53\x69\x67\x6e\x2d\117\x6e\40\x4d\157\x64\x75\x6c\145\x20\174\x20" . $y9;
        $kK = json_decode(Utilities::send_mail($R1, $AH), true);
    }
    public static function dexdend($LC)
    {
        global $base_url;
        $y9 = $base_url;
        $AH = "\110\145\x6c\x6c\157\54\x3c\142\162\x20\57\x3e\x3c\x62\162\40\x2f\x3e\131\157\165\162\x20\x31\40\x79\x65\x61\x72\x20\x6c\151\143\145\156\x73\145\40\x66\x6f\x72\40\104\x72\x75\160\141\x6c\40\x49\x44\120\x20\123\101\115\114\40\x53\x69\156\147\154\x65\x20\123\x69\x67\156\55\x4f\156\x20\x4d\x6f\x64\165\x6c\x65\x20\x68\x61\163\x20\145\170\160\151\162\x65\x64\40\x6f\156\x20\x3c\142\x3e" . $LC . "\74\x2f\142\76\x2e\40\x59\x6f\165\40\150\141\x76\x65\x20\x6e\157\x74\40\162\x65\156\145\167\x65\x64\x20\x79\x6f\x75\x72\40\154\151\x63\x65\x6e\163\x65\40\x77\151\164\150\151\156\40\x74\x68\145\40\x33\x30\x20\x64\141\171\x73\40\147\162\x61\143\145\x20\160\x65\x72\x69\x6f\144\x20\x67\x69\x76\x65\x6e\40\x74\157\x20\171\x6f\165\56\x20\x54\x68\x65\40\155\157\x64\165\154\x65\x20\150\x61\163\40\142\145\145\156\x20\x64\x65\x61\x63\x74\x69\166\x61\x74\x65\x64\x20\x6f\x6e\x20\171\x6f\165\162\x20\167\x65\x62\163\151\164\x65\40\x3c\142\76" . $y9 . "\74\57\x62\76\x2e\12\x20\40\40\x20\40\40\x20\40\40\40\40\40\x3c\142\x72\x20\x2f\x3e\x3c\142\x72\x20\x2f\x3e\x43\x6c\151\x63\x6b\x20\74\141\x20\x68\162\145\x66\75\47\x68\x74\164\160\x73\x3a\57\x2f\154\x6f\147\x69\156\56\x78\x65\143\165\x72\151\146\x79\56\x63\157\155\x2f\x6d\157\141\x73\57\x6c\157\x67\x69\156\x3f\x72\x65\x64\151\x72\x65\143\x74\125\162\x6c\x3d\150\164\x74\x70\163\72\x2f\x2f\154\157\147\151\156\x2e\x78\x65\143\x75\x72\x69\146\171\56\x63\x6f\155\x2f\155\157\141\x73\x2f\151\156\151\x74\x69\x61\154\x69\172\x65\160\141\171\x6d\145\156\x74\x26\x72\x65\x71\165\x65\x73\164\117\162\x69\x67\x69\156\x3d\x72\x65\156\145\167\x5f\165\x73\x65\162\137\x6c\x69\x63\x65\x6e\163\x65\47\x3e\x68\x65\x72\x65\x3c\57\x61\x3e\x20\164\x6f\40\x72\x65\156\x65\x77\x20\x74\150\x65\40\154\151\143\x65\x6e\163\145\x2e\12\40\x20\x20\x20\40\x20\x20\40\40\x20\40\x20\x3c\142\x72\x20\x2f\x3e\74\x62\x72\x20\x2f\76\124\150\141\156\x6b\x73\x2c\74\x62\162\40\57\x3e\x6d\151\156\x69\x4f\162\x61\156\147\145\x20\x54\145\x61\155";
        $R1 = "\114\151\x63\x65\156\163\x65\x20\105\170\x70\151\162\x65\x64\40\55\x20\x44\x72\x75\x70\x61\154\x2d\x37\40\x49\104\x50\40\x53\101\115\114\40\x53\x69\156\147\x6c\x65\40\123\151\x67\x6e\x2d\x4f\156\40\x4d\157\144\x75\154\145\40\174\x20" . $y9;
        $kK = json_decode(Utilities::send_mail($R1, $AH), true);
    }
    public static function checkupdate($W4)
    {
        $ZO = new MiniorangeSAMLIdpCustomer(NULL, NULL, NULL, NULL);
        $AH = json_decode($ZO->ccl(), true);
        $oz = $AH["\156\157\x4f\146\125\x73\145\x72\x73"];
        if ($oz != $W4) {
            goto pJ;
        }
        return FALSE;
        goto tz;
        pJ:
        variable_set("\155\x69\x6e\151\x4f\162\141\156\x67\x65\x5f\x73\141\155\x6c\137\x69\x64\x70\x5f\165\x73\145\162\x5f\x63\x6f\x75\x6e\164", $oz);
        return TRUE;
        tz:
    }
    public static function licensevalidity($cO)
    {
        $ZO = new MiniorangeSAMLIdpCustomer(NULL, NULL, NULL, NULL);
        $AH = json_decode($ZO->ccl(), true);
        $NZ = strtotime($AH["\154\x69\143\145\156\x73\x65\x45\170\x70\x69\x72\171"]);
        if ($NZ > $cO) {
            goto GX;
        }
        return FALSE;
        goto Kf;
        GX:
        variable_set("\x6d\151\x6e\x69\x4f\x72\x61\x6e\x67\145\137\163\141\x6d\x6c\x5f\x69\144\160\137\154\x5f\x65\x78\160", $NZ);
        $zt = db_update("\155\151\156\x69\157\x72\141\x6e\147\x65\137\163\141\155\154\x5f\151\144\x70\x5f\165\163\x65\162")->fields(array("\125\163\x65\162\x49\156" => 0))->execute();
        return TRUE;
        Kf:
    }
    public static function get_timestamp()
    {
        $bl = MiniorangeSAMLIdpConstants::BASE_URL . "\x2f\x6d\x6f\141\x73\57\x72\145\x73\x74\x2f\x6d\157\x62\x69\x6c\145\x2f\x67\145\164\55\x74\x69\155\145\x73\164\141\x6d\160";
        $kH = curl_init($bl);
        curl_setopt($kH, CURLOPT_FOLLOWLOCATION, true);
        curl_setopt($kH, CURLOPT_ENCODING, '');
        curl_setopt($kH, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($kH, CURLOPT_AUTOREFERER, true);
        curl_setopt($kH, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($kH, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($kH, CURLOPT_MAXREDIRS, 10);
        curl_setopt($kH, CURLOPT_POST, true);
        $AH = curl_exec($kH);
        if (!curl_errno($kH)) {
            goto mW;
        }
        echo "\x45\x72\162\x6f\162\40\x69\x6e\x20\x73\x65\x6e\x64\151\x6e\147\x20\x63\165\x72\154\x20\x52\145\x71\x75\x65\x73\164";
        die;
        mW:
        curl_close($kH);
        return $AH;
    }
    public static function freelicensekey()
    {
        variable_del("\155\151\156\151\x6f\162\141\156\x67\145\137\x73\x61\155\x6c\x5f\151\144\160\137\x73\155\154\137\x6c\x6b");
    }
}
?>
