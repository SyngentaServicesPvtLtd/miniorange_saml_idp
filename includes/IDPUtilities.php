<?php


include_once "\x4c\x6f\x67\157\165\164\122\145\x71\x75\145\163\164\56\160\150\160";
class IDPUtilities
{
    public static function generateCertificate($wq, $Ro, $SC, $kc)
    {
        $m_ = dirname(dirname(__FILE__)) . DIRECTORY_SEPARATOR . "\162\x65\x73\157\165\x72\143\x65\163" . DIRECTORY_SEPARATOR . "\157\x70\145\156\x73\x73\154\x2e\x63\x6e\146";
        $Mt = array("\143\157\x6e\146\151\x67" => $m_, "\144\x69\x67\145\x73\x74\137\141\154\x67" => "{$Ro}", "\160\x72\x69\x76\x61\x74\x65\137\153\145\171\137\x62\151\164\163" => $SC, "\x70\162\x69\x76\141\x74\145\137\153\145\171\x5f\x74\171\160\145" => OPENSSL_KEYTYPE_RSA);
        $f6 = openssl_pkey_new($Mt);
        if (!(strlen($wq["\x63\x6f\x75\156\x74\162\x79\x4e\x61\x6d\x65"]) <= 2)) {
            goto AI;
        }
        $mh = openssl_csr_new($wq, $f6, $Mt);
        AI:
        if (!(empty($mh) || $mh == NULL)) {
            goto Ym;
        }
        drupal_set_message(t("\74\x62\x3e\120\x6c\x65\141\163\145\x20\x70\162\157\166\151\x64\145\x20\x61\40\166\141\x6c\x69\x64\40\143\x6f\x75\156\x74\x72\x79\40\143\x6f\x64\x65\x2e\x3c\57\x62\76"), "\145\162\x72\157\x72");
        return;
        Ym:
        $Pf = openssl_csr_sign($mh, null, $f6, $kc, $Mt, time());
        openssl_x509_export($Pf, $Xi);
        openssl_pkey_export($f6, $Xk, null, $Mt);
        openssl_csr_export($mh, $PC);
        IK:
        if (!(($w4 = openssl_error_string()) !== false)) {
            goto lP;
        }
        error_log($w4);
        goto IK;
        lP:
        $iW = array("\x70\165\x62\154\x69\x63\x5f\x6b\x65\x79" => $Xi, "\160\x72\x69\x76\x61\164\x65\137\x6b\145\x79" => $Xk);
        $XV = drupal_get_path("\x6d\x6f\144\x75\154\x65", "\155\151\x6e\151\157\x72\141\x6e\x67\145\137\x73\141\155\154\137\151\144\x70") . "\57\162\145\x73\157\x75\x72\143\145\x73\57\103\x75\x73\x74\x6f\x6d\137\120\165\x62\154\151\143\137\103\x65\x72\x74\151\x66\x69\x63\x61\x74\x65\x2e\x63\162\164";
        file_put_contents($XV, $iW["\160\165\x62\154\x69\143\x5f\153\x65\x79"]);
        $Jy = drupal_get_path("\x6d\x6f\x64\165\x6c\x65", "\x6d\151\x6e\x69\x6f\162\141\156\147\x65\137\x73\x61\x6d\154\x5f\x69\x64\160") . "\57\162\145\x73\x6f\165\162\x63\x65\x73\57\x43\x75\x73\x74\157\155\137\120\x72\x69\x76\x61\x74\x65\137\103\145\162\x74\151\x66\x69\x63\x61\164\145\56\x6b\x65\171";
        file_put_contents($Jy, $iW["\x70\162\151\x76\141\x74\x65\x5f\x6b\145\x79"]);
        variable_set("\155\x69\156\151\x6f\x72\x61\x6e\147\x65\137\x73\141\155\x6c\137\151\x64\160\x5f\160\165\142\154\x5f\143\x65\162\164\x69\146\x69\x63\141\164\145", $iW["\160\165\x62\x6c\151\x63\x5f\153\145\171"]);
        variable_set("\x6d\x69\156\151\x6f\x72\x61\156\147\145\x5f\x73\141\155\154\137\x69\x64\160\137\160\162\151\x76\x61\x74\145\x5f\143\x65\162\x74\151\x66\151\x63\x61\164\x65", $iW["\x70\x72\151\166\141\164\x65\x5f\153\145\x79"]);
        drupal_set_message(t("\x53\165\143\143\x65\x73\163\146\165\154\x6c\x79\40\x67\145\156\145\x72\x74\141\164\x65\144\40\x6e\145\167\x20\143\x65\162\x74\151\146\x69\143\x61\164\x65\x73\x2e\40\x50\x6c\x65\141\x73\145\40\165\x70\x64\141\164\145\x20\171\157\x75\162\40\x73\x65\x72\166\x69\145\40\160\x72\x6f\166\151\x64\x65\162\x20\x63\x6f\x6e\146\151\147\165\162\141\164\x69\157\156\40\167\151\164\150\40\156\x65\x77\40\155\145\164\x61\144\141\164\x61\40\146\x69\x6c\x65\56"));
    }
    public static function getVariableNames($LG)
    {
        if ($LG == "\x6d\x6f\x5f\157\x70\164\151\x6f\156\163\x5f\x65\156\x75\155\x5f\x69\x64\145\x6e\164\x69\164\171\x5f\x70\162\157\166\x69\144\145\x72") {
            goto aB;
        }
        if ($LG == "\155\157\137\157\x70\164\x69\157\x6e\x73\x5f\145\156\165\x6d\x5f\163\x65\162\x76\151\143\x65\137\160\162\x6f\166\x69\x64\x65\x72") {
            goto V2;
        }
        if ($LG == "\x6d\x6f\x5f\x6f\x70\x74\x69\157\x6e\x73\137\141\x74\164\162\x69\142\165\164\145\x5f\155\x61\x70\160\x69\x6e\x67") {
            goto EU;
        }
        if ($LG == "\x6d\x6f\137\157\160\164\x69\157\x6e\x73\137\163\x69\147\156\151\x6e\137\x73\145\x74\x74\x6e\147\x73") {
            goto O1;
        }
        if (!($LG == "\155\157\137\x6f\x70\x74\151\x6f\x6e\x73\x5f\x63\x75\163\x74\157\x6d\137\143\x65\162\x74\x69\146\151\x63\x61\164\x65")) {
            goto gW;
        }
        $OP = array("\x63\x75\x73\x74\x6f\155\x5f\x70\x75\142\154\x69\143\137\x63\145\x72\x74\x69\x66\x69\x63\141\x74\145" => "\155\x69\x6e\151\157\162\141\156\x67\x65\x5f\x73\x61\155\x6c\x5f\x69\144\x70\x5f\x70\x75\142\x6c\137\x63\x65\162\x74\x69\146\151\x63\141\x74\x65", "\143\165\x73\164\x6f\x6d\137\160\x72\151\166\x61\x74\145\x5f\x63\145\x72\164\x69\x66\x69\143\141\x74\x65" => "\155\x69\x6e\x69\157\162\141\156\147\x65\137\x73\141\x6d\154\x5f\x69\x64\x70\137\x70\162\x69\166\x61\164\145\x5f\x63\x65\x72\x74\x69\146\151\143\x61\x74\x65");
        gW:
        goto d2;
        O1:
        $OP = array("\114\157\x67\x69\156\137\125\x52\114" => "\x6d\x69\x6e\151\x6f\x72\141\156\x67\145\x5f\163\141\155\x6c\137\x69\144\x70\137\x64\x72\x75\160\x61\x6c\x5f\154\x6f\147\x69\x6e\137\160\141\147\145\137\x75\162\154");
        d2:
        goto Ca;
        EU:
        $OP = array("\x4e\x61\155\x65\x69\144\x5f\141\x74\164\x72" => "\x6d\x69\x6e\x69\x6f\x72\x61\x6e\147\x65\x5f\163\141\155\154\x5f\x69\x64\160\137\156\141\x6d\x65\151\144\137\x61\164\x74\x72\x5f\x6d\x61\x70", "\x61\164\x74\162\61\137\156\141\155\145" => "\x6d\x69\x6e\x69\157\162\x61\x6e\147\145\x5f\163\141\155\154\x5f\x69\x64\160\137\x61\x74\164\162\61\x5f\x6e\x61\x6d\145", "\x61\x74\164\x72\x31\x5f\x76\141\x6c\165\x65" => "\x6d\x69\x6e\151\x6f\x72\141\156\x67\x65\x5f\163\141\155\154\137\151\x64\x70\x5f\141\x74\164\162\x31\137\166\141\154\x75\x65", "\x61\164\x74\162\x32\137\156\x61\x6d\x65" => "\x6d\x69\156\x69\x6f\x72\x61\156\147\x65\x5f\163\x61\155\154\x5f\151\144\160\137\141\x74\x74\162\x32\137\x6e\141\x6d\145", "\141\x74\164\162\x32\x5f\166\x61\154\165\145" => "\155\151\x6e\151\157\x72\x61\156\147\x65\x5f\163\x61\x6d\154\137\x69\x64\x70\137\141\x74\x74\x72\x32\137\166\x61\x6c\x75\145", "\141\164\x74\x72\x33\137\156\x61\x6d\x65" => "\x6d\151\156\151\157\162\141\156\147\x65\x5f\x73\141\x6d\x6c\x5f\151\144\x70\137\x61\164\164\162\x33\x5f\x6e\x61\155\145", "\x61\x74\164\x72\x33\137\x76\x61\154\x75\145" => "\155\151\x6e\151\157\162\141\156\x67\x65\137\x73\x61\155\x6c\137\x69\x64\x70\137\x61\x74\x74\162\63\137\x76\x61\x6c\x75\145", "\x61\164\164\162\x34\x5f\x6e\x61\x6d\x65" => "\x6d\x69\156\151\x6f\162\x61\156\x67\x65\137\x73\141\x6d\154\137\x69\144\x70\x5f\x61\x74\164\x72\64\x5f\156\141\x6d\145", "\141\164\164\x72\x34\x5f\166\141\x6c\165\145" => "\155\x69\156\151\x6f\162\x61\x6e\147\145\137\x73\x61\x6d\154\137\151\x64\x70\137\x61\164\164\162\x34\x5f\x76\x61\154\165\145", "\141\x74\x74\x72\x69\142\165\x74\x65\x5f\x6d\x61\160\x70\151\156\x67" => "\155\151\x6e\151\x6f\162\x61\156\x67\145\x5f\163\141\155\154\137\151\x64\160\x5f\165\163\145\x72\137\141\x74\x74\162\x69\142\x75\x74\145\163");
        Ca:
        goto S5;
        V2:
        $OP = array("\x53\x65\x72\166\151\143\145\x5f\x50\162\157\x76\151\x64\145\x72\137\116\x61\x6d\145" => "\x6d\x69\x6e\x69\x6f\162\x61\156\147\145\x5f\163\141\155\x6c\x5f\x69\x64\160\x5f\x73\160\x5f\x6e\141\155\145", "\101\103\123\137\125\122\x4c" => "\155\151\156\x69\157\162\141\156\x67\145\137\x73\141\x6d\x6c\137\151\x64\160\137\x61\x63\x73\137\x75\162\x6c", "\111\163\x73\x75\145\x72" => "\x6d\151\x6e\x69\157\162\141\x6e\x67\145\x5f\x73\141\x6d\x6c\x5f\x69\144\x70\137\163\x70\x5f\x65\x6e\x74\x69\164\x79\137\151\x64", "\x4e\141\x6d\145\111\x64\137\106\x6f\162\155\141\x74" => "\155\x69\156\x69\157\x72\141\x6e\x67\x65\x5f\x73\x61\155\154\x5f\151\144\160\x5f\156\x61\x6d\x65\151\144\x5f\x66\157\x72\155\141\164", "\x52\145\x6c\141\x79\137\x53\x74\x61\x74\x65" => "\155\151\156\x69\157\x72\141\x6e\x67\145\x5f\x73\141\155\x6c\x5f\x69\x64\x70\x5f\x72\x65\x6c\x61\x79\x5f\163\x74\141\x74\x65", "\x53\x69\147\x6e\x65\144\137\x43\145\162\x74\151\x66\151\x63\x61\164\x65" => "\x6d\x69\x6e\x69\x6f\162\141\156\147\145\137\163\141\x6d\154\x5f\151\144\x70\137\x63\145\x72\164\x69\146\151\x63\141\164\x65\137\x73\151\x67\156\x65\x64", "\x45\156\143\x72\171\x70\x74\145\144\x5f\103\145\162\164\151\146\151\143\x61\x74\x65" => "\155\x69\156\x69\157\x72\x61\x6e\x67\145\x5f\163\x61\155\x6c\x5f\x69\144\x70\x5f\x63\145\162\x74\151\146\x69\x63\141\x74\x65\137\x65\x6e\143\162\x79\x70\164\145\x64", "\x41\163\x73\145\x72\x74\x69\x6f\156\x5f\x53\151\147\156\x65\144" => "\155\151\156\x69\157\162\x61\156\x67\145\x5f\x73\x61\155\x6c\x5f\x69\x64\160\x5f\x61\x73\163\145\x72\x74\x69\157\156\137\163\151\147\x6e\145\144", "\122\x65\x73\160\157\156\x73\145\137\123\x69\147\156\145\144" => "\155\151\156\151\157\162\x61\156\x67\x65\x5f\163\141\155\x6c\x5f\x69\144\160\137\162\145\x73\160\157\156\x73\145\137\163\151\147\x6e\x65\x64", "\101\x73\163\145\x72\164\151\157\156\x5f\x53\x69\147\156" => "\x6d\x69\156\x69\x6f\x72\141\156\147\145\x5f\x73\141\x6d\x6c\x5f\151\x64\160\137\141\x73\x73\145\x72\164\x69\x6f\x6e\x5f\163\151\x67\x6e\x65\144", "\x45\x6e\x63\162\171\160\x74\145\x64\137\101\x73\163\145\x72\164\x69\157\156" => "\155\x69\x6e\151\157\162\x61\156\x67\x65\137\163\x61\155\154\x5f\151\144\x70\x5f\x65\x6e\x63\162\171\x70\x74\x65\144\x5f\141\163\163\145\162\164\151\157\156");
        S5:
        goto Lj;
        aB:
        $OP = array("\111\104\120\137\x42\x61\x73\145\137\x55\x72\154" => "\155\x69\x6e\x69\x6f\162\x61\x6e\147\145\137\x73\x61\x6d\154\x5f\x69\x64\x70\x5f\x69\x73\x73\165\x65\x72", "\x49\104\120\137\105\x6e\x74\x69\x74\171\x5f\111\x44" => "\x6d\151\x6e\151\x6f\x72\141\156\147\145\x5f\163\141\x6d\154\x5f\151\144\x70\x5f\x69\163\x73\165\x65\162");
        Lj:
        return $OP;
    }
    public static function faq(&$form, &$form_state)
    {
        $form["\x6d\x69\156\151\157\x72\141\156\147\x65\x5f\151\144\160\137\x67\x75\151\144\145\137\x6c\151\156\x6b\x77"] = array("\43\155\x61\x72\153\x75\160" => "\x3c\144\151\x76\40\143\154\141\x73\x73\75\x22\x6d\x6f\x5f\163\141\155\154\x5f\164\x61\142\154\x65\x5f\154\x61\171\157\165\x74\x5f\x73\x75\160\160\157\162\x74\137\61\x22\40\x73\164\171\x6c\x65\75\42\155\x61\x72\x67\151\x6e\x2d\x74\x6f\x70\72\x20\x35\x70\x78\x3b\42\76");
        $form["\x6d\x69\x6e\151\x6f\x72\141\156\x67\145\137\146\x61\x71"] = array("\x23\x6d\x61\162\x6b\165\160" => "\74\x62\76\74\x2f\142\x3e\74\x61\40\x63\154\x61\x73\x73\x3d\42\142\x74\x6e\x20\142\x74\156\x2d\x70\x72\151\155\141\x72\171\55\146\141\x71\40\142\164\x6e\x2d\x6c\141\x72\147\x65\x20\x62\x74\156\x5f\x66\x61\x71\x5f\x62\165\x74\164\157\x6e\x73\42\40\163\x74\x79\154\145\75\42\146\154\x6f\141\164\72\x20\154\x65\146\x74\73\143\x6f\x6c\x6f\162\x3a\40\x23\64\70\141\x30\144\x63\x3b\x62\x6f\x72\x64\x65\162\72\x20\x32\160\x78\40\163\157\154\151\144\40\43\64\x38\x61\60\144\x63\73\x22\40\x68\162\x65\146\75\x22\150\x74\164\160\163\x3a\57\x2f\x66\141\x71\x2e\155\x69\x6e\x69\157\162\141\x6e\147\x65\56\143\x6f\155\57\153\142\57\x64\x72\x75\160\141\154\x2f\163\x61\x6d\154\55\x64\x72\x75\160\x61\154\57\x22\x20\x74\x61\162\x67\145\164\x3d\42\x5f\x62\154\141\x6e\153\42\76" . "\x46\x72\145\161\x75\x65\x6e\x74\154\x79\x20\x61\163\x6b\145\144\x20\161\x75\x65\163\x74\151\157\x6e\x73\74\x2f\141\76");
        $form["\x6d\151\x6e\x69\157\162\141\156\x67\145\137\146\157\x72\165\155"] = array("\x23\155\x61\x72\x6b\x75\160" => "\x3c\142\76\x3c\x2f\x62\x3e\74\x61\x20\x63\x6c\141\163\x73\x3d\42\142\164\x6e\x20\142\164\x6e\55\x70\162\151\x6d\141\x72\x79\55\x66\141\161\40\x62\x74\156\55\154\x61\162\147\145\40\x62\x74\156\137\146\x61\x71\x5f\x62\165\x74\x74\157\x6e\x73\x22\40\163\164\x79\x6c\x65\x3d\42\x66\154\x6f\x61\x74\72\x20\162\x69\147\x68\164\x3b\143\x6f\x6c\157\x72\72\40\x23\x34\x38\x61\x30\144\143\x3b\x62\x6f\x72\x64\145\162\x3a\40\62\160\170\40\163\157\154\x69\x64\40\43\64\70\141\60\x64\x63\x3b\42\40\x68\162\x65\x66\x3d\x22\x68\164\164\x70\163\72\x2f\x2f\x66\x6f\x72\x75\x6d\56\155\x69\156\151\x6f\162\x61\156\147\145\56\x63\157\x6d\57\42\40\164\141\162\147\x65\164\x3d\x22\137\142\x6c\141\156\153\42\x3e" . "\x41\163\153\x20\x71\165\x65\163\x74\x69\x6f\x6e\163\x20\x6f\156\x20\146\157\x72\165\x6d\x3c\x2f\141\x3e");
        $form["\155\141\162\x6b\165\160\x5f\x74\x65\163\164\137\144\x69\166"] = array("\x23\x6d\x61\162\153\x75\160" => "\x3c\57\144\151\x76\x3e");
    }
    public static function isCustomer_registered(array &$form, $form_state)
    {
        global $base_url;
        if (variable_get("\155\151\156\151\x6f\162\141\156\x67\x65\137\163\x61\155\154\137\x69\x64\160\137\x63\x75\163\x74\x6f\x6d\145\x72\x5f\141\x64\155\x69\156\x5f\145\x6d\x61\x69\154", NULL) == NULL || variable_get("\155\151\156\x69\157\162\141\156\147\x65\137\163\x61\155\x6c\x5f\151\144\x70\137\143\165\163\x74\x6f\155\145\x72\137\151\x64", NULL) == NULL || variable_get("\155\x69\x6e\151\x6f\162\x61\156\x67\145\137\x73\141\155\x6c\x5f\x69\144\160\x5f\x63\x75\x73\164\157\155\x65\162\137\141\144\155\151\156\x5f\x74\x6f\153\145\156", NULL) == NULL || variable_get("\155\151\156\151\157\162\x61\156\147\145\137\x73\x61\x6d\154\x5f\x69\x64\x70\x5f\x63\x75\x73\x74\x6f\x6d\x65\x72\x5f\141\x70\x69\x5f\153\x65\171", NULL) == NULL) {
            goto zT;
        }
        if (!(variable_get("\x6d\151\x6e\x69\157\162\141\x6e\147\x65\x5f\x73\141\x6d\154\137\151\144\160\137\163\155\x6c\x5f\x6c\x6b", NULL) == NULL)) {
            goto fm;
        }
        $form["\x6d\141\x72\x6b\165\160\137\x73\141\x6d\154\x5f\x69\144\x70\137\154\151\x63\145\x6e\x73\x65\137\x6d\x65\x73\x73\x61\x67\x65"] = array("\x23\x6d\141\162\153\x75\160" => "\x3c\x64\x69\x76\40\x73\x74\x79\154\x65\x3d\42\144\151\x73\160\x6c\141\x79\72\142\x6c\x6f\x63\x6b\x3b\x20\x6d\141\162\147\151\156\x2d\x74\157\160\72\x31\60\x70\x78\x3b\x63\x6f\154\x6f\x72\72\x72\x65\x64\x3b\x20\142\x61\143\153\x67\x72\x6f\165\x6e\144\55\143\157\154\x6f\x72\x3a\x72\147\142\141\x28\x32\65\61\x2c\40\x32\x33\x32\54\40\x30\x2c\x20\x30\x2e\61\x35\x29\73\x20\164\145\x78\164\55\141\154\x69\147\x6e\x3a\x63\x65\x6e\x74\145\x72\x3b\x20\x70\x61\x64\x64\151\156\x67\x3a\x35\160\x78\73\x20\142\157\x72\x64\x65\x72\72\163\x6f\x6c\151\x64\x20\61\160\170\40\162\147\142\141\50\62\65\x35\54\x20\x30\x2c\40\x39\54\x20\x30\x2e\63\66\51\73\x22\x3e" . "\40\120\154\145\141\x73\145\x20\74\141\x20\150\x72\x65\146\75\x22" . $base_url . "\x2f\77\161\x3d\141\x64\x6d\151\156\57\143\x6f\156\x66\x69\147\57\160\x65\x6f\x70\154\145\57\x6d\151\156\x69\x6f\x72\141\x6e\x67\145\x5f\x73\141\x6d\x6c\137\x69\144\160\x22\x3e\x61\x63\x74\151\166\x61\164\145\x20\164\150\145\40\154\151\143\145\156\x73\x65\x3c\x2f\141\x3e" . "\40\164\157\40\145\x6e\x61\x62\x6c\145\40\104\162\165\x70\x61\x6c\x20\x49\x44\120\x2e\x3c\x2f\x64\151\x76\x3e");
        return TRUE;
        fm:
        goto jU;
        zT:
        $form["\x6d\x61\162\153\x75\x70\x5f\163\141\x6d\154\x5f\x69\x64\x70\x5f\x72\x65\147\163\151\x74\162\x61\x74\x69\x6f\156\x5f\x6d\145\163\x73\x61\147\x65"] = array("\x23\155\x61\x72\153\x75\160" => "\x3c\x64\x69\x76\40\x73\x74\171\154\145\x3d\x22\x64\151\163\160\x6c\x61\x79\72\x62\154\x6f\143\153\x3b\x20\155\141\162\x67\x69\x6e\55\164\x6f\x70\x3a\x31\x30\160\x78\73\x20\x63\157\x6c\x6f\x72\x3a\162\x65\144\x3b\40\x62\x61\143\153\147\162\x6f\x75\x6e\144\x2d\143\x6f\x6c\157\162\x3a\x72\x67\142\141\x28\62\x35\x31\x2c\40\x32\x33\x32\x2c\40\x30\54\40\x30\x2e\x31\x35\51\73\x20\x70\x61\x64\144\x69\x6e\147\x3a\65\x70\170\73\164\145\170\x74\55\x61\154\151\147\156\x3a\x20\x63\145\156\164\145\x72\73\x20\x62\157\x72\x64\x65\162\x3a\163\x6f\x6c\x69\x64\40\61\160\x78\x20\162\147\142\x61\x28\x32\x35\65\x2c\x20\x30\54\x20\x39\x2c\x20\60\56\x33\66\x29\73\42\76" . "\40\120\154\x65\x61\163\145\x20\74\x61\x20\150\162\145\146\75\x22" . $base_url . "\x2f\x3f\x71\x3d\141\x64\155\151\x6e\x2f\x63\157\x6e\x66\x69\147\57\x70\145\157\x70\154\x65\57\155\151\156\x69\x6f\x72\x61\x6e\147\145\x5f\x73\x61\155\154\x5f\151\x64\x70\x22\76\x4c\x6f\x67\151\156\x20\167\x69\164\150\x20\155\151\156\151\x4f\162\141\x6e\147\x65\74\57\x61\x3e" . "\40\164\157\x20\x65\x6e\141\x62\x6c\x65\40\104\162\x75\160\x61\x6c\40\x49\104\x50\56\x3c\x2f\144\151\x76\76");
        return TRUE;
        jU:
    }
    public static function AddsupportTab(array &$form, $form_state)
    {
        $SQ = IDPUtilities::getEmailandPhone();
        $form["\155\141\x72\153\x75\160\x5f\151\144\x70\137\141\x74\164\162\x5f\150\145\141\144\145\162\137\x74\x6f\x70\x5f\x73\165\160\x70\x6f\x72\x74"] = array("\x23\x6d\x61\x72\153\x75\x70" => "\74\144\x69\166\40\x63\x6c\141\x73\x73\x3d\42\x6d\157\x5f\163\141\x6d\x6c\137\164\141\x62\154\x65\137\154\141\171\x6f\165\x74\x5f\x73\x75\160\x70\157\162\x74\137\61\x22\x3e");
        $form["\x6d\x61\x72\153\165\160\x5f\163\x75\160\160\x6f\162\x74\137\x31"] = array("\43\155\141\162\x6b\165\160" => "\74\150\63\x3e\74\142\76\x53\x75\x70\x70\x6f\162\164\72\x3c\x2f\142\x3e\74\x2f\150\63\x3e\x3c\x64\x69\x76\76\x4e\x65\145\x64\40\141\x6e\171\x20\150\145\154\x70\77\x20\x4a\x75\163\x74\40\x73\145\156\x64\x20\x75\163\x20\141\40\x71\165\x65\162\171\40\163\157\x20\167\145\x20\x63\141\156\x20\x68\145\x6c\160\40\171\x6f\x75\56\74\142\x72\x20\57\x3e\x3c\x2f\144\x69\x76\x3e");
        $form["\155\151\x6e\151\157\162\x61\156\147\145\x5f\x73\x61\x6d\x6c\x5f\x65\155\x61\151\x6c\x5f\141\x64\x64\162\145\x73\x73\137\x73\165\160\160\x6f\162\x74"] = array("\43\x74\x79\x70\145" => "\164\145\x78\164\146\151\145\x6c\144", "\43\x61\164\x74\162\151\x62\165\164\x65\163" => array("\163\164\x79\x6c\x65" => "\167\x69\144\x74\150\x3a\61\x30\60\x25", "\160\154\x61\143\x65\x68\157\x6c\144\x65\x72" => "\105\156\x74\145\x72\40\171\157\165\162\40\105\155\141\x69\x6c"), "\43\x64\x65\x66\141\165\x6c\x74\x5f\166\141\154\x75\x65" => $SQ["\145\x6d\141\x69\x6c"]);
        $form["\155\151\156\151\x6f\162\141\x6e\x67\x65\137\163\x61\x6d\154\x5f\x70\150\157\156\145\137\x6e\x75\x6d\142\x65\x72\x5f\x73\165\160\x70\x6f\162\x74"] = array("\x23\x74\x79\160\145" => "\164\145\170\x74\x66\151\x65\x6c\x64", "\x23\141\164\164\x72\151\142\x75\x74\x65\x73" => array("\163\x74\171\x6c\x65" => "\167\151\x64\x74\150\x3a\61\60\60\x25", "\160\154\141\x63\x65\150\x6f\x6c\x64\145\162" => "\x45\x6e\x74\145\162\40\171\x6f\x75\x72\40\x70\x68\x6f\x6e\x65\40\156\165\155\x62\145\162\40\x77\151\x74\150\40\x63\x6f\x75\x6e\x74\162\171\40\x63\x6f\144\x65\x20\x65\147\x2e\x28\x2b\71\61\51"), "\x23\x64\145\146\x61\x75\x6c\x74\137\166\x61\154\165\145" => $SQ["\160\150\x6f\156\x65"]);
        $form["\x6d\151\156\151\157\162\x61\x6e\x67\x65\137\x73\141\x6d\x6c\137\x73\165\160\160\x6f\162\x74\137\161\165\145\x72\x79\137\x73\165\160\x70\x6f\x72\164"] = array("\43\x74\x79\x70\145" => "\x74\145\x78\x74\141\x72\145\141", "\x23\x63\157\x6c\x73" => "\61\x30", "\43\162\157\167\x73" => "\x35", "\x23\141\164\164\162\151\142\x75\x74\145\x73" => array("\x73\164\171\x6c\x65" => "\x77\151\x64\x74\150\72\x31\x30\x30\x25", "\x70\x6c\x61\143\x65\x68\157\154\144\145\x72" => "\127\162\x69\164\145\x20\171\157\x75\162\40\161\x75\145\162\x79\x20\150\145\x72\145\x2e"), "\43\162\x65\x73\x69\x7a\x61\x62\154\145" => False);
        $form["\x6d\x69\156\x69\x6f\x72\x61\156\x67\145\137\163\141\155\x6c\137\x73\x75\x70\x70\157\x72\164\x5f\x73\165\142\x6d\x69\164\x5f\x63\x6c\x69\143\153"] = array("\x23\x74\x79\160\x65" => "\163\x75\142\155\x69\164", "\x23\x76\141\154\x75\145" => t("\123\x75\142\x6d\151\164\40\121\x75\145\162\171"), "\x23\x6c\151\x6d\151\x74\x5f\x76\141\x6c\x69\144\141\164\x69\x6f\x6e\x5f\145\x72\162\157\x72\x73" => array(), "\43\x73\x75\142\155\x69\164" => array("\111\x44\120\125\x74\151\154\151\x74\151\145\x73\72\72\x6d\x69\x6e\x69\x6f\x72\141\156\x67\145\137\x73\x61\155\x6c\x5f\151\144\x70\137\163\145\156\144\x5f\x71\165\x65\x72\171"), "\x23\141\164\164\162\151\142\x75\164\x65\x73" => array("\163\164\x79\154\x65" => "\142\141\x63\x6b\147\162\x6f\165\156\144\x3a\40\x23\x33\x33\x37\141\142\67\x3b\x63\157\x6c\x6f\162\x3a\40\x23\146\146\146\146\146\x66\73\x74\x65\170\164\55\163\150\x61\144\157\167\72\x20\60\40\55\61\x70\170\40\x31\x70\170\x20\43\63\63\x37\x61\142\67\54\40\61\160\x78\40\60\40\x31\x70\x78\40\x23\63\63\67\x61\x62\67\x2c\40\x30\40\61\160\x78\x20\x31\x70\170\40\43\63\x33\x37\141\x62\x37\x2c\x20\55\x31\160\x78\40\x30\x20\61\160\x78\x20\x23\x33\63\67\141\142\x37\x3b\142\x6f\170\55\x73\x68\x61\144\x6f\x77\72\40\60\40\61\160\x78\x20\x30\40\x23\63\63\x37\141\142\x37\73\142\157\162\144\x65\x72\55\x63\x6f\x6c\x6f\162\72\x20\x23\x33\63\x37\x61\142\67\40\43\x33\63\x37\x61\x62\x37\x20\x23\x33\63\x37\x61\142\x37\x3b\144\151\163\x70\154\x61\171\x3a\x62\154\157\143\153\x3b\x6d\x61\162\x67\x69\x6e\x2d\x6c\145\x66\x74\x3a\141\x75\x74\157\x3b\155\141\x72\147\151\156\x2d\x72\x69\x67\150\x74\72\141\165\x74\157\73"));
        $form["\x6d\151\156\x69\x6f\162\141\156\147\x65\x5f\163\x61\155\x6c\137\x73\165\160\160\157\162\x74\x5f\x6e\157\164\x65"] = array("\43\155\x61\x72\153\165\x70" => "\x3c\144\x69\x76\x3e\111\x66\x20\x79\x6f\165\40\x77\141\156\164\40\x63\165\163\164\x6f\x6d\x20\x66\x65\x61\x74\165\x72\x65\163\x20\x69\156\40\x74\150\145\x20\x6d\157\x64\165\154\x65\54\40\x6a\x75\163\x74\40\144\x72\x6f\160\40\x61\x6e\x20\145\x6d\141\x69\154\x20\164\157\x20\74\141\40\x68\162\145\x66\x3d\x22\155\141\151\x6c\x74\157\72\144\162\x75\160\x61\154\x73\x75\x70\x70\157\x72\x74\100\x78\145\x63\x75\x72\151\x66\171\56\143\x6f\155\x22\x3e\x64\x72\165\x70\141\154\x73\x75\160\160\157\162\164\100\170\x65\x63\x75\162\151\x66\171\x2e\143\x6f\155\74\57\141\76\74\57\x64\151\166\x3e\74\57\144\151\x76\x3e");
    }
    public static function miniorange_saml_idp_send_query($form, &$form_state)
    {
        $ZK = $form["\155\x69\x6e\151\x6f\162\x61\x6e\x67\x65\137\163\141\x6d\x6c\x5f\145\x6d\x61\151\x6c\137\141\x64\144\162\145\x73\x73\137\163\165\x70\160\157\x72\x74"]["\43\x76\141\154\x75\x65"];
        $kx = $form["\155\151\x6e\x69\157\162\141\x6e\147\x65\137\163\x61\x6d\154\137\160\x68\x6f\156\x65\137\156\165\x6d\142\x65\x72\x5f\163\x75\x70\160\x6f\162\x74"]["\43\166\x61\154\165\x65"];
        $BJ = $form["\x6d\151\156\151\x6f\162\141\156\x67\x65\x5f\163\x61\x6d\154\137\163\x75\x70\x70\x6f\162\164\137\161\x75\145\162\x79\137\x73\x75\160\x70\157\162\164"]["\43\166\x61\x6c\165\145"];
        IDPUtilities::send_support_query($ZK, $kx, $BJ);
    }
    public static function send_support_query($ZK, $kx, $BJ)
    {
        if (empty($ZK) || empty($BJ)) {
            goto Gi;
        }
        if (!valid_email_address($ZK)) {
            goto ez;
        }
        goto Fr;
        Gi:
        drupal_set_message(t("\124\x68\145\x20\74\142\x3e\x3c\165\x3e\x45\155\x61\x69\154\x3c\57\x75\x3e\x3c\x2f\142\76\x20\x61\x6e\144\x20\74\142\x3e\74\165\x3e\121\x75\145\162\171\x3c\x2f\x75\x3e\74\x2f\142\x3e\40\146\151\x65\154\x64\163\x20\x61\x72\x65\x20\155\141\156\x64\141\164\x6f\162\x79\x2e"), "\145\162\162\x6f\162");
        return;
        goto Fr;
        ez:
        drupal_set_message(t("\x54\x68\x65\x20\x65\155\141\x69\154\x20\141\x64\x64\x72\145\163\x73\x20\x3c\142\x3e\74\151\x3e" . $ZK . "\74\57\151\x3e\x3c\x2f\142\x3e\x20\x69\x73\40\x6e\x6f\164\40\166\x61\x6c\x69\x64\56"), "\145\x72\162\157\162");
        return;
        Fr:
        $w_ = new MiniorangeSAMLIdpSupport($ZK, $kx, $BJ);
        $AN = $w_->sendSupportQuery();
        if ($AN) {
            goto ex;
        }
        drupal_set_message(t("\105\162\162\x6f\162\x20\x73\x65\x6e\x64\151\x6e\147\40\x73\x75\160\160\157\x72\x74\x20\161\x75\145\162\171\x2e"), "\145\x72\x72\157\x72");
        goto Gj;
        ex:
        drupal_set_message(t("\x54\150\141\156\153\x73\x20\146\x6f\x72\x20\x67\x65\164\x74\x69\x6e\147\x20\x69\156\x20\x74\157\x75\x63\150\x21\40\x57\x65\40\x73\x68\141\154\154\x20\147\x65\164\40\142\x61\x63\153\40\164\x6f\x20\171\x6f\165\x20\x73\x68\x6f\x72\x74\x6c\171\x2e"));
        Gj:
    }
    public static function getEmailandPhone()
    {
        $S5 = variable_get("\x6d\x69\x6e\x69\x6f\x72\x61\x6e\x67\145\137\163\141\155\x6c\x5f\151\144\x70\137\143\x75\163\164\157\155\145\x72\x5f\141\144\155\x69\x6e\x5f\145\155\x61\151\x6c", '');
        $eL = variable_get("\x6d\x69\156\151\157\x72\x61\156\x67\x65\x5f\163\141\x6d\154\x5f\x69\x64\x70\x5f\143\165\x73\164\x6f\155\x65\162\137\x61\144\155\151\156\x5f\x70\150\x6f\x6e\145", '');
        $rv = array("\x65\155\141\x69\154" => isset($S5) ? $S5 : '', "\160\x68\157\x6e\145" => isset($eL) ? $eL : '');
        return $rv;
    }
    public static function miniorange_get_baseURL()
    {
        global $base_url;
        $zi = variable_get("\155\x69\x6e\x69\x6f\x72\x61\156\x67\145\x5f\x73\x61\155\154\x5f\x69\x64\x70\137\x62\141\x73\145\137\x75\x72\154", '');
        $Y9 = isset($zi) && !empty($zi) ? $zi : $base_url;
        return $Y9;
    }
    public static function isCurlInstalled()
    {
        if (in_array("\143\x75\162\x6c", get_loaded_extensions())) {
            goto fU;
        }
        return 0;
        goto TO;
        fU:
        return 1;
        TO:
    }
    public static function generateID()
    {
        return "\137" . self::stringToHex(self::generateRandomBytes(21));
    }
    public static function stringToHex($Ms)
    {
        $NO = '';
        $c0 = 0;
        t_:
        if (!($c0 < strlen($Ms))) {
            goto dZ;
        }
        $NO .= sprintf("\x25\x30\x32\x78", ord($Ms[$c0]));
        s2:
        $c0++;
        goto t_;
        dZ:
        return $NO;
    }
    public static function generateRandomBytes($kA, $MW = TRUE)
    {
        return openssl_random_pseudo_bytes($kA);
    }
    public static function createAuthnRequest($Q8, $Q9, $bn = "\146\141\x6c\163\145")
    {
        $rh = "\74\77\170\x6d\154\x20\x76\145\x72\x73\151\157\156\x3d\x22\61\x2e\x30\x22\40\145\156\x63\x6f\x64\x69\156\147\x3d\42\125\x54\x46\55\x38\42\x3f\x3e" . "\x3c\163\x61\x6d\x6c\x70\x3a\101\165\x74\150\x6e\122\x65\161\165\x65\163\x74\40\170\155\x6c\156\x73\x3a\x73\141\155\154\160\75\x22\x75\162\x6e\x3a\157\x61\x73\x69\163\x3a\156\141\x6d\x65\x73\72\164\143\72\x53\x41\x4d\114\x3a\x32\56\60\72\x70\162\157\x74\x6f\143\157\x6c\42\40\111\x44\75\x22" . self::generateID() . "\x22\40\x56\145\x72\x73\x69\157\156\x3d\42\62\x2e\x30\x22\40\111\163\x73\x75\145\x49\156\x73\x74\x61\x6e\x74\75\42" . self::generateTimestamp() . "\42";
        if (!($bn == "\x74\162\165\x65")) {
            goto PP;
        }
        $rh .= "\x20\106\157\x72\143\145\x41\x75\164\150\156\x3d\x22\x74\162\x75\x65\42";
        PP:
        $rh .= "\x20\120\162\x6f\x74\157\143\x6f\x6c\x42\151\x6e\144\x69\x6e\147\75\x22\x75\162\156\x3a\x6f\x61\x73\151\163\72\x6e\x61\155\x65\163\x3a\x74\143\72\x53\101\x4d\x4c\72\x32\x2e\x30\x3a\x62\x69\x6e\x64\151\x6e\147\163\x3a\110\124\124\x50\x2d\x50\117\123\x54\x22\x20\101\x73\163\x65\162\164\151\157\x6e\103\x6f\156\x73\165\x6d\x65\162\x53\145\162\166\x69\143\145\125\122\114\x3d\42" . $Q8 . "\42\40\76\74\163\141\x6d\154\x3a\111\163\x73\165\x65\162\x20\170\x6d\x6c\x6e\x73\x3a\x73\x61\155\x6c\x3d\x22\x75\162\x6e\72\157\141\163\x69\x73\72\x6e\x61\x6d\145\x73\72\x74\143\72\123\101\x4d\x4c\x3a\x32\x2e\x30\x3a\x61\x73\x73\145\x72\x74\x69\157\156\42\x3e" . $Q9 . "\x3c\x2f\x73\141\x6d\x6c\x3a\111\163\x73\165\145\162\76\x3c\x2f\x73\141\x6d\x6c\x70\72\x41\x75\164\150\156\122\145\x71\x75\x65\163\164\76";
        $Qo = gzdeflate($rh);
        $yq = base64_encode($Qo);
        $uw = urlencode($yq);
        return $uw;
    }
    public static function mo_idp_send_logout_request($Bg, $Q9, $yQ)
    {
        global $base_url;
        $Mj = $base_url;
        $cd = variable_get("\x6d\151\156\151\x6f\x72\141\x6e\147\145\137\163\x61\155\154\137\151\144\160\137\x68\164\164\x70\x5f\142\151\156\x64\x69\x6e\147", '');
        $PR = drupal_get_path("\155\157\144\165\x6c\145", "\x6d\x69\x6e\x69\x6f\162\x61\x6e\x67\x65\137\x73\141\x6d\154\x5f\x69\144\x70");
        $C0 = IDPUtilities::createLogoutRequest($Bg, '', $Q9, $yQ, "\x48\x74\164\x70\120\x6f\163\x74");
        $zo = '';
        $zo = variable_get("\x6d\x69\156\151\x6f\x72\141\x6e\147\145\x5f\x73\141\x6d\x6c\137\x69\144\160\x5f\160\165\142\154\137\x63\145\x72\x74\151\146\x69\143\x61\164\145");
        $Au = '';
        $Au = variable_get("\x6d\x69\x6e\151\x6f\162\x61\x6e\147\145\137\x73\141\x6d\154\x5f\x69\144\160\137\x70\162\151\x76\x61\164\x65\x5f\143\x65\162\x74\x69\x66\151\143\141\164\145");
        if ($zo != '') {
            goto mM;
        }
        $q6 = $PR . DIRECTORY_SEPARATOR . "\162\145\163\157\x75\x72\x63\x65\163" . DIRECTORY_SEPARATOR . "\151\x64\x70\x2d\163\x69\x67\x6e\151\x6e\x67\56\x63\162\x74";
        goto L0;
        mM:
        $q6 = $PR . DIRECTORY_SEPARATOR . "\x72\x65\x73\x6f\x75\x72\143\145\163" . DIRECTORY_SEPARATOR . "\103\165\x73\x74\157\x6d\x5f\120\x75\x62\154\151\143\x5f\x43\145\162\x74\x69\x66\151\143\x61\x74\x65\56\143\x72\x74";
        L0:
        if ($Au != '') {
            goto tf;
        }
        $jM = $PR . DIRECTORY_SEPARATOR . "\x72\x65\x73\x6f\x75\x72\x63\x65\x73" . DIRECTORY_SEPARATOR . "\151\x64\160\55\x73\151\x67\x6e\x69\156\x67\x2e\153\x65\x79";
        goto La;
        tf:
        $jM = $PR . DIRECTORY_SEPARATOR . "\162\145\x73\x6f\x75\162\x63\x65\163" . DIRECTORY_SEPARATOR . "\x43\165\163\164\x6f\x6d\x5f\120\x72\151\166\x61\x74\x65\137\x43\145\162\x74\151\146\x69\143\x61\164\145\56\153\145\171";
        La:
        $D_ = IDPUtilities::signXML($C0, $q6, $jM);
        self::_send_logout_request($D_, $Mj, $yQ);
        return;
    }
    public static function signXML($hB, $q6, $jM)
    {
        $s6 = new DOMDocument();
        $hB = str_replace("\x26", "\46\141\155\160\73", $hB);
        $s6->loadXML($hB);
        $h0 = $s6->firstChild;
        $A1 = $h0->ownerDocument->saveXML($h0);
        $D_ = base64_encode($A1);
        return $D_;
    }
    public static function _read_samllogout_request($Wb, $Dd)
    {
        global $base_url;
        $C0 = $Wb["\123\x41\115\x4c\122\x65\x71\165\x65\163\164"];
        $aH = '';
        if (!array_key_exists("\x52\x65\154\x61\171\x53\164\141\x74\145", $Wb)) {
            goto Tc;
        }
        $o5 = $Wb["\122\145\x6c\x61\x79\x53\x74\141\164\145"];
        Tc:
        $C0 = base64_decode($C0);
        if (!(array_key_exists("\x53\x41\115\x4c\122\145\161\165\145\163\164", $Dd) && !empty($Dd["\x53\101\115\114\x52\x65\161\x75\145\163\164"]))) {
            goto al;
        }
        $C0 = gzinflate($C0);
        al:
        $h6 = array_key_exists("\x53\x69\x67\101\x6c\147", $Wb) ? $Wb["\123\x69\x67\x41\154\x67"] : null;
        $e0 = array_key_exists("\x53\x69\x67\156\x61\x74\165\x72\145", $Wb) ? $Wb["\123\x69\x67\156\x61\x74\x75\x72\145"] : null;
        $s6 = new DOMDocument();
        $s6->loadXML($C0);
        $CF = $s6->firstChild;
        if (!($CF->localName == "\114\157\147\x6f\x75\164\122\145\x71\x75\145\163\x74")) {
            goto FV;
        }
        $oC = new SAML2_LogoutRequest($CF);
        $I5 = $oC->getId();
        $Q9 = $base_url . "\x2f\x3f\161\75\x61\x64\155\151\156\57\x63\157\x6e\146\x69\147\57\160\145\157\x70\154\x65\57\x6d\151\x6e\151\x6f\162\141\x6e\x67\x65\137\163\141\155\x6c\137\151\x64\160\x2f";
        $yP = variable_get("\x6d\x69\x6e\x69\x6f\162\x61\156\x67\145\137\163\x61\x6d\x6c\x5f\151\x64\x70\137\x65\156\164\x69\164\171\137\x69\x64");
        $yP = isset($yP) && !empty($yP) ? $yP : $Q9;
        $HF = variable_get("\155\151\x6e\x69\x6f\x72\141\156\x67\145\x5f\163\x61\x6d\x6c\x5f\151\144\160\x5f\x73\x6c\x6f\137\165\162\x6c", '');
        $du = self::createLogoutResponse($I5, $yP, $HF, "\110\164\164\160\x50\157\x73\164");
        $PR = drupal_get_path("\x6d\157\x64\x75\x6c\x65", "\x6d\x69\x6e\x69\157\162\x61\x6e\147\x65\137\163\141\155\154\137\151\x64\x70");
        $zo = '';
        $zo = variable_get("\155\151\156\x69\157\162\x61\156\x67\x65\137\163\141\x6d\x6c\x5f\151\x64\x70\137\160\165\142\x6c\137\x63\x65\162\164\151\x66\151\143\141\x74\145");
        $Au = '';
        $Au = variable_get("\x6d\x69\156\x69\157\162\141\156\x67\x65\x5f\163\141\x6d\x6c\137\x69\x64\x70\x5f\x70\x72\151\166\141\164\x65\x5f\143\145\x72\164\151\146\151\143\x61\x74\145");
        if ($zo != '') {
            goto x5;
        }
        $q6 = $PR . "\x72\x65\x73\x6f\x75\x72\143\145\163" . DIRECTORY_SEPARATOR . "\x69\x64\160\55\163\x69\x67\156\151\156\x67\56\x63\x72\164";
        goto Dp;
        x5:
        $q6 = $PR . "\x72\x65\x73\157\165\162\143\x65\163" . DIRECTORY_SEPARATOR . "\x43\165\163\164\157\x6d\x5f\x50\165\x62\154\x69\143\137\103\x65\x72\x74\151\x66\151\x63\141\x74\x65\x2e\x63\x72\x74";
        Dp:
        if ($Au != '') {
            goto sx;
        }
        $jM = $PR . "\x72\145\163\x6f\165\162\x63\x65\x73" . DIRECTORY_SEPARATOR . "\151\144\160\x2d\x73\x69\x67\156\151\x6e\147\56\153\145\x79";
        goto ax;
        sx:
        $jM = $PR . "\162\145\163\x6f\x75\x72\143\145\x73" . DIRECTORY_SEPARATOR . "\103\x75\x73\164\x6f\155\x5f\120\x72\151\x76\141\x74\x65\x5f\x43\x65\162\x74\151\x66\x69\143\141\164\145\x2e\153\145\171";
        ax:
        $D_ = self::signXML($du, $q6, $jM);
        self::_send_logout_response($D_, $o5, $HF);
        FV:
    }
    public static function createLogoutResponse($e3, $Q9, $HF, $ff = "\110\x74\x74\x70\x52\x65\144\x69\x72\x65\143\x74")
    {
        $rh = "\74\x3f\170\155\154\x20\166\x65\162\163\x69\157\156\x3d\x22\61\x2e\60\x22\x20\145\156\143\157\x64\151\156\147\75\x22\125\124\106\55\x38\x22\77\x3e\74\x73\x61\155\x6c\160\72\114\x6f\147\x6f\x75\164\122\x65\163\x70\157\x6e\x73\x65\x20\170\x6d\x6c\x6e\x73\72\163\141\x6d\154\160\x3d\x22\x75\x72\x6e\72\x6f\141\163\x69\163\x3a\x6e\x61\155\x65\x73\72\164\143\72\123\101\115\x4c\x3a\62\x2e\x30\72\x70\x72\157\164\x6f\143\x6f\x6c\x22\40\170\155\x6c\156\163\72\x73\x61\155\x6c\75\42\x75\162\156\x3a\157\141\x73\x69\x73\x3a\156\141\x6d\145\x73\72\164\143\x3a\123\101\115\x4c\72\x32\x2e\60\72\141\x73\163\145\162\164\x69\x6f\156\x22\40\111\x44\75\42" . self::generateID() . "\42\x20\x56\145\x72\163\151\157\x6e\x3d\42\62\56\60\x22\40\111\163\x73\x75\145\111\x6e\x73\164\x61\x6e\164\75\42" . self::generateTimestamp() . "\42\40\104\x65\x73\164\x69\156\x61\164\x69\157\156\x3d\x22" . htmlspecialchars($HF) . "\x22\40\x49\156\x52\x65\163\x70\157\x6e\163\145\x54\x6f\75\x22" . $e3 . "\x22\x3e\x3c\163\141\x6d\x6c\x3a\x49\163\163\165\x65\x72\40\x78\155\x6c\x6e\x73\x3a\x73\141\x6d\154\x3d\x22\x75\162\x6e\x3a\x6f\141\x73\151\x73\72\156\141\x6d\x65\163\72\164\x63\x3a\x53\101\115\114\x3a\62\x2e\60\x3a\141\163\163\145\162\x74\x69\157\x6e\42\x3e" . htmlspecialchars($Q9) . "\74\57\163\141\x6d\x6c\x3a\111\163\163\x75\145\162\76\x3c\163\141\x6d\x6c\160\72\123\164\x61\164\x75\163\x3e\74\163\141\155\x6c\x70\x3a\123\164\141\164\x75\x73\x43\x6f\144\x65\40\x56\141\154\x75\145\75\42\x75\x72\x6e\72\x6f\141\163\151\163\x3a\156\x61\x6d\145\x73\72\x74\143\x3a\x53\101\x4d\114\x3a\62\56\60\x3a\163\164\141\164\x75\x73\x3a\123\165\x63\x63\x65\x73\163\x22\x2f\x3e\x3c\57\163\141\155\154\x70\72\x53\164\141\x74\165\x73\x3e\x3c\x2f\x73\141\x6d\x6c\160\72\114\157\147\157\x75\x74\122\x65\163\160\x6f\x6e\163\x65\76";
        if (!(empty($ff) || $ff == "\110\x74\x74\160\122\x65\x64\x69\x72\145\x63\164")) {
            goto jz;
        }
        $Qo = gzdeflate($rh);
        $yq = base64_encode($Qo);
        $uw = urlencode($yq);
        $rh = $uw;
        jz:
        return $rh;
    }
    public static function _read_saml_response($Wb, $Dd)
    {
        $Jq = $Wb["\123\101\115\x4c\x52\145\163\160\x6f\156\x73\145"];
        $Mj = '';
        if (!array_key_exists("\122\x65\154\x61\x79\x53\x74\x61\x74\x65", $Wb)) {
            goto UD;
        }
        $Mj = $Wb["\122\x65\154\141\x79\123\x74\141\x74\x65"];
        UD:
        $Jq = base64_decode($Jq);
        if (!(array_key_exists("\123\x41\115\114\122\145\x73\x70\x6f\x6e\x73\145", $Dd) && !empty($Dd["\x53\x41\115\114\122\145\x73\160\x6f\x6e\163\145"]))) {
            goto Of;
        }
        $Jq = gzinflate($Jq);
        Of:
        $s6 = new DOMDocument();
        $s6->loadXML($Jq);
        $aN = $s6->firstChild;
        if (!($aN->localName == "\x4c\157\147\157\x75\x74\x52\145\x73\160\x6f\156\163\145")) {
            goto Pl;
        }
        if (isset($_SESSION)) {
            goto PQ;
        }
        session_start();
        PQ:
        session_destroy();
        drupal_goto($Mj);
        exit;
        Pl:
    }
    public static function _send_logout_response($D_, $Mj, $yQ)
    {
        $SL = htmlspecialchars($D_);
        echo "\x3c\x66\x6f\162\x6d\x20\151\144\x3d\42\x72\x65\x73\x70\x6f\156\163\145\146\x6f\x72\x6d\42\40\x61\143\164\x69\x6f\156\75\42" . $yQ . "\x22\x20\x6d\x65\164\150\157\x64\75\x22\x70\157\x73\164\x22\x3e\xd\xa\x20\40\x20\x20\x20\40\74\x69\x6e\160\165\164\x20\x74\171\160\x65\75\42\150\x69\144\x64\145\x6e\x22\40\x6e\x61\x6d\x65\x3d\42\123\x41\x4d\114\x52\x65\163\x70\x6f\x6e\x73\145\x22\40\x76\x61\x6c\165\x65\x3d\x22" . $SL . "\x22\40\57\76\15\12\x20\x20\40\x20\x20\x20\74\151\x6e\160\x75\164\x20\x74\x79\160\145\x3d\42\x68\151\144\144\145\156\x22\x20\156\141\155\x65\75\x22\x52\x65\x6c\141\x79\123\164\x61\x74\x65\42\x20\x76\141\x6c\x75\145\75\x22" . $Mj . "\x22\x20\57\x3e\15\12\x20\x20\40\40\74\57\x66\157\x72\x6d\x3e\xd\xa\40\x20\x20\40\74\163\143\162\151\x70\164\x3e\xd\12\x20\40\x20\x20\x20\40\144\157\x63\x75\x6d\x65\x6e\164\x2e\x67\145\x74\105\x6c\x65\x6d\x65\x6e\164\102\x79\x49\x64\50\42\162\145\x73\160\157\156\163\145\146\157\x72\155\42\51\56\x73\165\142\155\151\x74\50\51\x3b\x20\15\xa\x20\40\40\x20\74\x2f\163\143\x72\151\160\164\x3e";
        session_destroy();
        exit;
    }
    public static function _send_logout_request($D_, $Mj, $yQ)
    {
        $oK = htmlspecialchars($D_);
        echo "\74\x66\x6f\162\155\x20\151\x64\x3d\x22\162\x65\161\165\x65\163\x74\146\x6f\x72\155\x22\40\141\x63\x74\151\x6f\x6e\x3d\42" . $yQ . "\42\40\155\145\164\x68\x6f\144\75\42\x70\157\x73\x74\x22\76\xd\12\x20\x20\40\x20\x20\x20\x3c\x69\156\160\x75\164\x20\164\171\160\145\75\42\150\151\x64\x64\x65\x6e\42\40\156\141\155\x65\75\42\x53\101\x4d\114\x52\145\161\x75\145\163\164\x22\40\166\x61\x6c\x75\x65\x3d\42" . $oK . "\42\40\57\x3e\xd\12\40\40\x20\x20\40\40\x3c\151\156\x70\x75\164\x20\x74\x79\160\x65\x3d\x22\150\x69\144\144\x65\x6e\x22\x20\x6e\141\x6d\145\x3d\42\122\x65\154\x61\171\123\x74\x61\164\x65\x22\40\x76\x61\154\165\x65\75\42" . $Mj . "\x22\40\57\x3e\15\12\x20\40\x20\40\x3c\x2f\146\x6f\x72\155\76\xd\12\40\40\x20\40\74\x73\143\x72\x69\160\x74\76\xd\12\40\40\40\x20\40\x20\144\157\x63\x75\155\145\x6e\x74\56\x67\145\x74\x45\x6c\x65\155\145\156\x74\102\x79\x49\x64\50\42\x72\x65\161\x75\145\x73\x74\146\x6f\162\155\42\x29\56\x73\165\142\x6d\151\164\50\51\73\40\40\15\12\x20\x20\x20\x20\74\57\163\x63\x72\151\160\164\76";
        session_destroy();
        exit;
    }
    public static function createLogoutRequest($VO, $jV = '', $Q9, $HF, $ff)
    {
        $rh = "\74\77\170\x6d\154\x20\x76\145\x72\163\x69\x6f\x6e\75\x22\61\x2e\60\42\x20\x65\156\x63\x6f\144\x69\156\147\75\x22\x55\124\x46\55\x38\42\x3f\76" . "\x3c\x73\141\155\154\x70\72\x4c\x6f\x67\157\x75\164\x52\145\x71\165\x65\163\164\x20\x78\x6d\154\x6e\x73\x3a\163\x61\155\x6c\x70\75\42\x75\x72\x6e\72\x6f\141\163\151\x73\x3a\156\141\x6d\145\x73\x3a\x74\x63\72\123\101\115\114\72\x32\x2e\x30\x3a\160\162\x6f\164\x6f\143\157\154\x22\40\x78\155\x6c\156\163\72\x73\141\x6d\154\x3d\42\x75\162\x6e\72\x6f\141\163\151\163\72\156\x61\x6d\x65\x73\72\164\x63\x3a\x53\x41\115\x4c\72\x32\x2e\x30\x3a\141\163\163\x65\x72\164\151\157\156\42\x20\x49\104\x3d\x22" . self::generateID() . "\x22\40\x49\x73\x73\x75\x65\x49\156\x73\x74\x61\x6e\x74\x3d\42" . self::generateTimestamp() . "\42\40\x56\145\162\x73\x69\x6f\x6e\75\x22\x32\56\60\x22\x20\104\x65\x73\164\151\x6e\x61\164\x69\157\x6e\x3d\x22" . $HF . "\42\x3e\15\xa\11\11\11\11\11\11\x3c\163\x61\155\x6c\x3a\111\163\x73\x75\145\162\40\170\x6d\154\x6e\163\x3a\163\141\155\x6c\75\x22\165\x72\x6e\x3a\x6f\141\x73\151\163\x3a\156\141\155\145\x73\72\164\143\72\123\101\x4d\114\72\x32\56\x30\72\141\163\x73\x65\162\164\x69\157\x6e\42\76" . $Q9 . "\74\x2f\x73\141\x6d\154\x3a\x49\x73\x73\165\145\x72\76\xd\xa\x9\x9\x9\x9\x9\x9\x3c\x73\141\155\154\x3a\x4e\x61\x6d\x65\x49\x44\x20\170\155\x6c\156\x73\72\163\x61\155\154\x3d\x22\165\162\x6e\x3a\157\141\x73\x69\x73\x3a\156\141\155\x65\163\72\164\143\x3a\x53\x41\x4d\114\72\62\x2e\60\x3a\141\163\x73\x65\162\164\151\x6f\x6e\x22\x3e" . $VO . "\74\x2f\163\141\155\x6c\72\x4e\x61\155\145\x49\x44\x3e";
        if (empty($jV)) {
            goto gS;
        }
        $rh .= "\x3c\163\141\155\154\x70\72\123\145\163\x73\151\x6f\156\111\x6e\x64\145\170\x3e" . $jV . "\x3c\57\x73\x61\x6d\154\x70\72\x53\145\x73\163\x69\x6f\156\111\x6e\144\x65\170\76";
        gS:
        $rh .= "\x3c\57\163\141\155\154\160\x3a\114\157\x67\x6f\x75\x74\122\x65\161\165\145\x73\x74\x3e";
        if (!(empty($ff) || $ff == "\110\124\x54\120\x2d\122\x65\144\151\x72\145\x63\x74")) {
            goto q6;
        }
        $Qo = gzdeflate($rh);
        $yq = base64_encode($Qo);
        $uw = urlencode($yq);
        $rh = $uw;
        q6:
        return $rh;
    }
    public static function generateTimestamp($F8 = NULL)
    {
        if (!($F8 === NULL)) {
            goto uv;
        }
        $F8 = time();
        uv:
        return gmdate("\131\55\155\55\144\134\x54\x48\72\151\x3a\163\134\132", $F8);
    }
    public static function xpQuery(DOMNode $li, $BJ)
    {
        static $UY = NULL;
        if ($li instanceof DOMDocument) {
            goto WQ;
        }
        $oi = $li->ownerDocument;
        goto mB;
        WQ:
        $oi = $li;
        mB:
        if (!($UY === NULL || !$UY->document->isSameNode($oi))) {
            goto jA;
        }
        $UY = new DOMXPath($oi);
        $UY->registerNamespace("\163\157\141\160\55\x65\156\x76", "\150\164\x74\160\72\x2f\57\163\x63\150\x65\x6d\141\163\56\170\x6d\x6c\163\157\x61\160\x2e\157\x72\x67\x2f\x73\x6f\141\x70\57\x65\x6e\166\145\154\157\160\x65\x2f");
        $UY->registerNamespace("\163\141\155\154\137\x70\162\x6f\164\157\143\x6f\x6c", "\x75\162\x6e\72\157\x61\163\x69\163\72\x6e\x61\155\145\x73\72\x74\x63\72\123\101\115\114\72\x32\56\x30\72\160\x72\157\164\157\143\157\x6c");
        $UY->registerNamespace("\163\x61\155\x6c\137\x61\163\x73\145\x72\164\x69\x6f\x6e", "\x75\162\x6e\72\157\x61\163\151\x73\x3a\156\x61\x6d\145\163\x3a\x74\143\72\123\101\115\x4c\72\x32\x2e\x30\x3a\141\163\x73\145\x72\x74\x69\157\x6e");
        $UY->registerNamespace("\163\141\155\154\x5f\x6d\x65\x74\141\x64\141\x74\141", "\x75\162\156\72\x6f\x61\x73\x69\163\72\156\141\155\x65\163\x3a\x74\143\x3a\123\101\115\x4c\x3a\62\56\x30\72\155\x65\x74\141\x64\141\x74\x61");
        $UY->registerNamespace("\144\x73", "\150\164\x74\160\72\x2f\57\167\167\x77\x2e\167\x33\x2e\x6f\162\x67\57\62\x30\60\60\x2f\x30\71\x2f\170\155\x6c\144\163\151\x67\43");
        $UY->registerNamespace("\170\145\x6e\143", "\150\164\164\160\72\57\x2f\167\167\167\x2e\167\63\56\x6f\162\x67\57\62\60\60\61\x2f\x30\64\57\170\x6d\x6c\145\156\143\43");
        jA:
        $UV = $UY->query($BJ, $li);
        $NO = array();
        $c0 = 0;
        af:
        if (!($c0 < $UV->length)) {
            goto Uj;
        }
        $NO[$c0] = $UV->item($c0);
        Iz:
        $c0++;
        goto af;
        Uj:
        return $NO;
    }
    public static function parseNameId(DOMElement $hB)
    {
        $NO = array("\126\x61\x6c\165\145" => trim($hB->textContent));
        foreach (array("\x4e\x61\155\x65\121\165\141\154\151\x66\151\x65\162", "\123\x50\116\141\155\x65\121\x75\141\154\151\x66\151\145\x72", "\x46\x6f\x72\155\141\x74") as $BG) {
            if (!$hB->hasAttribute($BG)) {
                goto EL;
            }
            $NO[$BG] = $hB->getAttribute($BG);
            EL:
            MD:
        }
        uV:
        return $NO;
    }
    public static function xsDateTimeToTimestamp($wQ)
    {
        $Iq = array();
        $zk = "\x2f\136\x28\x5c\x64\x5c\144\x5c\x64\134\144\51\x2d\50\134\x64\x5c\x64\51\55\x28\134\x64\x5c\144\x29\124\50\134\x64\x5c\x64\51\x3a\x28\134\x64\134\x64\51\x3a\x28\134\x64\x5c\x64\x29\x28\x3f\x3a\x5c\56\x5c\x64\x2b\x29\77\132\x24\57\104";
        if (!(preg_match($zk, $wQ, $Iq) == 0)) {
            goto m8;
        }
        echo sprintf("\x6e\166\141\x6c\x69\x64\40\123\x41\115\x4c\x32\40\164\x69\x6d\145\163\x74\x61\155\160\x20\160\x61\x73\x73\x65\144\x20\x74\x6f\x20\170\163\x44\x61\x74\145\124\151\x6d\x65\124\157\x54\151\155\145\163\164\141\x6d\x70\72\40" . $wQ);
        exit;
        m8:
        $Js = intval($Iq[1]);
        $fY = intval($Iq[2]);
        $MP = intval($Iq[3]);
        $nw = intval($Iq[4]);
        $S2 = intval($Iq[5]);
        $Ug = intval($Iq[6]);
        $WE = gmmktime($nw, $S2, $Ug, $fY, $MP, $Js);
        return $WE;
    }
    public static function extractStrings(DOMElement $Lj, $y9, $tG)
    {
        $NO = array();
        $li = $Lj->firstChild;
        BH:
        if (!($li !== NULL)) {
            goto D5;
        }
        if (!($li->namespaceURI !== $y9 || $li->localName !== $tG)) {
            goto Z5;
        }
        goto c8;
        Z5:
        $NO[] = trim($li->textContent);
        c8:
        $li = $li->nextSibling;
        goto BH;
        D5:
        return $NO;
    }
    public static function validateElement(DOMElement $L0)
    {
        $dd = new XMLSecurityDSig();
        $dd->idKeys[] = "\x49\x44";
        $KM = self::xpQuery($L0, "\56\57\x64\163\72\123\x69\147\156\141\164\165\x72\145");
        if (count($KM) === 0) {
            goto n6;
        }
        if (count($KM) > 1) {
            goto pl;
        }
        goto zC;
        n6:
        return FALSE;
        goto zC;
        pl:
        echo sprintf("\x58\115\x4c\123\145\x63\72\40\x6d\157\x72\x65\x20\x74\x68\141\x6e\40\157\x6e\145\x20\163\151\147\156\x61\x74\165\162\x65\40\145\x6c\145\155\145\156\x74\40\x69\x6e\40\x72\157\157\x74\x2e");
        exit;
        zC:
        $KM = $KM[0];
        $dd->sigNode = $KM;
        $dd->canonicalizeSignedInfo();
        if ($dd->validateReference()) {
            goto Oa;
        }
        echo sprintf("\x58\x4d\114\163\145\x63\x3a\x20\144\x69\x67\145\x73\x74\40\x76\x61\x6c\151\x64\x61\164\151\x6f\x6e\40\x66\141\151\x6c\x65\x64");
        exit;
        Oa:
        $RN = FALSE;
        foreach ($dd->getValidatedNodes() as $nA) {
            if ($nA->isSameNode($L0)) {
                goto Ns;
            }
            if ($L0->parentNode instanceof DOMDocument && $nA->isSameNode($L0->ownerDocument)) {
                goto gg;
            }
            goto R8;
            Ns:
            $RN = TRUE;
            goto tH;
            goto R8;
            gg:
            $RN = TRUE;
            goto tH;
            R8:
            Sk:
        }
        tH:
        if ($RN) {
            goto At;
        }
        echo sprintf("\x58\x4d\114\123\x65\143\72\40\124\150\x65\x20\162\157\x6f\x74\x20\145\x6c\x65\x6d\145\156\164\x20\x69\163\40\x6e\157\x74\40\x73\x69\147\x6e\x65\x64\x2e");
        exit;
        At:
        $iW = array();
        foreach (self::xpQuery($KM, "\x2e\57\x64\x73\72\x4b\x65\x79\111\156\146\x6f\57\144\163\72\x58\65\x30\71\x44\x61\x74\141\57\x64\x73\x3a\130\65\x30\71\103\x65\162\164\x69\146\x69\143\x61\x74\145") as $q3) {
            $R1 = trim($q3->textContent);
            $R1 = str_replace(array("\xd", "\12", "\x9", "\x20"), '', $R1);
            $iW[] = $R1;
            nu:
        }
        ZK:
        $NO = array("\x53\151\x67\x6e\141\x74\165\x72\145" => $dd, "\103\x65\162\164\151\146\x69\x63\141\164\145\163" => $iW);
        return $NO;
    }
    public static function validateSignature(array $tH, XMLSecurityKey $gH)
    {
        $dd = $tH["\123\151\x67\x6e\x61\164\165\162\x65"];
        $m3 = self::xpQuery($dd->sigNode, "\x2e\x2f\x64\x73\72\x53\151\147\x6e\x65\x64\111\x6e\x66\157\x2f\x64\x73\72\x53\151\147\x6e\x61\164\x75\162\145\115\145\164\150\157\x64");
        if (!empty($m3)) {
            goto nh;
        }
        echo sprintf("\115\x69\x73\163\151\x6e\147\40\123\151\147\x6e\x61\x74\165\162\145\115\145\x74\150\x6f\x64\40\145\154\x65\x6d\145\156\x74");
        exit;
        nh:
        $m3 = $m3[0];
        if ($m3->hasAttribute("\x41\154\147\x6f\162\151\164\x68\x6d")) {
            goto Rx;
        }
        echo sprintf("\x4d\151\163\x73\x69\x6e\147\x20\x41\154\147\x6f\162\151\164\x68\155\55\x61\164\164\x72\151\x62\165\x74\x65\x20\157\156\x20\x53\x69\147\x6e\x61\x74\165\162\x65\115\x65\164\x68\157\x64\x20\145\154\x65\x6d\x65\x6e\164\56");
        exit;
        Rx:
        $IV = $m3->getAttribute("\101\154\x67\157\162\x69\164\x68\x6d");
        if (!($gH->type === XMLSecurityKey::RSA_SHA1 && $IV !== $gH->type)) {
            goto jZ;
        }
        $gH = self::castKey($gH, $IV);
        jZ:
        if ($dd->verify($gH)) {
            goto Kj;
        }
        echo sprintf("\x55\x6e\x61\x62\154\145\40\x74\157\x20\x76\141\154\x69\x64\x61\x74\x65\40\123\x67\x6e\x61\x74\x75\162\145");
        exit;
        Kj:
    }
    public static function castKey(XMLSecurityKey $gH, $o2, $i9 = "\x70\165\x62\154\151\143")
    {
        if (!($gH->type === $o2)) {
            goto ZR;
        }
        return $gH;
        ZR:
        $TL = openssl_pkey_get_details($gH->key);
        if (!($TL === FALSE)) {
            goto fc;
        }
        echo sprintf("\125\x6e\141\x62\154\145\x20\x74\157\40\x67\145\x74\x20\153\145\x79\x20\144\145\164\141\x69\154\163\x20\x66\x72\157\x6d\40\x58\115\x4c\x53\x65\143\165\162\151\164\x79\113\x65\x79\56");
        exit;
        fc:
        if (isset($TL["\x6b\145\171"])) {
            goto Ad;
        }
        echo sprintf("\115\151\x73\163\x69\x6e\147\x20\x6b\x65\x79\40\x69\x6e\x20\x70\x75\142\x6c\151\x63\40\153\145\x79\40\144\145\x74\141\x69\154\x73\56");
        exit;
        Ad:
        $Ty = new XMLSecurityKey($o2, array("\x74\171\160\x65" => $i9));
        $Ty->loadKey($TL["\153\145\171"]);
        return $Ty;
    }
    public static function processResponse($BI, $qu, $iY, SAML2_Response $SL)
    {
        $F_ = $SL->getDestination();
        if (!($F_ !== NULL && $F_ !== $BI)) {
            goto t3;
        }
        echo sprintf("\104\145\x73\x74\x69\x6e\141\164\151\x6f\x6e\40\x69\x6e\x20\162\145\x73\160\157\x6e\x73\145\40\x64\157\x65\x73\x6e\x27\164\40\x6d\x61\164\143\150\x20\x74\150\x65\40\x63\165\x72\x72\145\x6e\164\40\125\122\x4c\x2e\40\104\145\x73\x74\x69\x6e\141\x74\151\157\156\40\x69\x73\x20\x22" . $F_ . "\42\54\40\x63\x75\162\x72\145\x6e\164\x20\x55\122\114\x20\151\x73\x20\42" . $BI . "\x22\x2e");
        exit;
        t3:
        $Zf = self::checkSign($qu, $iY);
        return $Zf;
    }
    public static function processRequest($qu, $iY)
    {
        $Zf = self::checkSign($qu, $iY);
        return $Zf;
    }
    public static function checkSign($qu, $iY)
    {
        $iW = $iY["\x43\x65\162\x74\x69\x66\151\x63\141\x74\145\163"];
        if (!(count($iW) === 0)) {
            goto Hw;
        }
        return FALSE;
        Hw:
        $Wl = array();
        $Wl[] = $qu;
        $V0 = self::findCertificate($Wl, $iW);
        $Yu = NULL;
        $gH = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, array("\164\171\160\x65" => "\160\165\142\x6c\151\x63"));
        $gH->loadKey($V0);
        try {
            self::validateSignature($iY, $gH);
            return TRUE;
        } catch (Exception $w4) {
            $Yu = $w4;
        }
        if ($Yu !== NULL) {
            goto dg;
        }
        return FALSE;
        goto yL;
        dg:
        throw $Yu;
        yL:
    }
    public static function validateIssuerAndAudience($Jq, $bl, $mc)
    {
        $Q9 = current($Jq->getAssertions())->getIssuer();
        $hO = current(current($Jq->getAssertions())->getValidAudiences());
        if (strcmp($mc, $Q9) === 0) {
            goto Y0;
        }
        echo sprintf("\111\163\x73\165\x65\x72\40\x63\x61\156\x6e\157\x74\40\142\145\40\x76\x65\x72\151\x66\x69\x65\144\56");
        exit;
        goto Vr;
        Y0:
        if (strcmp($hO, $bl) === 0) {
            goto xZ;
        }
        echo sprintf("\x49\156\166\141\x6c\x69\144\40\141\x75\144\x69\145\x6e\x63\x65");
        exit;
        goto Ws;
        xZ:
        return TRUE;
        Ws:
        Vr:
    }
    private static function findCertificate(array $Eh, array $iW)
    {
        $PT = array();
        foreach ($iW as $U2) {
            $fE = strtolower(sha1(base64_decode($U2)));
            if (in_array($fE, $Eh, TRUE)) {
                goto DR;
            }
            $PT[] = $fE;
            goto bJ;
            DR:
            $Pz = "\x2d\55\55\x2d\55\x42\105\107\111\116\x20\103\105\x52\124\x49\106\111\103\101\x54\x45\x2d\55\55\x2d\x2d\12" . chunk_split($U2, 64) . "\x2d\55\x2d\55\x2d\x45\116\104\40\103\105\122\x54\x49\x46\x49\103\101\x54\105\x2d\x2d\55\55\x2d\xa";
            return $Pz;
            bJ:
        }
        uR:
        echo sprintf("\125\156\x61\142\x6c\x65\40\x74\157\40\146\151\156\144\40\141\40\x63\145\162\164\x69\x66\151\143\141\x74\x65\40\155\141\164\143\150\x69\156\x67\x20\164\150\145\40\x63\157\x6e\146\151\147\165\x72\145\144\40\x66\x69\x6e\x67\145\x72\x70\x72\x69\156\x74\56");
        exit;
    }
    private static function doDecryptElement(DOMElement $WX, XMLSecurityKey $Hq, array &$rf)
    {
        $kQ = new XMLSecEnc();
        $kQ->setNode($WX);
        $kQ->type = $WX->getAttribute("\124\171\x70\145");
        $j0 = $kQ->locateKey($WX);
        if ($j0) {
            goto tA;
        }
        echo sprintf("\x43\157\x75\154\x64\x20\156\157\164\x20\154\x6f\x63\141\x74\x65\x20\x6b\x65\171\40\x61\x6c\147\x6f\162\x69\x74\x68\x6d\x20\151\156\x20\x65\x6e\143\162\x79\160\164\x65\144\40\144\141\x74\141\56");
        exit;
        tA:
        $z1 = $kQ->locateKeyInfo($j0);
        if ($z1) {
            goto GB;
        }
        echo sprintf("\103\157\165\x6c\x64\40\x6e\x6f\x74\40\154\157\143\x61\164\x65\40\x3c\x64\x73\x69\147\72\x4b\145\x79\x49\x6e\146\x6f\x3e\x20\146\157\x72\x20\164\x68\x65\x20\x65\x6e\x63\x72\171\x70\x74\145\144\40\153\145\171\56");
        exit;
        GB:
        $sp = $Hq->getAlgorithm();
        if ($z1->isEncrypted) {
            goto Q1;
        }
        $rZ = $j0->getAlgorithm();
        if (!($sp !== $rZ)) {
            goto Eg;
        }
        echo sprintf("\101\154\147\x6f\162\151\x74\x68\155\40\x6d\x69\x73\x6d\141\164\143\150\40\142\145\x74\x77\x65\x65\156\40\151\156\x70\165\x74\x20\153\x65\x79\40\141\156\144\x20\x6b\x65\171\40\x69\156\40\x6d\x65\x73\163\x61\x67\x65\56\x20" . "\113\x65\171\40\x77\x61\x73\72\x20" . var_export($sp, TRUE) . "\x3b\x20\155\x65\x73\x73\x61\147\145\40\167\x61\163\x3a\x20" . var_export($rZ, TRUE));
        exit;
        Eg:
        $j0 = $Hq;
        goto WX;
        Q1:
        $KV = $z1->getAlgorithm();
        if (!in_array($KV, $rf, TRUE)) {
            goto r0;
        }
        echo sprintf("\101\x6c\x67\157\x72\151\x74\x68\155\40\x64\x69\x73\141\x62\154\145\x64\72\x20" . var_export($KV, TRUE));
        exit;
        r0:
        if (!($KV === XMLSecurityKey::RSA_OAEP_MGF1P && $sp === XMLSecurityKey::RSA_1_5)) {
            goto Ib;
        }
        $sp = XMLSecurityKey::RSA_OAEP_MGF1P;
        Ib:
        if (!($sp !== $KV)) {
            goto aO;
        }
        echo sprintf("\101\154\147\157\x72\151\x74\x68\155\x20\155\151\163\x6d\141\x74\x63\150\x20\142\x65\164\x77\145\145\x6e\x20\151\x6e\x70\x75\164\x20\x6b\145\171\x20\x61\156\x64\x20\153\145\x79\40\x75\163\x65\x64\40\164\157\40\x65\156\143\x72\x79\x70\x74\x20" . "\x20\x74\150\145\40\163\x79\x6d\155\x65\x74\162\x69\143\40\x6b\145\171\40\146\157\x72\x20\164\x68\145\x20\155\145\x73\x73\141\147\x65\56\x20\113\x65\171\x20\x77\x61\163\72\40" . var_export($sp, TRUE) . "\73\x20\x6d\x65\163\163\x61\147\x65\40\167\141\163\72\x20" . var_export($KV, TRUE));
        exit;
        aO:
        $ZS = $z1->encryptedCtx;
        $z1->key = $Hq->key;
        $NL = $j0->getSymmetricKeySize();
        if (!($NL === NULL)) {
            goto hi;
        }
        echo sprintf("\125\x6e\x6b\156\157\167\156\x20\153\145\171\x20\163\x69\x7a\145\40\146\x6f\162\40\145\x6e\143\162\x79\x70\164\151\x6f\x6e\x20\x61\x6c\147\157\x72\x69\x74\x68\155\72\40" . var_export($j0->type, TRUE));
        exit;
        hi:
        try {
            $gH = $ZS->decryptKey($z1);
            if (!(strlen($gH) != $NL)) {
                goto Ql;
            }
            echo sprintf("\125\x6e\x65\170\x70\x65\143\164\145\x64\x20\x6b\x65\x79\40\x73\151\172\x65\40\x28" . strlen($gH) * 8 . "\x62\x69\164\163\x29\x20\x66\157\162\40\x65\156\143\162\x79\160\164\x69\x6f\x6e\x20\x61\154\147\157\162\151\164\x68\155\72\40" . var_export($j0->type, TRUE));
            exit;
            Ql:
        } catch (Exception $w4) {
            $e5 = $ZS->getCipherValue();
            $WZ = openssl_pkey_get_details($z1->key);
            $WZ = sha1(serialize($WZ), TRUE);
            $gH = sha1($e5 . $WZ, TRUE);
            if (strlen($gH) > $NL) {
                goto Sd;
            }
            if (strlen($gH) < $NL) {
                goto T5;
            }
            goto hA;
            Sd:
            $gH = substr($gH, 0, $NL);
            goto hA;
            T5:
            $gH = str_pad($gH, $NL);
            hA:
        }
        $j0->loadkey($gH);
        WX:
        $o2 = $j0->getAlgorithm();
        if (!in_array($o2, $rf, TRUE)) {
            goto Nr;
        }
        echo sprintf("\x41\x6c\x67\x6f\162\x69\164\150\x6d\40\x64\151\x73\141\x62\154\x65\x64\72\x20" . var_export($o2, TRUE));
        exit;
        Nr:
        $xJ = $kQ->decryptNode($j0, FALSE);
        $hB = "\x3c\162\157\157\164\x20\x78\x6d\154\x6e\163\x3a\x73\x61\x6d\x6c\75\x22\165\162\156\x3a\x6f\141\x73\151\163\72\156\x61\x6d\145\x73\x3a\x74\x63\x3a\123\101\x4d\x4c\x3a\62\x2e\x30\72\x61\163\163\x65\x72\164\151\x6f\x6e\x22\40" . "\x78\x6d\154\156\x73\x3a\x78\163\151\75\42\150\x74\164\160\x3a\x2f\x2f\x77\x77\167\56\x77\63\x2e\157\162\147\x2f\62\60\x30\61\x2f\130\x4d\114\123\143\150\x65\x6d\x61\55\151\x6e\x73\164\141\x6e\143\145\42\76" . $xJ . "\74\x2f\162\x6f\x6f\164\76";
        $xg = new DOMDocument();
        if (@$xg->loadXML($hB)) {
            goto bq;
        }
        echo sprintf("\x46\x61\x69\154\145\x64\x20\164\157\40\x70\141\162\163\145\40\x64\145\x63\162\171\160\164\145\144\x20\130\115\114\56\40\x4d\141\171\142\145\x20\164\x68\145\40\167\162\157\x6e\147\40\x73\x68\141\x72\x65\144\x6b\x65\x79\40\167\141\x73\40\165\163\145\x64\x3f");
        throw new Exception("\x46\x61\151\154\145\x64\x20\x74\x6f\40\x70\x61\x72\163\x65\x20\x64\x65\x63\162\171\x70\x74\x65\x64\40\130\115\114\x2e\x20\x4d\x61\x79\142\x65\x20\x74\150\x65\x20\x77\x72\157\x6e\147\40\163\150\x61\162\x65\144\x6b\145\171\x20\167\141\163\40\165\163\145\x64\x3f");
        bq:
        $Nk = $xg->firstChild->firstChild;
        if (!($Nk === NULL)) {
            goto qH;
        }
        echo sprintf("\x4d\x69\x73\163\x69\x6e\x67\40\x65\156\143\162\x79\x70\164\145\144\40\145\x6c\145\x6d\x65\156\164\x2e");
        throw new Exception("\x4d\151\163\x73\151\x6e\x67\x20\x65\x6e\143\x72\x79\x70\x74\x65\144\40\x65\154\145\155\145\156\x74\x2e");
        qH:
        if ($Nk instanceof DOMElement) {
            goto Th;
        }
        echo sprintf("\104\145\143\x72\x79\x70\164\x65\x64\40\x65\154\145\x6d\x65\156\x74\40\x77\141\x73\40\x6e\157\164\x20\141\143\164\x75\141\x6c\x6c\171\40\141\x20\104\117\x4d\105\x6c\145\155\x65\x6e\164\x2e");
        Th:
        return $Nk;
    }
    public static function decryptElement(DOMElement $WX, XMLSecurityKey $Hq, array $rf = array(), XMLSecurityKey $ZC = NULL)
    {
        try {
            echo "\x74\x72\x79\x69\156\147\x20\160\162\151\155\x61\162\171";
            return self::doDecryptElement($WX, $Hq, $rf);
        } catch (Exception $w4) {
            try {
                echo "\164\162\171\x69\156\x67\x20\x73\x65\143\157\156\144\141\162\x79";
                return self::doDecryptElement($WX, $ZC, $rf);
            } catch (Exception $KL) {
            }
            echo sprintf("\106\141\151\x6c\x65\x64\40\x74\157\x20\x64\145\x63\162\171\160\164\40\130\x4d\114\40\145\x6c\x65\155\145\x6e\x74\x2e");
            exit;
        }
    }
    public static function parseBoolean(DOMElement $li, $G3, $Dl = null)
    {
        if ($li->hasAttribute($G3)) {
            goto yd;
        }
        return $Dl;
        yd:
        $Or = $li->getAttribute($G3);
        switch (strtolower($Or)) {
            case "\x30":
            case "\146\141\x6c\x73\x65":
                return false;
            case "\x31":
            case "\164\162\165\145":
                return true;
            default:
                throw new Exception("\111\156\166\x61\x6c\151\144\40\166\x61\x6c\165\145\x20\157\146\x20\x62\x6f\x6f\154\145\141\156\40\x61\164\164\x72\x69\142\x75\164\145\40" . var_export($G3, true) . "\72\40" . var_export($Or, true));
        }
        Dz:
        Is:
    }
    public static function get_mapped_groups($oj, $GM)
    {
        $OQ = array();
        if (empty($GM)) {
            goto bL;
        }
        $rr = array();
        $c0 = 1;
        pa:
        if (!($c0 < 10)) {
            goto Lz;
        }
        $cu = $oj->get("\x67\x72\157\165\160" . $c0 . "\137\155\141\x70");
        $rr[$c0] = explode("\x3b", $cu);
        $c0++;
        goto pa;
        Lz:
        bL:
        foreach ($GM as $fo) {
            if (empty($fo)) {
                goto AQ;
            }
            $c0 = 0;
            $Z1 = false;
            lw:
            if (!($c0 < 9 && !$Z1)) {
                goto OY;
            }
            if (!(!empty($rr[$c0]) && in_array($fo, $rr[$c0]))) {
                goto G0;
            }
            $OQ[] = $oj->get("\147\x72\x6f\x75\160" . $c0);
            $Z1 = true;
            G0:
            $c0++;
            goto lw;
            OY:
            AQ:
            k6:
        }
        jC:
        return array_unique($OQ);
    }
    public static function encrypt($qB, $gH)
    {
        $gH = openssl_digest($gH, "\163\150\141\x32\x35\x36");
        $kG = "\x41\x45\123\x2d\x31\x32\x38\x2d\103\x42\103";
        $Y3 = openssl_cipher_iv_length($kG);
        $cD = openssl_random_pseudo_bytes($Y3);
        $ZH = openssl_encrypt($qB, $kG, $gH, OPENSSL_RAW_DATA || OPENSSL_ZERO_PADDING, $cD);
        return base64_encode($cD . $ZH);
    }
    public static function decrypt($qB, $gH, $kG = "\101\105\123\x2d\61\x32\x38\55\x43\102\x43")
    {
        $O8 = base64_decode($qB);
        $gH = openssl_digest($gH, "\x73\x68\x61\62\65\x36");
        $Y3 = openssl_cipher_iv_length($kG);
        $cD = substr($O8, 0, $Y3);
        $qB = substr($O8, $Y3);
        $Rw = openssl_decrypt($qB, $kG, $gH, OPENSSL_RAW_DATA || OPENSSL_ZERO_PADDING, $cD);
        return $Rw;
    }
    public static function is_extension_installed($ci)
    {
        if (in_array($ci, get_loaded_extensions())) {
            goto xH;
        }
        return false;
        goto p9;
        xH:
        return true;
        p9:
    }
    public static function getEncryptionAlgorithm($kG)
    {
        switch ($kG) {
            case "\150\x74\164\x70\72\x2f\57\167\167\167\56\x77\x33\x2e\157\162\147\x2f\62\x30\60\61\x2f\x30\64\x2f\x78\x6d\154\145\156\x63\43\164\x72\x69\160\x6c\x65\144\145\x73\55\143\142\143":
                return XMLSecurityKey::TRIPLEDES_CBC;
                goto sY;
            case "\x68\x74\x74\x70\72\57\57\167\x77\167\56\x77\63\x2e\157\162\x67\x2f\x32\60\x30\x31\x2f\60\64\57\x78\x6d\154\x65\x6e\143\43\x61\x65\163\61\62\x38\x2d\143\142\x63":
                return XMLSecurityKey::AES128_CBC;
            case "\x68\164\x74\x70\x3a\57\57\167\x77\167\56\167\x33\56\x6f\162\x67\57\x32\60\x30\x31\x2f\60\x34\x2f\x78\x6d\x6c\145\x6e\x63\x23\141\x65\163\61\71\x32\55\143\142\143":
                return XMLSecurityKey::AES192_CBC;
                goto sY;
            case "\150\x74\x74\x70\x3a\57\x2f\167\x77\167\x2e\167\x33\x2e\x6f\162\147\x2f\62\60\60\61\57\x30\64\57\x78\x6d\154\x65\156\x63\x23\x61\x65\x73\x32\x35\66\55\143\x62\143":
                return XMLSecurityKey::AES256_CBC;
                goto sY;
            case "\150\x74\x74\x70\72\57\x2f\167\167\x77\56\x77\x33\x2e\x6f\162\147\57\x32\60\60\61\x2f\60\x34\x2f\x78\155\x6c\x65\x6e\x63\x23\x72\163\x61\x2d\61\137\x35":
                return XMLSecurityKey::RSA_1_5;
                goto sY;
            case "\x68\x74\164\160\x3a\x2f\57\x77\167\x77\x2e\167\x33\56\x6f\x72\147\57\x32\60\60\x31\x2f\60\x34\57\170\155\x6c\x65\x6e\143\x23\162\163\141\55\157\141\145\x70\55\155\x67\x66\61\160":
                return XMLSecurityKey::RSA_OAEP_MGF1P;
                goto sY;
            case "\150\x74\164\x70\72\57\x2f\x77\167\x77\56\167\x33\x2e\x6f\x72\147\x2f\62\60\x30\x30\x2f\x30\x39\57\x78\x6d\154\144\163\x69\x67\43\144\163\x61\x2d\163\150\141\x31":
                return XMLSecurityKey::DSA_SHA1;
                goto sY;
            case "\x68\164\164\160\72\57\57\x77\167\167\x2e\x77\x33\56\x6f\162\147\57\x32\x30\60\60\57\x30\x39\x2f\x78\x6d\x6c\x64\x73\151\x67\43\162\x73\x61\55\x73\150\x61\61":
                return XMLSecurityKey::RSA_SHA1;
                goto sY;
            case "\150\164\x74\x70\72\57\57\167\x77\x77\x2e\x77\x33\56\x6f\162\147\x2f\x32\x30\60\61\57\60\x34\x2f\x78\x6d\154\x64\x73\151\x67\x2d\x6d\157\x72\145\43\x72\163\141\x2d\x73\150\141\x32\65\x36":
                return XMLSecurityKey::RSA_SHA256;
                goto sY;
            case "\x68\164\x74\x70\x3a\x2f\57\167\x77\x77\x2e\167\x33\x2e\157\x72\147\57\x32\x30\60\61\57\x30\x34\57\x78\155\x6c\144\x73\151\x67\x2d\x6d\x6f\162\145\x23\162\163\x61\x2d\163\x68\x61\x33\70\x34":
                return XMLSecurityKey::RSA_SHA384;
                goto sY;
            case "\x68\x74\164\160\x3a\57\x2f\167\x77\x77\56\167\63\x2e\157\162\147\x2f\x32\x30\x30\61\x2f\x30\64\x2f\170\x6d\154\x64\163\151\147\55\x6d\157\x72\x65\x23\162\163\141\55\163\150\141\65\61\62":
                return XMLSecurityKey::RSA_SHA512;
                goto sY;
            default:
                echo sprintf("\x49\156\x76\x61\x6c\x69\x64\x20\x45\156\x63\x72\x79\160\164\151\x6f\x6e\x20\115\145\x74\150\x6f\144\72\x20" . $kG);
                exit;
                goto sY;
        }
        Pv:
        sY:
    }
    public static function sanitize_certificate($Yo)
    {
        $Yo = preg_replace("\57\133\xd\xa\x5d\x2b\x2f", '', $Yo);
        $Yo = str_replace("\x2d", '', $Yo);
        $Yo = str_replace("\x42\105\x47\111\116\40\x43\105\122\x54\111\x46\111\x43\101\124\x45", '', $Yo);
        $Yo = str_replace("\x45\116\x44\x20\x43\105\122\x54\x49\106\111\x43\x41\124\x45", '', $Yo);
        $Yo = str_replace("\x20", '', $Yo);
        $Yo = chunk_split($Yo, 64, "\15\12");
        $Yo = "\x2d\x2d\55\55\x2d\x42\x45\x47\111\x4e\40\x43\x45\122\x54\111\106\111\103\101\124\105\x2d\55\55\x2d\x2d\15\xa" . $Yo . "\55\55\55\55\55\105\x4e\x44\40\x43\x45\x52\124\x49\x46\111\x43\101\x54\105\x2d\55\55\55\55";
        return $Yo;
    }
    public static function sanitize_private_key($f6)
    {
        $f6 = preg_replace("\x2f\133\xd\12\x5d\x2b\x2f", '', $f6);
        $f6 = str_replace("\55", '', $f6);
        $f6 = str_replace("\102\x45\107\111\x4e\40\120\122\111\126\101\124\x45\x20\113\105\x59", '', $f6);
        $f6 = str_replace("\105\x4e\x44\x20\x50\122\111\x56\101\124\x45\x20\113\105\x59", '', $f6);
        $f6 = str_replace("\x20", '', $f6);
        $f6 = chunk_split($f6, 64, "\xd\12");
        $f6 = "\55\x2d\55\55\55\x42\105\x47\111\116\40\x50\122\x49\126\101\x54\x45\x20\x4b\105\x59\55\55\x2d\55\x2d\xd\12" . $f6 . "\x2d\55\x2d\55\55\105\116\104\40\x50\122\111\126\101\x54\x45\40\113\105\131\55\x2d\55\55\x2d";
        return $f6;
    }
    public static function desanitize_certificate($Yo)
    {
        $Yo = preg_replace("\x2f\133\15\xa\x5d\x2b\x2f", '', $Yo);
        $Yo = str_replace("\55\x2d\x2d\55\55\102\x45\107\x49\116\40\x43\x45\x52\x54\111\106\x49\x43\101\x54\x45\x2d\x2d\55\55\x2d", '', $Yo);
        $Yo = str_replace("\55\55\x2d\55\x2d\x45\116\104\40\x43\x45\x52\x54\x49\x46\111\103\101\x54\x45\55\x2d\x2d\x2d\55", '', $Yo);
        $Yo = str_replace("\40", '', $Yo);
        return $Yo;
    }
    public static function send_mail($lY, $ES)
    {
        $jk = MiniorangeSAMLIdpConstants::BASE_URL;
        $zi = MiniorangeSAMLIdpConstants::BASE_URL . "\x2f\155\x6f\x61\163\x2f\141\x70\x69\57\156\157\x74\151\x66\x79\x2f\163\145\156\144";
        $yG = curl_init($zi);
        $Eb = variable_get("\x6d\151\156\x69\x6f\162\x61\156\147\145\x5f\163\141\x6d\x6c\x5f\x69\x64\x70\137\143\165\x73\x74\x6f\155\145\x72\137\x69\144");
        $dY = variable_get("\x6d\x69\156\x69\x6f\162\141\156\x67\145\137\163\x61\155\154\137\x69\144\160\137\143\165\x73\164\x6f\x6d\x65\x72\137\x61\x70\x69\x5f\153\145\x79");
        $Zs = variable_get("\155\151\156\151\157\x72\x61\156\147\x65\137\x73\x61\155\x6c\137\x69\144\x70\x5f\x63\165\x73\164\157\155\145\162\x5f\141\x64\155\151\156\x5f\145\x6d\x61\151\154", NULL);
        $vB = self::get_timestamp();
        $kF = $Eb . $vB . $dY;
        $qp = hash("\163\x68\x61\65\61\62", $kF);
        $XY = "\103\x75\163\164\157\155\x65\x72\x2d\113\145\x79\72\x20" . $Eb;
        $uW = "\124\151\x6d\x65\163\164\x61\x6d\x70\x3a\40" . $vB;
        $bK = "\x41\165\164\150\x6f\162\x69\x7a\141\x74\x69\x6f\x6e\72\x20" . $qp;
        $xO = $Zs;
        $E8 = "\151\x6e\146\x6f\x40\170\x65\x63\165\162\x69\146\171\x2e\x63\157\x6d";
        $xE = array("\143\165\x73\164\x6f\x6d\145\162\113\x65\x79" => $Eb, "\x73\145\156\x64\x45\155\x61\151\x6c" => true, "\145\155\141\x69\x6c" => array("\143\165\x73\x74\157\x6d\x65\x72\x4b\145\171" => $Eb, "\146\x72\x6f\x6d\105\x6d\x61\x69\x6c" => $E8, "\x62\143\x63\x45\155\141\x69\154" => $E8, "\146\x72\157\155\116\x61\x6d\x65" => "\x6d\151\156\x69\x4f\x72\141\156\147\145", "\164\157\105\x6d\x61\151\154" => $xO, "\164\x6f\116\141\155\x65" => $xO, "\x73\x75\142\x6a\x65\143\x74" => $lY, "\x63\x6f\x6e\164\x65\156\x74" => $ES));
        $Ez = json_encode($xE);
        curl_setopt($yG, CURLOPT_FOLLOWLOCATION, true);
        curl_setopt($yG, CURLOPT_ENCODING, '');
        curl_setopt($yG, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($yG, CURLOPT_AUTOREFERER, true);
        curl_setopt($yG, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($yG, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($yG, CURLOPT_MAXREDIRS, 10);
        curl_setopt($yG, CURLOPT_HTTPHEADER, array("\103\157\x6e\x74\x65\156\164\x2d\124\x79\160\145\72\40\141\x70\x70\x6c\151\x63\x61\x74\x69\157\156\57\152\163\157\156", $XY, $uW, $bK));
        curl_setopt($yG, CURLOPT_POST, true);
        curl_setopt($yG, CURLOPT_POSTFIELDS, $Ez);
        $ES = curl_exec($yG);
        if (!curl_errno($yG)) {
            goto sX;
        }
        return json_encode(array("\x73\164\x61\x74\x75\x73" => "\x45\x52\122\x4f\x52", "\x73\x74\141\164\165\x73\x4d\x65\163\163\141\147\145" => curl_error($yG)));
        sX:
        curl_close($yG);
        return json_encode(array("\x73\164\x61\164\165\x73" => "\123\125\103\x43\105\123\x53", "\x73\164\141\x74\165\163\115\x65\x73\163\141\147\145" => "\123\125\x43\x43\105\x53\x53"));
    }
    public static function peruser($AB, $DQ)
    {
        global $base_url;
        $CV = $base_url;
        $ES = "\x48\145\x6c\x6c\157\54\74\142\x72\x20\57\x3e\74\x62\162\x20\x2f\76\x59\157\165\40\150\141\x76\x65\40\x70\165\x72\x63\150\x61\x73\x65\144\40\154\151\143\x65\x6e\x73\145\40\146\x6f\x72\40\x44\x72\165\160\141\x6c\40\x53\101\115\114\x20\111\104\x50\40\123\x69\x6e\147\154\x65\x20\x53\x69\147\x6e\x2d\117\156\x20\x4d\x6f\x64\165\x6c\145\x20\x66\157\162\40\74\x62\x3e\x20" . $DQ . "\x20\165\x73\x65\162\163\x3c\x2f\142\76\56\xd\12\x20\x20\x20\x20\x20\x20\x20\40\x20\40\40\40\x41\x73\x20\x6e\x75\155\142\x65\162\40\157\x66\x20\x75\163\x65\162\163\40\157\156\40\171\157\x75\162\40\x73\x69\164\x65\x20\x68\x61\166\145\40\147\x72\157\167\x6e\x20\x74\157\40\155\157\162\x65\40\164\150\x61\x6e\40" . $AB . "\40\160\x65\x72\143\145\x6e\164\40\157\146\x20" . $DQ . "\40\165\x73\145\162\163\x20\x6e\157\x77\54\x20\x79\x6f\165\x20\x73\150\157\x75\154\144\40\x75\160\147\x72\x61\144\x65\40\x79\x6f\165\x72\40\154\x69\x63\145\x6e\x73\145\x20\146\157\x72\40\x6d\x69\156\x69\x4f\x72\141\x6e\147\x65\x20\x6d\x6f\144\x75\x6c\x65\40\157\x6e\x20\171\x6f\165\162\40\x77\145\142\163\151\164\x65\72\40\x3c\142\x3e" . $CV . "\x3c\x2f\x62\76\56\xd\12\x20\40\40\x20\40\40\x20\x20\x20\x20\40\x20\74\142\162\40\x2f\76\x3c\142\x72\x20\x2f\76\x20\x43\x6c\x69\143\153\40\x3c\x61\40\x68\162\x65\146\x3d\x27\150\164\164\x70\163\x3a\57\57\154\157\147\x69\x6e\56\x78\x65\x63\165\x72\x69\x66\x79\x2e\x63\157\155\x2f\155\157\141\x73\57\x6c\157\x67\151\x6e\x3f\x72\145\144\x69\x72\145\143\x74\x55\x72\x6c\75\x68\x74\x74\160\163\x3a\57\x2f\x6c\157\x67\151\x6e\56\x78\x65\143\x75\162\x69\x66\171\x2e\143\x6f\155\x2f\155\157\141\x73\57\x69\156\x69\164\151\141\154\151\172\145\160\141\x79\x6d\145\x6e\x74\x26\x72\145\161\165\x65\x73\164\x4f\x72\151\147\x69\156\75\62\146\x61\137\141\144\144\x5f\165\163\145\x72\137\160\x6c\141\x6e\x27\76\150\145\x72\145\x3c\57\141\x3e\x20\x74\157\40\x75\160\147\162\x61\x64\x65\x20\x74\150\x65\40\154\x69\143\145\156\x73\x65\56\74\x62\x72\x20\x2f\76\15\12\40\x20\40\x20\40\40\40\x20\x20\40\x20\x20\74\x62\x72\x20\x2f\76\124\x68\x61\x6e\x6b\163\54\x3c\x62\162\40\x2f\x3e\155\151\x6e\x69\117\x72\x61\x6e\147\145\x20\x54\145\141\x6d";
        $lY = "\x4c\x69\143\145\156\163\145\40\114\151\x6d\x69\164\40\122\x65\141\x63\150\145\x64\x20" . $AB . "\40\160\145\x72\x63\x65\x6e\164\40\117\146\x20\x41\x6c\x6c\157\x77\x65\144\x20\x4e\x6f\x20\117\x66\40\125\163\x65\162\163\40\x2d\40\104\162\165\x70\141\154\55\x37\40\111\x44\x50\x20\x53\x41\115\x4c\40\x53\151\156\147\x6c\145\x20\123\151\147\156\55\x4f\156\40\174\40" . $CV;
        $Hn = json_decode(IDPUtilities::send_mail($lY, $ES), true);
    }
    public static function tenuser($DQ, $RF)
    {
        global $base_url;
        $CV = $base_url;
        $ES = "\x48\145\154\154\157\x2c\x3c\x62\x72\x20\x2f\76\x3c\142\x72\40\x2f\x3e\x59\x6f\x75\40\x68\141\166\145\x20\160\165\162\x63\x68\x61\163\x65\144\40\x6c\151\143\x65\156\163\x65\40\146\x6f\162\x20\104\x72\x75\160\141\154\40\x53\x41\115\114\x20\111\104\120\40\123\x69\x6e\x67\154\145\x20\x53\x69\x67\x6e\x2d\x4f\x6e\x20\115\157\x64\165\154\x65\40\146\157\162\x20\x3c\142\76\40" . $DQ . "\165\163\x65\x72\163\x3c\x2f\142\x3e\x2e\xd\12\40\40\40\40\40\x20\x20\x20\x20\40\x20\x20\x41\x73\x20\x6e\165\x6d\142\145\162\40\x6f\x66\x20\x75\x73\145\x72\163\40\x6f\x6e\x20\171\x6f\165\162\40\163\x69\x74\145\x20\150\x61\x76\145\x20\x67\x72\x6f\x77\x6e\40\x74\157\40" . $RF . "\x20\165\x73\145\x72\163\40\x6e\x6f\167\54\40\x79\x6f\165\x20\x73\x68\x6f\x75\x6c\x64\x20\165\x70\147\x72\x61\144\145\40\171\157\165\162\x20\154\151\x63\145\156\163\145\x20\146\x6f\162\40\x6d\151\156\151\117\x72\141\x6e\147\x65\40\155\157\x64\165\154\145\40\x6f\156\x20\171\157\165\162\40\x77\x65\142\x73\151\x74\145\x3a\40\x3c\142\76" . $CV . "\x3c\x2f\142\x3e\56\xd\12\40\40\40\40\x20\x20\40\40\x20\40\40\40\74\142\x72\x2f\x3e\74\x62\162\40\x2f\x3e\x20\103\x6c\151\143\x6b\40\74\141\x20\x68\162\x65\x66\x3d\x27\150\x74\164\160\163\x3a\57\57\154\157\147\151\156\56\170\145\143\165\162\x69\146\171\56\x63\x6f\155\x2f\x6d\x6f\141\163\x2f\x6c\x6f\x67\x69\156\x3f\162\145\x64\151\x72\145\x63\164\125\162\x6c\75\x68\164\164\x70\x73\72\x2f\x2f\154\x6f\x67\x69\x6e\56\170\x65\143\165\x72\151\146\x79\56\x63\x6f\155\57\x6d\x6f\x61\163\57\151\x6e\x69\164\x69\141\x6c\x69\172\145\x70\141\171\155\145\x6e\164\46\162\145\x71\x75\145\x73\x74\x4f\162\151\147\151\156\x3d\x32\146\141\137\141\x64\x64\x5f\165\x73\x65\x72\137\x70\x6c\141\x6e\47\76\150\145\x72\x65\x3c\57\141\x3e\x20\x74\x6f\x20\165\x70\x67\x72\x61\x64\x65\x20\x74\x68\x65\40\154\x69\x63\145\x6e\x73\145\x2e\x3c\142\x72\40\57\x3e\15\12\x20\x20\x20\40\x20\x20\40\x20\40\x20\40\x20\74\142\162\x20\57\76\x54\x68\141\156\153\x73\54\x3c\x62\162\x20\57\76\x6d\x69\x6e\151\x4f\x72\141\156\x67\145\x20\x54\145\x61\155";
        $lY = "\x54\x65\x6e\40\x75\163\145\x72\x73\40\x6c\x65\146\164\x20\164\x6f\40\x72\x65\141\x63\150\x20\x4c\x69\x6d\151\x74\x20\117\146\x20\x41\154\x6c\157\x77\x65\144\40\116\157\40\117\146\40\125\163\145\x72\163\x20\x2d\40\x44\162\165\x70\141\154\55\x37\40\111\104\120\40\123\x41\115\x4c\x20\123\x69\156\x67\x6c\145\40\x53\151\147\156\55\117\156\x20\x7c\x20" . $CV;
        $Hn = json_decode(IDPUtilities::send_mail($lY, $ES), true);
    }
    public static function limitreach($DQ, $RF)
    {
        global $base_url;
        $CV = $base_url;
        $ES = "\110\145\154\x6c\157\x2c\x3c\x62\x72\x20\57\76\x3c\142\x72\40\57\76\x59\157\165\x20\x68\141\166\x65\x20\x70\x75\x72\143\x68\141\163\145\x64\40\x6c\x69\x63\x65\x6e\x73\145\x20\146\157\x72\40\x44\x72\165\160\141\154\x20\x53\101\115\114\x20\x49\104\120\x20\123\x69\156\x67\154\x65\40\x53\x69\x67\x6e\x2d\117\x6e\x20\x4d\157\144\x75\154\x65\x20\x66\157\162\x20\74\x62\76\40" . $DQ . "\40\x75\163\145\162\x73\x3c\x2f\x62\x3e\56\x20\xd\12\40\x20\x20\x20\x20\40\40\40\x20\40\x20\x20\x41\x73\40\x6e\165\155\142\x65\x72\40\157\x66\40\165\163\145\x72\163\x20\157\x6e\40\171\157\x75\x72\x20\x73\151\164\x65\x20\150\141\163\40\x72\145\x61\143\x68\x65\x64" . $RF . "\x20\165\163\145\162\x73\x20\156\157\x77\x2c\x20\171\157\165\x20\x73\x68\157\x75\x6c\x64\40\165\x70\x67\162\x61\x64\145\x20\x79\157\x75\162\40\x6c\x69\143\x65\156\x73\145\40\x66\157\162\40\155\x69\x6e\x69\x4f\162\141\x6e\x67\x65\40\x6d\x6f\144\x75\154\x65\x20\x6f\156\x20\171\157\x75\162\40\x77\145\x62\163\151\x74\x65\72\x20\74\x62\76" . $CV . "\x3c\57\142\x3e\x2e\x3c\x62\x72\x2f\x3e\x49\146\x20\x79\157\x75\x20\x66\141\151\154\40\164\157\40\165\x70\147\x72\141\x64\145\40\x74\150\145\x20\x6c\151\143\x65\156\x73\145\40\167\x69\164\150\151\x6e\x20\x6e\145\170\164\40\x33\x30\x20\x64\141\171\163\54\40\164\x68\145\40\156\145\167\x20\x75\x73\x65\x72\x73\x20\142\x65\x79\x6f\x6e\144\40\x74\150\145\40\154\151\x63\x65\156\163\x65\40\x6c\x69\x6d\x69\x74\x20\167\157\x75\x6c\x64\40\156\x6f\164\x20\142\x65\40\141\142\154\145\x20\164\x6f\x20\123\151\156\147\154\145\x20\123\x69\147\156\55\x4f\156\56\xd\xa\x20\40\40\40\40\x20\40\x20\40\40\x20\40\x3c\142\x72\x20\57\x3e\x3c\142\162\x20\57\x3e\40\x43\x6c\x69\x63\x6b\x20\74\141\x20\x68\162\x65\146\x3d\x27\150\164\x74\x70\163\x3a\57\x2f\x6c\157\147\x69\x6e\56\x78\145\143\165\x72\151\146\x79\x2e\x63\157\x6d\57\155\157\141\x73\57\x6c\157\x67\151\156\77\x72\x65\x64\151\x72\145\x63\x74\x55\162\154\75\x68\x74\x74\160\x73\72\x2f\57\x6c\x6f\147\151\x6e\56\x78\145\x63\165\162\151\146\x79\x2e\143\x6f\x6d\57\155\x6f\141\163\57\x69\156\151\164\x69\x61\154\x69\x7a\x65\160\141\x79\155\x65\x6e\164\x26\x72\145\161\x75\x65\x73\164\x4f\x72\151\147\151\x6e\75\62\146\x61\137\x61\144\x64\137\x75\163\145\162\137\x70\154\x61\156\47\76\150\x65\162\x65\x3c\57\141\76\x20\164\x6f\40\x75\160\147\x72\141\144\145\40\x74\150\145\x20\154\x69\143\145\156\163\x65\56\74\x62\162\x20\57\76\15\12\40\40\x20\40\x20\40\x20\x20\40\40\40\x20\x3c\142\x72\x20\57\76\x54\x68\141\156\x6b\x73\x2c\x3c\142\162\40\x2f\76\155\151\x6e\151\x4f\x72\x61\x6e\x67\145\x20\x54\145\141\x6d";
        $lY = "\x52\x65\x61\x63\150\x65\x64\x20\x4c\151\143\145\x6e\163\145\40\x4c\151\155\151\x74\40\106\157\x72\x20\x4e\x6f\x20\117\146\x20\125\163\145\x72\x73\40\x2d\40\x44\x72\165\x70\141\x6c\x2d\67\40\111\104\x50\40\x53\x41\115\x4c\40\123\x69\156\147\154\145\40\123\151\x67\x6e\55\x4f\156\x20\x7c\x20" . $CV;
        $Hn = json_decode(IDPUtilities::send_mail($lY, $ES), true);
    }
    public static function limitmid($DQ)
    {
        global $base_url;
        $CV = $base_url;
        $ES = "\110\145\x6c\154\157\54\74\142\x72\40\x2f\76\x3c\142\x72\x20\57\76\131\157\x75\x20\x68\x61\x76\145\40\160\165\x72\143\150\141\x73\x65\x64\x20\154\x69\143\x65\156\x73\145\40\146\x6f\x72\x20\x44\162\x75\160\x61\x6c\40\123\x41\x4d\x4c\x20\111\x44\x50\x20\x53\151\x6e\147\154\145\x20\123\151\147\x6e\55\117\156\40\x4d\x6f\x64\165\154\145\x20\x66\157\x72\40\x3c\142\76" . $DQ . "\40\165\x73\145\162\x73\x3c\x2f\x62\76\56\x20\15\xa\x20\40\40\x20\40\x20\40\40\x20\40\40\40\x54\150\145\x20\x6e\165\155\x62\x65\162\40\x6f\x66\40\165\x73\x65\x72\x73\40\x6f\156\40\171\157\x75\x72\40\163\x69\x74\x65\40\x68\x61\163\40\x65\x78\x63\x65\145\x64\145\x64\40\x74\150\145\x20\x6c\151\x63\x65\x6e\163\145\x20\x6c\x69\x6d\x69\x74\x20\61\x35\x20\x64\141\171\163\40\x61\x67\x6f\x2e\40\x59\x6f\165\x20\x73\150\x6f\x75\154\x64\x20\165\160\147\x72\141\x64\x65\x20\x79\x6f\x75\x72\x20\154\151\143\x65\156\x73\145\40\146\x6f\x72\40\x74\x68\x65\40\155\x6f\x64\x75\x6c\x65\x20\157\156\x20\171\x6f\x75\162\40\x77\145\x62\163\151\x74\145\x3a\40\x3c\x62\x3e\40" . $CV . "\74\57\142\x3e\x2e\15\xa\40\40\40\40\x20\x20\40\x20\x20\40\x20\40\x3c\x62\162\57\x3e\x49\x66\40\171\x6f\x75\x20\146\x61\151\x6c\x20\x74\157\40\x75\x70\147\x72\x61\x64\145\x20\164\x68\x65\40\x6c\x69\143\145\x6e\x73\145\40\167\151\164\150\x69\x6e\40\x6e\145\x78\x74\x20\x31\65\40\x64\141\x79\163\x2c\40\x74\150\x65\40\x6e\145\x77\x20\165\x73\145\162\x73\x20\x62\x65\171\x6f\x6e\144\40\x74\x68\x65\x20\154\x69\143\145\156\x73\x65\x20\154\x69\155\151\x74\40\x77\157\x75\x6c\144\x20\x6e\x6f\x74\x20\142\x65\x20\x61\142\154\145\40\x74\157\x20\123\x69\156\x67\x6c\x65\40\x53\151\x67\156\55\117\x6e\56\x3c\x62\162\x20\x2f\x3e\x20\xd\12\40\40\x20\x20\x20\40\40\x20\x20\40\40\40\x3c\x62\x72\40\57\x3e\40\x43\x6c\151\143\x6b\40\74\141\x20\x68\162\x65\x66\x3d\47\x68\164\164\160\163\72\57\x2f\154\157\147\151\156\x2e\x78\145\143\165\x72\151\146\171\56\143\157\x6d\57\155\x6f\x61\x73\x2f\x6c\x6f\147\x69\156\x3f\162\x65\x64\x69\162\145\143\x74\125\162\154\75\150\x74\x74\x70\163\x3a\x2f\x2f\154\157\x67\151\156\56\x78\x65\x63\x75\x72\151\x66\x79\56\x63\157\155\57\x6d\x6f\x61\163\x2f\151\156\x69\164\151\x61\x6c\x69\x7a\x65\160\141\x79\155\145\156\164\46\x72\145\x71\x75\x65\163\164\x4f\x72\151\147\151\156\75\62\146\141\x5f\x61\144\x64\137\x75\163\x65\162\x5f\x70\x6c\141\156\47\x3e\150\x65\x72\145\74\57\141\x3e\40\164\157\x20\165\160\147\162\141\144\145\x20\x74\x68\x65\40\154\151\143\145\156\163\x65\56\x3c\142\162\x20\57\76\xd\12\40\40\x20\40\x20\x20\x20\40\40\x20\40\40\74\142\x72\40\x2f\x3e\x54\x68\x61\x6e\153\x73\x2c\x3c\x62\x72\x20\57\x3e\x6d\151\x6e\151\x4f\x72\x61\156\147\145\40\x54\145\x61\155";
        $lY = "\x45\x78\x63\x65\145\x64\x65\144\x20\114\x69\x63\x65\x6e\163\145\x20\114\151\x6d\151\x74\x20\x46\157\x72\x20\x4e\x6f\x20\x4f\x66\40\x55\x73\x65\162\x73\x20\55\x20\x44\x72\165\x70\x61\x6c\x2d\x37\40\x49\104\120\x20\x53\x41\x4d\114\40\x53\151\x6e\x67\x6c\x65\40\x53\x69\x67\x6e\x2d\117\x6e\40\174\x20" . $CV;
        $Hn = json_decode(IDPUtilities::send_mail($lY, $ES), true);
    }
    public static function limitend($DQ)
    {
        global $base_url;
        $CV = $base_url;
        $ES = "\110\145\x6c\154\x6f\54\74\142\x72\x20\x2f\x3e\x3c\142\x72\40\x2f\x3e\x59\x6f\165\x20\150\141\166\145\x20\160\165\162\143\x68\141\x73\x65\144\40\154\151\x63\145\x6e\163\145\40\x66\157\x72\40\104\162\x75\x70\141\x6c\40\x53\101\x4d\x4c\40\111\x44\120\x20\x53\x69\156\147\x6c\145\x20\x53\x69\147\156\55\x4f\156\40\115\157\144\x75\154\145\40\146\157\x72\40\x3c\142\x3e" . $DQ . "\165\x73\145\x72\163\74\x2f\x62\76\x2e\x20\15\12\x20\x20\40\40\x20\40\40\x20\40\x20\x20\40\124\150\145\x20\156\x75\155\142\x65\x72\x20\x6f\x66\40\165\x73\145\x72\163\40\157\156\x20\x79\157\165\x72\40\163\x69\x74\145\x20\x68\x61\x73\x20\145\x78\x63\x65\x65\144\145\x64\x20\164\150\x65\40\154\x69\143\x65\x6e\163\x65\x20\154\x69\155\x69\x74\40\63\60\40\x64\x61\x79\163\40\141\147\157\56\40\131\x6f\165\40\x68\x61\166\x65\40\x6e\157\x74\x20\x75\160\x67\x72\x61\144\x65\144\40\171\x6f\165\162\40\154\151\143\x65\x6e\x73\145\40\x69\x6e\40\x74\x68\x65\x20\63\x30\40\144\x61\171\x73\40\147\162\141\143\145\40\x70\x65\162\151\157\144\40\160\162\x6f\x76\151\x64\x65\x64\40\164\157\x20\171\157\165\56\x20\124\150\145\40\156\x65\167\x20\x75\163\145\x72\163\x20\x62\145\171\157\156\x64\40\x74\x68\145\x20\154\151\143\145\x6e\163\x65\40\154\151\155\x69\164\x20\167\157\165\x6c\144\40\x6e\x6f\x74\40\x62\x65\40\x61\142\x6c\145\40\164\157\x20\123\x69\156\x67\154\145\40\x53\151\147\156\x2d\x4f\156\x20\x6e\x6f\x77\x2e\xd\12\x20\40\x20\40\x20\40\x20\x20\x20\40\x20\40\x3c\142\x72\40\57\x3e\x3c\142\162\x20\x2f\76\40\x43\x6c\x69\143\153\x20\74\x61\40\x68\162\x65\x66\75\x27\150\x74\164\160\163\x3a\x2f\x2f\x6c\157\147\151\x6e\56\170\145\143\x75\162\x69\146\171\x2e\143\x6f\155\57\155\x6f\x61\163\57\x6c\157\x67\151\x6e\x3f\x72\145\x64\151\x72\x65\143\x74\125\x72\x6c\x3d\150\164\164\160\x73\x3a\x2f\57\154\x6f\x67\x69\156\x2e\x78\145\x63\x75\x72\x69\x66\171\x2e\143\157\155\x2f\155\x6f\141\163\x2f\151\156\151\x74\151\141\154\x69\172\145\x70\141\171\155\145\x6e\164\46\162\x65\x71\165\x65\x73\x74\117\x72\x69\147\151\156\75\x32\146\x61\137\141\144\x64\137\165\x73\x65\x72\137\160\x6c\x61\156\47\x3e\x68\145\x72\145\74\x2f\141\76\40\x74\157\x20\165\160\147\162\x61\x64\145\x20\164\150\145\40\x6c\151\x63\145\x6e\x73\145\56\x3c\x62\x72\40\x2f\x3e\xd\xa\40\40\x20\x20\40\x20\40\x20\x20\40\40\x20\x3c\x62\x72\x20\57\76\x54\150\x61\x6e\x6b\x73\54\74\142\x72\40\57\x3e\155\151\156\151\117\162\141\156\147\145\40\x54\x65\141\x6d";
        $lY = "\x45\170\x63\x65\x65\144\145\x64\40\114\151\143\145\156\x73\x65\x20\x4c\151\155\151\164\x20\106\157\162\x20\116\157\40\x4f\x66\x20\x55\x73\145\x72\163\40\x2d\x20\x44\162\165\160\141\x6c\x2d\67\40\111\104\x50\40\123\x41\115\114\x20\x53\151\156\147\x6c\145\40\123\x69\147\x6e\55\x4f\x6e\x20\x7c\x20" . $CV;
        $Hn = json_decode(IDPUtilities::send_mail($lY, $ES), true);
    }
    public static function dayleft($ZM)
    {
        global $base_url;
        $CV = $base_url;
        $ES = "\110\x65\x6c\x6c\157\x2c\x3c\x62\162\x20\57\x3e\74\x62\162\x20\x2f\76\124\150\x69\x73\40\145\155\x61\x69\154\x20\x69\163\40\164\157\x20\x6e\x6f\x74\x69\146\171\40\x79\x6f\x75\40\164\x68\x61\164\40\x79\157\165\162\40\61\x20\171\145\x61\x72\40\154\x69\x63\x65\x6e\x73\x65\40\x66\157\162\40\104\162\165\160\x61\x6c\x20\x53\x41\x4d\x4c\x20\111\x44\120\40\x53\x69\156\x67\154\145\40\123\x69\x67\156\55\x4f\x6e\x20\115\157\x64\165\x6c\x65\x20\167\x69\154\154\40\x65\x78\160\151\x72\145\40\x69\x6e\x20\74\142\76" . $ZM . "\x64\x61\x79\x73\x3c\57\x62\76\x2e\40\xd\xa\40\x20\x20\x20\x20\x20\40\x20\x20\40\40\40\124\x68\145\x20\155\157\144\165\x6c\x65\40\x77\151\154\x6c\x20\x73\164\157\x70\40\x77\157\x72\x6b\151\156\x67\x20\141\146\x74\145\162\40\x74\150\145\x20\154\151\143\145\156\x73\x65\144\x20\x70\145\x72\151\157\x64\x20\x65\170\160\151\162\x65\163\56\x3c\x62\x72\40\57\x3e\74\x62\162\40\x2f\76\x59\x6f\x75\x20\167\151\x6c\154\x20\x6e\x65\x65\144\x20\164\157\40\162\145\x6e\145\x77\40\171\157\x75\162\40\154\151\143\145\156\163\x65\40\164\157\x20\x63\157\156\x74\151\156\x75\x65\40\x75\163\151\156\x67\40\x74\x68\x65\x20\x6d\157\144\165\x6c\145\x20\157\x6e\40\x79\x6f\x75\x72\40\x77\x65\142\163\151\164\145\72\40\x3c\x62\76" . $CV . "\x3c\57\142\76\56\15\12\x20\40\x20\40\x20\x20\40\x20\x20\x20\40\x20\x3c\x62\162\x20\x2f\76\x3c\142\162\40\57\76\103\x6c\151\143\153\x20\74\x61\x20\150\x72\145\x66\75\x27\x68\x74\x74\160\x73\72\x2f\57\154\157\x67\151\x6e\56\x78\x65\143\x75\x72\x69\x66\x79\x2e\x63\157\x6d\57\x6d\157\x61\x73\57\154\157\x67\151\156\x3f\x72\x65\x64\151\x72\x65\x63\x74\125\x72\154\75\150\164\x74\160\163\x3a\57\x2f\154\x6f\x67\151\x6e\56\170\145\143\165\162\x69\146\x79\x2e\x63\157\x6d\x2f\155\x6f\x61\x73\x2f\151\x6e\151\164\151\x61\x6c\151\172\x65\160\141\x79\x6d\145\x6e\x74\46\x72\145\x71\x75\x65\163\164\117\x72\x69\x67\x69\156\75\x72\x65\156\145\x77\x5f\165\163\145\162\x5f\x6c\151\143\145\156\x73\x65\47\76\150\145\x72\145\74\x2f\x61\76\x20\x74\x6f\40\162\x65\x6e\145\167\40\x74\x68\145\40\x6c\151\143\x65\x6e\x73\145\x2e\74\142\162\40\57\76\xd\xa\x20\40\40\40\40\x20\x20\40\x20\x20\x20\40\x3c\142\162\x20\57\76\124\x68\141\x6e\153\x73\x2c\74\142\162\40\x2f\76\155\151\x6e\151\x4f\x72\x61\156\x67\x65\x20\x54\145\x61\x6d";
        $lY = "\x4c\x69\143\145\156\163\x65\x20\x45\170\160\x69\x72\x79\40\x2d\x20\x44\162\165\x70\x61\x6c\x2d\x37\40\x49\104\x50\40\x53\101\115\x4c\x20\x53\151\156\147\154\145\40\123\151\x67\156\x2d\117\x6e\x20\x4d\x6f\x64\x75\154\x65\x20\174\40" . $CV;
        $Hn = json_decode(IDPUtilities::send_mail($lY, $ES), true);
    }
    public static function limit($h1)
    {
        global $base_url;
        $CV = $base_url;
        $ES = "\110\x65\x6c\154\x6f\x2c\x3c\x62\x72\x20\57\x3e\74\x62\x72\40\57\x3e\131\x6f\165\162\x20\x31\x20\x79\x65\141\162\x20\x6c\x69\x63\145\156\x73\x65\40\x66\x6f\x72\40\x44\x72\x75\160\x61\x6c\x20\x49\104\120\x20\123\x41\115\x4c\x20\123\x69\x6e\x67\x6c\x65\40\x53\151\x67\x6e\x2d\117\156\x20\x4d\x6f\x64\x75\x6c\x65\x20\150\x61\x73\40\145\x78\x70\151\x72\x65\x64\40\x6f\x6e\40\74\x62\76" . $h1 . "\74\57\142\76\x2e\x20\x49\146\40\171\x6f\165\40\x64\x6f\40\x6e\x6f\x74\40\162\x65\x6e\x65\167\40\x79\157\x75\162\40\154\x69\x63\x65\156\x73\145\x20\x73\x6f\x6f\156\x2e\40\124\150\x65\40\155\x6f\144\165\x6c\x65\40\167\151\154\154\40\142\x65\40\x64\145\141\x63\164\x69\x76\141\x74\145\144\x20\157\x6e\x20\x79\157\x75\162\40\167\145\142\x73\151\164\x65\40\x3c\142\x20\x2f\x3e" . $CV . "\74\57\x62\x3e\x2e\15\12\40\40\40\x20\x20\x20\40\40\40\x20\x20\x20\74\142\162\40\x2f\76\x3c\142\162\x20\57\76\x43\154\x69\x63\153\40\x3c\x61\40\x68\162\145\x66\x3d\x27\150\x74\x74\x70\x73\72\57\57\154\157\147\x69\156\56\x78\145\143\165\162\151\x66\171\56\x63\x6f\155\x2f\155\157\x61\163\57\154\x6f\x67\x69\156\77\x72\145\144\x69\162\x65\143\164\x55\x72\154\x3d\150\164\x74\x70\x73\x3a\57\57\x6c\x6f\147\151\156\x2e\x78\145\x63\x75\x72\x69\146\171\x2e\143\x6f\155\57\155\x6f\141\x73\x2f\x69\x6e\x69\164\151\141\x6c\151\172\x65\160\x61\171\x6d\x65\156\164\46\162\145\x71\165\x65\x73\x74\x4f\x72\151\147\151\x6e\x3d\162\145\x6e\x65\167\x5f\x75\x73\145\x72\x5f\154\151\143\x65\x6e\x73\x65\47\76\x68\145\162\x65\74\x2f\141\76\40\164\157\x20\162\x65\156\x65\x77\x20\x74\150\x65\x20\x6c\x69\x63\145\156\x73\145\56\74\x62\162\x20\x2f\76\15\xa\x20\40\40\40\x20\x20\40\x20\40\40\x20\x20\74\x62\162\40\x2f\x3e\124\150\141\156\x6b\163\54\x3c\142\162\40\x2f\76\x6d\151\156\151\x4f\162\x61\156\x67\145\40\x54\145\141\x6d";
        $lY = "\114\x69\x63\145\156\163\145\40\x45\170\x70\151\162\145\x64\x20\55\x20\104\162\x75\x70\141\154\55\x37\40\x49\x44\x50\40\x53\101\x4d\114\40\x53\x69\156\147\x6c\x65\x20\x53\x69\x67\x6e\x2d\117\156\x20\x4d\157\x64\x75\x6c\x65\40\x7c\x20" . $CV;
        $Hn = json_decode(IDPUtilities::send_mail($lY, $ES), true);
    }
    public static function dexdmid($h1)
    {
        global $base_url;
        $CV = $base_url;
        $ES = "\x48\145\154\154\x6f\x2c\x3c\142\162\40\57\x3e\74\142\162\40\x2f\76\131\x6f\x75\162\x20\61\x20\x79\x65\141\162\x20\154\151\x63\145\x6e\x73\x65\x20\146\157\x72\40\x44\x72\165\x70\141\154\x20\x49\x44\x50\40\x53\x41\x4d\x4c\x20\123\151\156\x67\154\x65\40\x53\151\x67\156\55\x4f\156\x20\115\x6f\x64\x75\154\145\40\146\157\x72\x20\x79\157\165\162\40\x77\145\x62\163\151\x74\x65\x20\x3c\x62\x3e" . $CV . "\74\57\x62\76\x20\x65\170\x70\151\x72\x65\x64\40\x6f\x6e\x3c\x62\76\x20" . $h1 . "\74\x2f\142\76\x2e\15\xa\x20\40\x20\x20\x20\x20\x20\x20\x20\40\x20\40\111\x66\40\x79\x6f\x75\x72\40\x6c\151\x63\x65\x6e\x73\145\40\x69\x73\x20\x6e\157\x74\x20\x72\145\156\145\x77\145\144\40\163\x6f\157\156\x2c\x20\x74\150\x65\x20\155\x6f\x64\165\154\x65\40\x77\151\x6c\x6c\40\142\145\x20\144\x65\x61\143\164\x69\166\141\x74\145\144\56\x3c\x62\x72\40\57\x3e\74\142\x72\40\57\76\x43\x6c\151\x63\153\x20\74\141\40\150\x72\x65\146\x3d\x27\x68\164\x74\x70\163\x3a\57\57\x6c\x6f\147\x69\156\56\170\145\143\x75\162\x69\x66\171\x2e\x63\x6f\x6d\x2f\x6d\x6f\141\163\x2f\x6c\157\x67\x69\x6e\77\162\145\144\151\x72\x65\x63\164\125\162\x6c\x3d\x68\164\164\160\x73\72\57\x2f\x6c\157\x67\151\156\56\170\x65\143\165\162\151\146\171\56\143\x6f\155\x2f\x6d\157\141\x73\x2f\x69\x6e\151\164\x69\x61\154\151\172\145\x70\141\171\155\145\156\164\x26\x72\x65\161\165\145\163\164\117\162\x69\147\x69\156\75\x72\x65\156\145\167\137\x75\x73\145\162\x5f\154\151\143\145\x6e\x73\x65\x27\76\150\145\x72\145\x3c\x2f\x61\76\x20\x74\157\40\x72\x65\x6e\x65\x77\40\164\x68\x65\40\x6c\x69\143\145\x6e\x73\x65\56\74\142\162\x20\57\x3e\xd\xa\x20\x20\x20\40\x20\40\x20\x20\x20\x20\x20\x20\74\142\162\40\x2f\76\124\150\141\x6e\153\x73\x2c\x3c\142\162\x20\x2f\76\155\x69\x6e\151\117\x72\141\x6e\147\145\x20\124\x65\x61\155";
        $lY = "\x4c\151\143\x65\x6e\x73\145\40\105\170\160\x69\x72\145\x64\40\x2d\x20\x44\x72\x75\x70\x61\x6c\55\67\40\x49\104\x50\x20\x53\101\115\114\40\123\x69\156\x67\x6c\145\40\x53\151\x67\156\x2d\x4f\x6e\x20\x4d\x6f\144\x75\x6c\x65\40\x7c\x20" . $CV;
        $Hn = json_decode(IDPUtilities::send_mail($lY, $ES), true);
    }
    public static function dexdend($h1)
    {
        global $base_url;
        $CV = $base_url;
        $ES = "\x48\145\154\x6c\x6f\54\74\x62\x72\40\57\x3e\x3c\x62\x72\x20\x2f\76\131\x6f\x75\162\x20\x31\40\x79\145\x61\x72\40\x6c\x69\143\145\156\x73\x65\x20\146\157\x72\x20\x44\162\165\x70\x61\x6c\40\111\x44\120\40\x53\x41\115\x4c\x20\123\x69\156\x67\154\x65\x20\123\151\147\156\55\117\156\x20\115\157\x64\165\x6c\x65\x20\150\141\x73\x20\x65\170\160\x69\162\145\x64\40\x6f\x6e\40\x3c\142\76" . $h1 . "\74\57\x62\76\56\x20\131\x6f\x75\40\x68\141\x76\145\x20\156\x6f\x74\40\162\x65\x6e\x65\167\145\144\40\171\x6f\x75\x72\40\154\151\x63\x65\x6e\x73\145\40\x77\151\x74\x68\x69\x6e\x20\x74\x68\145\40\63\60\x20\144\141\x79\x73\x20\x67\162\141\x63\x65\x20\x70\145\x72\x69\x6f\x64\40\147\151\166\x65\156\x20\x74\x6f\x20\x79\x6f\165\x2e\40\124\150\x65\x20\155\157\144\x75\154\145\x20\x68\x61\x73\x20\x62\145\x65\156\40\144\145\141\x63\164\151\166\x61\164\145\x64\x20\157\156\x20\x79\157\165\162\x20\167\x65\x62\163\151\164\145\40\74\142\x3e" . $CV . "\74\x2f\142\x3e\x2e\xd\12\40\x20\x20\x20\40\x20\40\x20\40\40\40\x20\x3c\142\162\40\x2f\x3e\74\142\x72\40\57\76\x43\x6c\151\143\153\40\74\x61\x20\x68\x72\145\x66\75\47\x68\x74\164\160\x73\x3a\57\x2f\154\157\x67\x69\x6e\56\170\145\x63\x75\162\151\146\171\56\143\x6f\x6d\57\x6d\x6f\x61\163\x2f\x6c\x6f\x67\x69\156\77\162\145\x64\x69\x72\145\143\x74\125\x72\x6c\75\x68\x74\164\x70\163\x3a\57\57\154\x6f\x67\x69\x6e\56\x78\x65\143\165\162\151\x66\x79\56\143\157\x6d\57\155\157\x61\x73\x2f\151\x6e\151\x74\x69\141\154\x69\172\x65\160\141\x79\155\145\x6e\x74\x26\x72\145\161\165\145\x73\x74\117\x72\151\147\151\x6e\x3d\162\145\x6e\x65\x77\137\165\x73\145\x72\137\x6c\x69\143\x65\x6e\x73\x65\47\76\x68\145\x72\x65\x3c\x2f\x61\76\x20\x74\x6f\x20\x72\145\156\145\167\40\x74\x68\145\40\x6c\151\x63\x65\156\163\145\56\xd\xa\x20\40\40\x20\40\x20\40\x20\40\40\x20\x20\x3c\142\162\x20\57\x3e\x3c\142\162\x20\57\x3e\124\150\141\156\x6b\x73\54\74\142\x72\40\x2f\x3e\x6d\151\x6e\151\117\x72\141\x6e\x67\x65\x20\124\x65\141\155";
        $lY = "\114\x69\x63\145\156\x73\x65\x20\x45\x78\160\x69\162\x65\x64\40\55\40\x44\162\x75\160\x61\154\x2d\67\40\x49\x44\x50\x20\x53\101\115\114\40\123\x69\x6e\x67\154\145\40\123\151\x67\x6e\x2d\117\x6e\x20\115\157\x64\165\x6c\x65\40\x7c\40" . $CV;
        $Hn = json_decode(IDPUtilities::send_mail($lY, $ES), true);
    }
    public static function checkupdate($Gn)
    {
        $V9 = new MiniorangeSAMLIdpCustomer(NULL, NULL, NULL, NULL);
        $ES = json_decode($V9->ccl(), true);
        if (!($ES["\x73\164\x61\x74\165\163"] == "\123\x55\x43\x43\x45\x53\x53")) {
            goto LJ;
        }
        if (!isset($ES["\x6c\151\x63\145\x6e\x73\x65\105\x78\x70\151\162\x79"])) {
            goto O3;
        }
        $Ae = $ES["\x6c\151\143\x65\156\163\x65\x45\x78\x70\x69\162\x79"];
        $N1 = strtotime($ES["\154\151\x63\145\x6e\163\x65\x45\170\160\x69\162\x79"]);
        if (!(time() <= $Ae - 2592000)) {
            goto eF;
        }
        $xF = 0;
        variable_set("\155\x69\x6e\x69\x6f\162\141\156\147\145\x5f\145\170\154\151\x5f\164\150\151\162\164\171\141\x62\x63", $xF);
        variable_set("\155\151\x6e\151\x6f\x72\x61\156\147\x65\x5f\145\x78\x6c\x69\137\x66\x69\x66\x74\x65\x65\156\x61\x62\x63", $xF);
        variable_set("\x6d\151\x6e\151\157\162\x61\x6e\x67\x65\x5f\145\x78\154\x69\x5f\x66\x69\166\x65\x61\x62\x63", $xF);
        variable_set("\155\x69\156\x69\x6f\x72\x61\156\147\x65\x5f\x65\170\x6c\x69\141\x62\x63", $xF);
        variable_set("\x6d\x69\156\x69\x6f\162\141\x6e\147\x65\137\x67\x72\143\137\x66\151\x76\145\x61\x62\x63", $xF);
        variable_set("\x6d\x69\156\x69\x4f\x72\x61\156\x67\145\x5f\x73\141\155\154\x5f\x69\x64\x70\137\x6c\x5f\x65\x78\160", $N1);
        eF:
        O3:
        LJ:
        $LK = $ES["\156\x6f\117\x66\125\x73\145\162\163"];
        if ($LK != $Gn) {
            goto P7;
        }
        return FALSE;
        goto xX;
        P7:
        variable_set("\x6d\x69\156\151\117\x72\x61\x6e\147\145\x5f\163\141\155\154\x5f\x69\144\x70\137\165\163\x65\x72\137\x63\157\165\x6e\164", $LK);
        return TRUE;
        xX:
    }
    public static function licensevalidity($Ae)
    {
        $V9 = new MiniorangeSAMLIdpCustomer(NULL, NULL, NULL, NULL);
        $ES = json_decode($V9->ccl(), true);
        $ix = strtotime($ES["\154\x69\x63\x65\x6e\163\145\x45\170\x70\151\x72\171"]);
        if ($ix > $Ae) {
            goto fH;
        }
        return FALSE;
        goto Bx;
        fH:
        variable_set("\x6d\x69\156\x69\x4f\162\141\x6e\x67\x65\137\163\141\x6d\x6c\x5f\x69\x64\x70\137\x6c\137\145\170\160", $ix);
        $zO = db_update("\x6d\151\x6e\151\x6f\x72\141\156\147\145\137\x73\x61\155\154\x5f\151\x64\160\x5f\x75\163\x65\162")->fields(array("\125\x73\145\x72\x49\x6e" => 0))->execute();
        return TRUE;
        Bx:
    }
    public static function get_timestamp()
    {
        $zi = MiniorangeSAMLIdpConstants::BASE_URL . "\57\155\157\x61\x73\x2f\162\x65\163\x74\57\155\157\142\151\154\x65\x2f\147\x65\164\x2d\164\151\155\x65\x73\164\141\155\160";
        $yG = curl_init($zi);
        curl_setopt($yG, CURLOPT_FOLLOWLOCATION, true);
        curl_setopt($yG, CURLOPT_ENCODING, '');
        curl_setopt($yG, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($yG, CURLOPT_AUTOREFERER, true);
        curl_setopt($yG, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($yG, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($yG, CURLOPT_MAXREDIRS, 10);
        curl_setopt($yG, CURLOPT_POST, true);
        $ES = curl_exec($yG);
        if (!curl_errno($yG)) {
            goto xn;
        }
        echo "\x45\162\162\157\162\x20\151\156\40\x73\145\156\x64\x69\156\x67\x20\143\x75\x72\154\40\x52\145\161\165\145\x73\x74";
        exit;
        xn:
        curl_close($yG);
        return $ES;
    }
    public static function freelicensekey()
    {
        variable_del("\x6d\151\156\151\157\162\x61\x6e\147\x65\x5f\163\141\155\x6c\x5f\151\144\160\137\x73\155\x6c\x5f\154\153");
        $X0 = "\x4d\117\111\x44\120\137\x56\105\122\x49\106\x59\x5f\114\111\x43\105\116\x53\105";
        variable_set("\155\151\156\x69\x6f\x72\141\156\x67\145\137\x73\141\x6d\x6c\137\x69\144\160\137\x73\164\141\x74\x75\163", $X0);
        $xF = 0;
        variable_set("\155\x69\x6e\151\x6f\x72\141\156\147\x65\137\145\x78\x6c\151\137\164\x68\x69\x72\164\171\x61\x62\143", $xF);
        variable_set("\x6d\x69\x6e\x69\x6f\162\x61\156\147\x65\x5f\x65\170\x6c\151\x5f\x66\x69\146\x74\x65\x65\x6e\141\x62\143", $xF);
        variable_set("\x6d\x69\156\x69\157\162\x61\156\x67\x65\x5f\145\x78\x6c\x69\x5f\146\151\166\x65\141\x62\143", $xF);
        variable_set("\x6d\x69\156\x69\157\162\141\x6e\x67\145\x5f\145\170\x6c\151\141\142\x63", $xF);
        variable_set("\x6d\x69\156\x69\x6f\x72\x61\156\147\145\137\x67\162\143\137\x66\x69\x76\x65\x61\142\x63", $xF);
        variable_set("\x75\145\x5f\x63\x6f\165\x6e\164", $xF);
    }
    public static function createUpdateUrl($rC, $J9, $wo, $dY, $Vn, $EY)
    {
        $CR = "\x31\61\61\61\x31\61\x31\61\61\61\x31\x31\x31\61\61\x31" . $rC;
        $zi = $EY . "\x2f\x6d\157\141\163\x2f\x61\160\x69\x2f\160\x6c\165\147\151\156\57\144\x72\165\160\141\x6c\x4a\157\157\155\154\141\125\160\x64\x61\x74\x65\57" . $Vn . "\57" . $J9 . "\57" . $wo . "\57";
        $Jj = openssl_cipher_iv_length($aL = "\101\x45\x53\x2d\x31\62\x38\55\103\102\103");
        $cD = openssl_random_pseudo_bytes($Jj);
        $xl = openssl_encrypt($CR, $aL, $dY, $a0 = OPENSSL_RAW_DATA, $cD);
        return $zi . str_replace(["\x2b", "\x2f", "\75"], ["\55", "\x5f", ''], base64_encode($xl));
    }
    public static function getSamlRequestPlanName()
    {
        return "\144\162\x75\160\x61\154\x5f\163\141\155\154\x5f\151\144\x70\x5f\160\x72\145\x6d\151\165\x6d\137\160\154\141\x6e";
    }
    public static function getSamlRequestPlanType()
    {
        return "\x44\122\125\120\x41\x4c\137\123\x41\115\114\137\111\104\x50\137\x50\114\x55\107\111\116";
    }
}
